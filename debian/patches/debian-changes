This patch file represents the entire difference between the package as shipped
by Debian and the official upstream sources. The goal is to maintain this file
as small as possible, avoiding non-upstreamed patches at all costs.

The Debian packaging is maintained in the following Git repository:

  http://anonscm.debian.org/gitweb/?p=collab-maint/ruby.git

To obtain a view of the individual commits that affect non-Debian-specific
files, you can clone that repository, and from the master branch, run:

  $ ./debian/upstream-changes

--- ruby3.2-3.2.0.orig/enc/trans/emoji.c
+++ ruby3.2-3.2.0/enc/trans/emoji.c
@@ -1,7 +1,7 @@
 /* autogenerated. */
 /* src="transcode-tblgen.rb", len=30823, checksum=59589 */
 /* src="emoji.trans", len=1009, checksum=14571 */
-/* src="emoji-exchange-tbl.rb", len=524703, checksum=40005 */
+/* src="emoji-exchange-tbl.rb", len=515597, checksum=40005 */
 
 #include "transcode_data.h"
 
--- ruby3.2-3.2.0.orig/parse.c
+++ ruby3.2-3.2.0/parse.c
@@ -1,8 +1,8 @@
-/* A Bison parser, made by GNU Bison 3.8.2.  */
+/* A Bison parser, made by GNU Bison 3.5.1.  */
 
 /* Bison implementation for Yacc-like parsers in C
 
-   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
+   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2020 Free Software Foundation,
    Inc.
 
    This program is free software: you can redistribute it and/or modify
@@ -16,7 +16,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -34,10 +34,6 @@
 /* C LALR(1) parser skeleton written by Richard Stallman, by
    simplifying the original so-called "semantic" parser.  */
 
-/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
-   especially those whose name start with YY_ or yy_.  They are
-   private implementation details that can be changed or removed.  */
-
 /* All symbols defined below should begin with yy or YY, to avoid
    infringing on user name space.  This should be done even for local
    variables, as they might otherwise be expanded by user macros.
@@ -45,11 +41,14 @@
    define necessary library symbols; they are noted "INFRINGES ON
    USER NAME SPACE" below.  */
 
-/* Identify Bison output, and Bison version.  */
-#define YYBISON 30802
+/* Undocumented macros, especially those whose name start with YY_,
+   are private implementation details.  Do not rely on them.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
 
-/* Bison version string.  */
-#define YYBISON_VERSION "3.8.2"
+/* Bison version.  */
+#define YYBISON_VERSION "3.5.1"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -1381,7 +1380,7 @@ PRINTF_ARGS(static void parser_compile_e
      (void)0)
 static int looking_at_eol_p(struct parser_params *p);
 
-#line 1385 "parse.c"
+#line 1384 "parse.c"
 
 # ifndef YY_CAST
 #  ifdef __cplusplus
@@ -1404,6 +1403,14 @@ static int looking_at_eol_p(struct parse
 #  endif
 # endif
 
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 1
+#endif
+
 /* Use api.header.include to #include this header
    instead of duplicating it here.  */
 #ifndef YY_YY_Y_TAB_H_INCLUDED
@@ -1418,145 +1425,141 @@ extern int yydebug;
 #endif
 #endif
 
-/* Token kinds.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
   enum yytokentype
   {
-    YYEMPTY = -2,
-    END_OF_INPUT = 0,              /* "end-of-input"  */
-    YYerror = 256,                 /* error  */
-    YYUNDEF = 257,                 /* "invalid token"  */
-    keyword_class = 258,           /* "`class'"  */
-    keyword_module = 259,          /* "`module'"  */
-    keyword_def = 260,             /* "`def'"  */
-    keyword_undef = 261,           /* "`undef'"  */
-    keyword_begin = 262,           /* "`begin'"  */
-    keyword_rescue = 263,          /* "`rescue'"  */
-    keyword_ensure = 264,          /* "`ensure'"  */
-    keyword_end = 265,             /* "`end'"  */
-    keyword_if = 266,              /* "`if'"  */
-    keyword_unless = 267,          /* "`unless'"  */
-    keyword_then = 268,            /* "`then'"  */
-    keyword_elsif = 269,           /* "`elsif'"  */
-    keyword_else = 270,            /* "`else'"  */
-    keyword_case = 271,            /* "`case'"  */
-    keyword_when = 272,            /* "`when'"  */
-    keyword_while = 273,           /* "`while'"  */
-    keyword_until = 274,           /* "`until'"  */
-    keyword_for = 275,             /* "`for'"  */
-    keyword_break = 276,           /* "`break'"  */
-    keyword_next = 277,            /* "`next'"  */
-    keyword_redo = 278,            /* "`redo'"  */
-    keyword_retry = 279,           /* "`retry'"  */
-    keyword_in = 280,              /* "`in'"  */
-    keyword_do = 281,              /* "`do'"  */
-    keyword_do_cond = 282,         /* "`do' for condition"  */
-    keyword_do_block = 283,        /* "`do' for block"  */
-    keyword_do_LAMBDA = 284,       /* "`do' for lambda"  */
-    keyword_return = 285,          /* "`return'"  */
-    keyword_yield = 286,           /* "`yield'"  */
-    keyword_super = 287,           /* "`super'"  */
-    keyword_self = 288,            /* "`self'"  */
-    keyword_nil = 289,             /* "`nil'"  */
-    keyword_true = 290,            /* "`true'"  */
-    keyword_false = 291,           /* "`false'"  */
-    keyword_and = 292,             /* "`and'"  */
-    keyword_or = 293,              /* "`or'"  */
-    keyword_not = 294,             /* "`not'"  */
-    modifier_if = 295,             /* "`if' modifier"  */
-    modifier_unless = 296,         /* "`unless' modifier"  */
-    modifier_while = 297,          /* "`while' modifier"  */
-    modifier_until = 298,          /* "`until' modifier"  */
-    modifier_rescue = 299,         /* "`rescue' modifier"  */
-    keyword_alias = 300,           /* "`alias'"  */
-    keyword_defined = 301,         /* "`defined?'"  */
-    keyword_BEGIN = 302,           /* "`BEGIN'"  */
-    keyword_END = 303,             /* "`END'"  */
-    keyword__LINE__ = 304,         /* "`__LINE__'"  */
-    keyword__FILE__ = 305,         /* "`__FILE__'"  */
-    keyword__ENCODING__ = 306,     /* "`__ENCODING__'"  */
-    tIDENTIFIER = 307,             /* "local variable or method"  */
-    tFID = 308,                    /* "method"  */
-    tGVAR = 309,                   /* "global variable"  */
-    tIVAR = 310,                   /* "instance variable"  */
-    tCONSTANT = 311,               /* "constant"  */
-    tCVAR = 312,                   /* "class variable"  */
-    tLABEL = 313,                  /* "label"  */
-    tINTEGER = 314,                /* "integer literal"  */
-    tFLOAT = 315,                  /* "float literal"  */
-    tRATIONAL = 316,               /* "rational literal"  */
-    tIMAGINARY = 317,              /* "imaginary literal"  */
-    tCHAR = 318,                   /* "char literal"  */
-    tNTH_REF = 319,                /* "numbered reference"  */
-    tBACK_REF = 320,               /* "back reference"  */
-    tSTRING_CONTENT = 321,         /* "literal content"  */
-    tREGEXP_END = 322,             /* tREGEXP_END  */
-    tDUMNY_END = 323,              /* "dummy end"  */
-    tSP = 324,                     /* "escaped space"  */
-    tUPLUS = 132,                  /* "unary+"  */
-    tUMINUS = 133,                 /* "unary-"  */
-    tPOW = 134,                    /* "**"  */
-    tCMP = 135,                    /* "<=>"  */
-    tEQ = 140,                     /* "=="  */
-    tEQQ = 141,                    /* "==="  */
-    tNEQ = 142,                    /* "!="  */
-    tGEQ = 139,                    /* ">="  */
-    tLEQ = 138,                    /* "<="  */
-    tANDOP = 148,                  /* "&&"  */
-    tOROP = 149,                   /* "||"  */
-    tMATCH = 143,                  /* "=~"  */
-    tNMATCH = 144,                 /* "!~"  */
-    tDOT2 = 128,                   /* ".."  */
-    tDOT3 = 129,                   /* "..."  */
-    tBDOT2 = 130,                  /* "(.."  */
-    tBDOT3 = 131,                  /* "(..."  */
-    tAREF = 145,                   /* "[]"  */
-    tASET = 146,                   /* "[]="  */
-    tLSHFT = 136,                  /* "<<"  */
-    tRSHFT = 137,                  /* ">>"  */
-    tANDDOT = 150,                 /* "&."  */
-    tCOLON2 = 147,                 /* "::"  */
-    tCOLON3 = 325,                 /* ":: at EXPR_BEG"  */
-    tOP_ASGN = 326,                /* "operator-assignment"  */
-    tASSOC = 327,                  /* "=>"  */
-    tLPAREN = 328,                 /* "("  */
-    tLPAREN_ARG = 329,             /* "( arg"  */
-    tRPAREN = 330,                 /* ")"  */
-    tLBRACK = 331,                 /* "["  */
-    tLBRACE = 332,                 /* "{"  */
-    tLBRACE_ARG = 333,             /* "{ arg"  */
-    tSTAR = 334,                   /* "*"  */
-    tDSTAR = 335,                  /* "**arg"  */
-    tAMPER = 336,                  /* "&"  */
-    tLAMBDA = 337,                 /* "->"  */
-    tSYMBEG = 338,                 /* "symbol literal"  */
-    tSTRING_BEG = 339,             /* "string literal"  */
-    tXSTRING_BEG = 340,            /* "backtick literal"  */
-    tREGEXP_BEG = 341,             /* "regexp literal"  */
-    tWORDS_BEG = 342,              /* "word list"  */
-    tQWORDS_BEG = 343,             /* "verbatim word list"  */
-    tSYMBOLS_BEG = 344,            /* "symbol list"  */
-    tQSYMBOLS_BEG = 345,           /* "verbatim symbol list"  */
-    tSTRING_END = 346,             /* "terminator"  */
-    tSTRING_DEND = 347,            /* "'}'"  */
-    tSTRING_DBEG = 348,            /* tSTRING_DBEG  */
-    tSTRING_DVAR = 349,            /* tSTRING_DVAR  */
-    tLAMBEG = 350,                 /* tLAMBEG  */
-    tLABEL_END = 351,              /* tLABEL_END  */
-    tIGNORED_NL = 352,             /* tIGNORED_NL  */
-    tCOMMENT = 353,                /* tCOMMENT  */
-    tEMBDOC_BEG = 354,             /* tEMBDOC_BEG  */
-    tEMBDOC = 355,                 /* tEMBDOC  */
-    tEMBDOC_END = 356,             /* tEMBDOC_END  */
-    tHEREDOC_BEG = 357,            /* tHEREDOC_BEG  */
-    tHEREDOC_END = 358,            /* tHEREDOC_END  */
-    k__END__ = 359,                /* k__END__  */
-    tLOWEST = 360,                 /* tLOWEST  */
-    tUMINUS_NUM = 361,             /* tUMINUS_NUM  */
-    tLAST_TOKEN = 362              /* tLAST_TOKEN  */
+    END_OF_INPUT = 0,
+    keyword_class = 258,
+    keyword_module = 259,
+    keyword_def = 260,
+    keyword_undef = 261,
+    keyword_begin = 262,
+    keyword_rescue = 263,
+    keyword_ensure = 264,
+    keyword_end = 265,
+    keyword_if = 266,
+    keyword_unless = 267,
+    keyword_then = 268,
+    keyword_elsif = 269,
+    keyword_else = 270,
+    keyword_case = 271,
+    keyword_when = 272,
+    keyword_while = 273,
+    keyword_until = 274,
+    keyword_for = 275,
+    keyword_break = 276,
+    keyword_next = 277,
+    keyword_redo = 278,
+    keyword_retry = 279,
+    keyword_in = 280,
+    keyword_do = 281,
+    keyword_do_cond = 282,
+    keyword_do_block = 283,
+    keyword_do_LAMBDA = 284,
+    keyword_return = 285,
+    keyword_yield = 286,
+    keyword_super = 287,
+    keyword_self = 288,
+    keyword_nil = 289,
+    keyword_true = 290,
+    keyword_false = 291,
+    keyword_and = 292,
+    keyword_or = 293,
+    keyword_not = 294,
+    modifier_if = 295,
+    modifier_unless = 296,
+    modifier_while = 297,
+    modifier_until = 298,
+    modifier_rescue = 299,
+    keyword_alias = 300,
+    keyword_defined = 301,
+    keyword_BEGIN = 302,
+    keyword_END = 303,
+    keyword__LINE__ = 304,
+    keyword__FILE__ = 305,
+    keyword__ENCODING__ = 306,
+    tIDENTIFIER = 307,
+    tFID = 308,
+    tGVAR = 309,
+    tIVAR = 310,
+    tCONSTANT = 311,
+    tCVAR = 312,
+    tLABEL = 313,
+    tINTEGER = 314,
+    tFLOAT = 315,
+    tRATIONAL = 316,
+    tIMAGINARY = 317,
+    tCHAR = 318,
+    tNTH_REF = 319,
+    tBACK_REF = 320,
+    tSTRING_CONTENT = 321,
+    tREGEXP_END = 322,
+    tDUMNY_END = 323,
+    tSP = 324,
+    tUPLUS = 132,
+    tUMINUS = 133,
+    tPOW = 134,
+    tCMP = 135,
+    tEQ = 140,
+    tEQQ = 141,
+    tNEQ = 142,
+    tGEQ = 139,
+    tLEQ = 138,
+    tANDOP = 148,
+    tOROP = 149,
+    tMATCH = 143,
+    tNMATCH = 144,
+    tDOT2 = 128,
+    tDOT3 = 129,
+    tBDOT2 = 130,
+    tBDOT3 = 131,
+    tAREF = 145,
+    tASET = 146,
+    tLSHFT = 136,
+    tRSHFT = 137,
+    tANDDOT = 150,
+    tCOLON2 = 147,
+    tCOLON3 = 325,
+    tOP_ASGN = 326,
+    tASSOC = 327,
+    tLPAREN = 328,
+    tLPAREN_ARG = 329,
+    tRPAREN = 330,
+    tLBRACK = 331,
+    tLBRACE = 332,
+    tLBRACE_ARG = 333,
+    tSTAR = 334,
+    tDSTAR = 335,
+    tAMPER = 336,
+    tLAMBDA = 337,
+    tSYMBEG = 338,
+    tSTRING_BEG = 339,
+    tXSTRING_BEG = 340,
+    tREGEXP_BEG = 341,
+    tWORDS_BEG = 342,
+    tQWORDS_BEG = 343,
+    tSYMBOLS_BEG = 344,
+    tQSYMBOLS_BEG = 345,
+    tSTRING_END = 346,
+    tSTRING_DEND = 347,
+    tSTRING_DBEG = 348,
+    tSTRING_DVAR = 349,
+    tLAMBEG = 350,
+    tLABEL_END = 351,
+    tIGNORED_NL = 352,
+    tCOMMENT = 353,
+    tEMBDOC_BEG = 354,
+    tEMBDOC = 355,
+    tEMBDOC_END = 356,
+    tHEREDOC_BEG = 357,
+    tHEREDOC_END = 358,
+    k__END__ = 359,
+    tLOWEST = 360,
+    tUMINUS_NUM = 361,
+    tLAST_TOKEN = 362
   };
-  typedef enum yytokentype yytoken_kind_t;
 #endif
 
 /* Value type.  */
@@ -1574,7 +1577,7 @@ union YYSTYPE
     struct rb_strterm_struct *strterm;
     struct lex_context ctxt;
 
-#line 1576 "parse.c"
+#line 1579 "parse.c"
 
 };
 typedef union YYSTYPE YYSTYPE;
@@ -1598,456 +1601,9 @@ struct YYLTYPE
 
 
 
-
 int yyparse (struct parser_params *p);
 
-
 #endif /* !YY_YY_Y_TAB_H_INCLUDED  */
-/* Symbol kind.  */
-enum yysymbol_kind_t
-{
-  YYSYMBOL_YYEMPTY = -2,
-  YYSYMBOL_YYEOF = 0,                      /* "end-of-input"  */
-  YYSYMBOL_YYerror = 1,                    /* error  */
-  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
-  YYSYMBOL_keyword_class = 3,              /* "`class'"  */
-  YYSYMBOL_keyword_module = 4,             /* "`module'"  */
-  YYSYMBOL_keyword_def = 5,                /* "`def'"  */
-  YYSYMBOL_keyword_undef = 6,              /* "`undef'"  */
-  YYSYMBOL_keyword_begin = 7,              /* "`begin'"  */
-  YYSYMBOL_keyword_rescue = 8,             /* "`rescue'"  */
-  YYSYMBOL_keyword_ensure = 9,             /* "`ensure'"  */
-  YYSYMBOL_keyword_end = 10,               /* "`end'"  */
-  YYSYMBOL_keyword_if = 11,                /* "`if'"  */
-  YYSYMBOL_keyword_unless = 12,            /* "`unless'"  */
-  YYSYMBOL_keyword_then = 13,              /* "`then'"  */
-  YYSYMBOL_keyword_elsif = 14,             /* "`elsif'"  */
-  YYSYMBOL_keyword_else = 15,              /* "`else'"  */
-  YYSYMBOL_keyword_case = 16,              /* "`case'"  */
-  YYSYMBOL_keyword_when = 17,              /* "`when'"  */
-  YYSYMBOL_keyword_while = 18,             /* "`while'"  */
-  YYSYMBOL_keyword_until = 19,             /* "`until'"  */
-  YYSYMBOL_keyword_for = 20,               /* "`for'"  */
-  YYSYMBOL_keyword_break = 21,             /* "`break'"  */
-  YYSYMBOL_keyword_next = 22,              /* "`next'"  */
-  YYSYMBOL_keyword_redo = 23,              /* "`redo'"  */
-  YYSYMBOL_keyword_retry = 24,             /* "`retry'"  */
-  YYSYMBOL_keyword_in = 25,                /* "`in'"  */
-  YYSYMBOL_keyword_do = 26,                /* "`do'"  */
-  YYSYMBOL_keyword_do_cond = 27,           /* "`do' for condition"  */
-  YYSYMBOL_keyword_do_block = 28,          /* "`do' for block"  */
-  YYSYMBOL_keyword_do_LAMBDA = 29,         /* "`do' for lambda"  */
-  YYSYMBOL_keyword_return = 30,            /* "`return'"  */
-  YYSYMBOL_keyword_yield = 31,             /* "`yield'"  */
-  YYSYMBOL_keyword_super = 32,             /* "`super'"  */
-  YYSYMBOL_keyword_self = 33,              /* "`self'"  */
-  YYSYMBOL_keyword_nil = 34,               /* "`nil'"  */
-  YYSYMBOL_keyword_true = 35,              /* "`true'"  */
-  YYSYMBOL_keyword_false = 36,             /* "`false'"  */
-  YYSYMBOL_keyword_and = 37,               /* "`and'"  */
-  YYSYMBOL_keyword_or = 38,                /* "`or'"  */
-  YYSYMBOL_keyword_not = 39,               /* "`not'"  */
-  YYSYMBOL_modifier_if = 40,               /* "`if' modifier"  */
-  YYSYMBOL_modifier_unless = 41,           /* "`unless' modifier"  */
-  YYSYMBOL_modifier_while = 42,            /* "`while' modifier"  */
-  YYSYMBOL_modifier_until = 43,            /* "`until' modifier"  */
-  YYSYMBOL_modifier_rescue = 44,           /* "`rescue' modifier"  */
-  YYSYMBOL_keyword_alias = 45,             /* "`alias'"  */
-  YYSYMBOL_keyword_defined = 46,           /* "`defined?'"  */
-  YYSYMBOL_keyword_BEGIN = 47,             /* "`BEGIN'"  */
-  YYSYMBOL_keyword_END = 48,               /* "`END'"  */
-  YYSYMBOL_keyword__LINE__ = 49,           /* "`__LINE__'"  */
-  YYSYMBOL_keyword__FILE__ = 50,           /* "`__FILE__'"  */
-  YYSYMBOL_keyword__ENCODING__ = 51,       /* "`__ENCODING__'"  */
-  YYSYMBOL_tIDENTIFIER = 52,               /* "local variable or method"  */
-  YYSYMBOL_tFID = 53,                      /* "method"  */
-  YYSYMBOL_tGVAR = 54,                     /* "global variable"  */
-  YYSYMBOL_tIVAR = 55,                     /* "instance variable"  */
-  YYSYMBOL_tCONSTANT = 56,                 /* "constant"  */
-  YYSYMBOL_tCVAR = 57,                     /* "class variable"  */
-  YYSYMBOL_tLABEL = 58,                    /* "label"  */
-  YYSYMBOL_tINTEGER = 59,                  /* "integer literal"  */
-  YYSYMBOL_tFLOAT = 60,                    /* "float literal"  */
-  YYSYMBOL_tRATIONAL = 61,                 /* "rational literal"  */
-  YYSYMBOL_tIMAGINARY = 62,                /* "imaginary literal"  */
-  YYSYMBOL_tCHAR = 63,                     /* "char literal"  */
-  YYSYMBOL_tNTH_REF = 64,                  /* "numbered reference"  */
-  YYSYMBOL_tBACK_REF = 65,                 /* "back reference"  */
-  YYSYMBOL_tSTRING_CONTENT = 66,           /* "literal content"  */
-  YYSYMBOL_tREGEXP_END = 67,               /* tREGEXP_END  */
-  YYSYMBOL_tDUMNY_END = 68,                /* "dummy end"  */
-  YYSYMBOL_69_ = 69,                       /* '.'  */
-  YYSYMBOL_70_backslash_ = 70,             /* "backslash"  */
-  YYSYMBOL_tSP = 71,                       /* "escaped space"  */
-  YYSYMBOL_72_escaped_horizontal_tab_ = 72, /* "escaped horizontal tab"  */
-  YYSYMBOL_73_escaped_form_feed_ = 73,     /* "escaped form feed"  */
-  YYSYMBOL_74_escaped_carriage_return_ = 74, /* "escaped carriage return"  */
-  YYSYMBOL_75_escaped_vertical_tab_ = 75,  /* "escaped vertical tab"  */
-  YYSYMBOL_tUPLUS = 76,                    /* "unary+"  */
-  YYSYMBOL_tUMINUS = 77,                   /* "unary-"  */
-  YYSYMBOL_tPOW = 78,                      /* "**"  */
-  YYSYMBOL_tCMP = 79,                      /* "<=>"  */
-  YYSYMBOL_tEQ = 80,                       /* "=="  */
-  YYSYMBOL_tEQQ = 81,                      /* "==="  */
-  YYSYMBOL_tNEQ = 82,                      /* "!="  */
-  YYSYMBOL_tGEQ = 83,                      /* ">="  */
-  YYSYMBOL_tLEQ = 84,                      /* "<="  */
-  YYSYMBOL_tANDOP = 85,                    /* "&&"  */
-  YYSYMBOL_tOROP = 86,                     /* "||"  */
-  YYSYMBOL_tMATCH = 87,                    /* "=~"  */
-  YYSYMBOL_tNMATCH = 88,                   /* "!~"  */
-  YYSYMBOL_tDOT2 = 89,                     /* ".."  */
-  YYSYMBOL_tDOT3 = 90,                     /* "..."  */
-  YYSYMBOL_tBDOT2 = 91,                    /* "(.."  */
-  YYSYMBOL_tBDOT3 = 92,                    /* "(..."  */
-  YYSYMBOL_tAREF = 93,                     /* "[]"  */
-  YYSYMBOL_tASET = 94,                     /* "[]="  */
-  YYSYMBOL_tLSHFT = 95,                    /* "<<"  */
-  YYSYMBOL_tRSHFT = 96,                    /* ">>"  */
-  YYSYMBOL_tANDDOT = 97,                   /* "&."  */
-  YYSYMBOL_tCOLON2 = 98,                   /* "::"  */
-  YYSYMBOL_tCOLON3 = 99,                   /* ":: at EXPR_BEG"  */
-  YYSYMBOL_tOP_ASGN = 100,                 /* "operator-assignment"  */
-  YYSYMBOL_tASSOC = 101,                   /* "=>"  */
-  YYSYMBOL_tLPAREN = 102,                  /* "("  */
-  YYSYMBOL_tLPAREN_ARG = 103,              /* "( arg"  */
-  YYSYMBOL_tRPAREN = 104,                  /* ")"  */
-  YYSYMBOL_tLBRACK = 105,                  /* "["  */
-  YYSYMBOL_tLBRACE = 106,                  /* "{"  */
-  YYSYMBOL_tLBRACE_ARG = 107,              /* "{ arg"  */
-  YYSYMBOL_tSTAR = 108,                    /* "*"  */
-  YYSYMBOL_tDSTAR = 109,                   /* "**arg"  */
-  YYSYMBOL_tAMPER = 110,                   /* "&"  */
-  YYSYMBOL_tLAMBDA = 111,                  /* "->"  */
-  YYSYMBOL_tSYMBEG = 112,                  /* "symbol literal"  */
-  YYSYMBOL_tSTRING_BEG = 113,              /* "string literal"  */
-  YYSYMBOL_tXSTRING_BEG = 114,             /* "backtick literal"  */
-  YYSYMBOL_tREGEXP_BEG = 115,              /* "regexp literal"  */
-  YYSYMBOL_tWORDS_BEG = 116,               /* "word list"  */
-  YYSYMBOL_tQWORDS_BEG = 117,              /* "verbatim word list"  */
-  YYSYMBOL_tSYMBOLS_BEG = 118,             /* "symbol list"  */
-  YYSYMBOL_tQSYMBOLS_BEG = 119,            /* "verbatim symbol list"  */
-  YYSYMBOL_tSTRING_END = 120,              /* "terminator"  */
-  YYSYMBOL_tSTRING_DEND = 121,             /* "'}'"  */
-  YYSYMBOL_tSTRING_DBEG = 122,             /* tSTRING_DBEG  */
-  YYSYMBOL_tSTRING_DVAR = 123,             /* tSTRING_DVAR  */
-  YYSYMBOL_tLAMBEG = 124,                  /* tLAMBEG  */
-  YYSYMBOL_tLABEL_END = 125,               /* tLABEL_END  */
-  YYSYMBOL_tIGNORED_NL = 126,              /* tIGNORED_NL  */
-  YYSYMBOL_tCOMMENT = 127,                 /* tCOMMENT  */
-  YYSYMBOL_tEMBDOC_BEG = 128,              /* tEMBDOC_BEG  */
-  YYSYMBOL_tEMBDOC = 129,                  /* tEMBDOC  */
-  YYSYMBOL_tEMBDOC_END = 130,              /* tEMBDOC_END  */
-  YYSYMBOL_tHEREDOC_BEG = 131,             /* tHEREDOC_BEG  */
-  YYSYMBOL_tHEREDOC_END = 132,             /* tHEREDOC_END  */
-  YYSYMBOL_k__END__ = 133,                 /* k__END__  */
-  YYSYMBOL_tLOWEST = 134,                  /* tLOWEST  */
-  YYSYMBOL_135_ = 135,                     /* '='  */
-  YYSYMBOL_136_ = 136,                     /* '?'  */
-  YYSYMBOL_137_ = 137,                     /* ':'  */
-  YYSYMBOL_138_ = 138,                     /* '>'  */
-  YYSYMBOL_139_ = 139,                     /* '<'  */
-  YYSYMBOL_140_ = 140,                     /* '|'  */
-  YYSYMBOL_141_ = 141,                     /* '^'  */
-  YYSYMBOL_142_ = 142,                     /* '&'  */
-  YYSYMBOL_143_ = 143,                     /* '+'  */
-  YYSYMBOL_144_ = 144,                     /* '-'  */
-  YYSYMBOL_145_ = 145,                     /* '*'  */
-  YYSYMBOL_146_ = 146,                     /* '/'  */
-  YYSYMBOL_147_ = 147,                     /* '%'  */
-  YYSYMBOL_tUMINUS_NUM = 148,              /* tUMINUS_NUM  */
-  YYSYMBOL_149_ = 149,                     /* '!'  */
-  YYSYMBOL_150_ = 150,                     /* '~'  */
-  YYSYMBOL_tLAST_TOKEN = 151,              /* tLAST_TOKEN  */
-  YYSYMBOL_152_ = 152,                     /* '{'  */
-  YYSYMBOL_153_ = 153,                     /* '}'  */
-  YYSYMBOL_154_ = 154,                     /* '['  */
-  YYSYMBOL_155_ = 155,                     /* ','  */
-  YYSYMBOL_156_ = 156,                     /* '`'  */
-  YYSYMBOL_157_ = 157,                     /* '('  */
-  YYSYMBOL_158_ = 158,                     /* ')'  */
-  YYSYMBOL_159_ = 159,                     /* ']'  */
-  YYSYMBOL_160_ = 160,                     /* ';'  */
-  YYSYMBOL_161_ = 161,                     /* ' '  */
-  YYSYMBOL_162_n_ = 162,                   /* '\n'  */
-  YYSYMBOL_YYACCEPT = 163,                 /* $accept  */
-  YYSYMBOL_program = 164,                  /* program  */
-  YYSYMBOL_165_1 = 165,                    /* $@1  */
-  YYSYMBOL_top_compstmt = 166,             /* top_compstmt  */
-  YYSYMBOL_top_stmts = 167,                /* top_stmts  */
-  YYSYMBOL_top_stmt = 168,                 /* top_stmt  */
-  YYSYMBOL_begin_block = 169,              /* begin_block  */
-  YYSYMBOL_bodystmt = 170,                 /* bodystmt  */
-  YYSYMBOL_171_2 = 171,                    /* $@2  */
-  YYSYMBOL_compstmt = 172,                 /* compstmt  */
-  YYSYMBOL_stmts = 173,                    /* stmts  */
-  YYSYMBOL_stmt_or_begin = 174,            /* stmt_or_begin  */
-  YYSYMBOL_175_3 = 175,                    /* $@3  */
-  YYSYMBOL_stmt = 176,                     /* stmt  */
-  YYSYMBOL_177_4 = 177,                    /* $@4  */
-  YYSYMBOL_command_asgn = 178,             /* command_asgn  */
-  YYSYMBOL_command_rhs = 179,              /* command_rhs  */
-  YYSYMBOL_expr = 180,                     /* expr  */
-  YYSYMBOL_181_5 = 181,                    /* @5  */
-  YYSYMBOL_182_6 = 182,                    /* @6  */
-  YYSYMBOL_183_7 = 183,                    /* @7  */
-  YYSYMBOL_184_8 = 184,                    /* @8  */
-  YYSYMBOL_def_name = 185,                 /* def_name  */
-  YYSYMBOL_defn_head = 186,                /* defn_head  */
-  YYSYMBOL_defs_head = 187,                /* defs_head  */
-  YYSYMBOL_188_9 = 188,                    /* $@9  */
-  YYSYMBOL_expr_value = 189,               /* expr_value  */
-  YYSYMBOL_expr_value_do = 190,            /* expr_value_do  */
-  YYSYMBOL_191_10 = 191,                   /* $@10  */
-  YYSYMBOL_192_11 = 192,                   /* $@11  */
-  YYSYMBOL_command_call = 193,             /* command_call  */
-  YYSYMBOL_block_command = 194,            /* block_command  */
-  YYSYMBOL_cmd_brace_block = 195,          /* cmd_brace_block  */
-  YYSYMBOL_fcall = 196,                    /* fcall  */
-  YYSYMBOL_command = 197,                  /* command  */
-  YYSYMBOL_mlhs = 198,                     /* mlhs  */
-  YYSYMBOL_mlhs_inner = 199,               /* mlhs_inner  */
-  YYSYMBOL_mlhs_basic = 200,               /* mlhs_basic  */
-  YYSYMBOL_mlhs_item = 201,                /* mlhs_item  */
-  YYSYMBOL_mlhs_head = 202,                /* mlhs_head  */
-  YYSYMBOL_mlhs_post = 203,                /* mlhs_post  */
-  YYSYMBOL_mlhs_node = 204,                /* mlhs_node  */
-  YYSYMBOL_lhs = 205,                      /* lhs  */
-  YYSYMBOL_cname = 206,                    /* cname  */
-  YYSYMBOL_cpath = 207,                    /* cpath  */
-  YYSYMBOL_fname = 208,                    /* fname  */
-  YYSYMBOL_fitem = 209,                    /* fitem  */
-  YYSYMBOL_undef_list = 210,               /* undef_list  */
-  YYSYMBOL_211_12 = 211,                   /* $@12  */
-  YYSYMBOL_op = 212,                       /* op  */
-  YYSYMBOL_reswords = 213,                 /* reswords  */
-  YYSYMBOL_arg = 214,                      /* arg  */
-  YYSYMBOL_215_13 = 215,                   /* $@13  */
-  YYSYMBOL_relop = 216,                    /* relop  */
-  YYSYMBOL_rel_expr = 217,                 /* rel_expr  */
-  YYSYMBOL_lex_ctxt = 218,                 /* lex_ctxt  */
-  YYSYMBOL_arg_value = 219,                /* arg_value  */
-  YYSYMBOL_aref_args = 220,                /* aref_args  */
-  YYSYMBOL_arg_rhs = 221,                  /* arg_rhs  */
-  YYSYMBOL_paren_args = 222,               /* paren_args  */
-  YYSYMBOL_opt_paren_args = 223,           /* opt_paren_args  */
-  YYSYMBOL_opt_call_args = 224,            /* opt_call_args  */
-  YYSYMBOL_call_args = 225,                /* call_args  */
-  YYSYMBOL_command_args = 226,             /* command_args  */
-  YYSYMBOL_227_14 = 227,                   /* $@14  */
-  YYSYMBOL_block_arg = 228,                /* block_arg  */
-  YYSYMBOL_opt_block_arg = 229,            /* opt_block_arg  */
-  YYSYMBOL_args = 230,                     /* args  */
-  YYSYMBOL_mrhs_arg = 231,                 /* mrhs_arg  */
-  YYSYMBOL_mrhs = 232,                     /* mrhs  */
-  YYSYMBOL_primary = 233,                  /* primary  */
-  YYSYMBOL_234_15 = 234,                   /* $@15  */
-  YYSYMBOL_235_16 = 235,                   /* $@16  */
-  YYSYMBOL_236_17 = 236,                   /* $@17  */
-  YYSYMBOL_237_18 = 237,                   /* $@18  */
-  YYSYMBOL_238_19 = 238,                   /* @19  */
-  YYSYMBOL_239_20 = 239,                   /* @20  */
-  YYSYMBOL_240_21 = 240,                   /* $@21  */
-  YYSYMBOL_241_22 = 241,                   /* $@22  */
-  YYSYMBOL_242_23 = 242,                   /* $@23  */
-  YYSYMBOL_243_24 = 243,                   /* $@24  */
-  YYSYMBOL_244_25 = 244,                   /* $@25  */
-  YYSYMBOL_primary_value = 245,            /* primary_value  */
-  YYSYMBOL_k_begin = 246,                  /* k_begin  */
-  YYSYMBOL_k_if = 247,                     /* k_if  */
-  YYSYMBOL_k_unless = 248,                 /* k_unless  */
-  YYSYMBOL_k_while = 249,                  /* k_while  */
-  YYSYMBOL_k_until = 250,                  /* k_until  */
-  YYSYMBOL_k_case = 251,                   /* k_case  */
-  YYSYMBOL_k_for = 252,                    /* k_for  */
-  YYSYMBOL_k_class = 253,                  /* k_class  */
-  YYSYMBOL_k_module = 254,                 /* k_module  */
-  YYSYMBOL_k_def = 255,                    /* k_def  */
-  YYSYMBOL_k_do = 256,                     /* k_do  */
-  YYSYMBOL_k_do_block = 257,               /* k_do_block  */
-  YYSYMBOL_k_rescue = 258,                 /* k_rescue  */
-  YYSYMBOL_k_ensure = 259,                 /* k_ensure  */
-  YYSYMBOL_k_when = 260,                   /* k_when  */
-  YYSYMBOL_k_else = 261,                   /* k_else  */
-  YYSYMBOL_k_elsif = 262,                  /* k_elsif  */
-  YYSYMBOL_k_end = 263,                    /* k_end  */
-  YYSYMBOL_k_return = 264,                 /* k_return  */
-  YYSYMBOL_then = 265,                     /* then  */
-  YYSYMBOL_do = 266,                       /* do  */
-  YYSYMBOL_if_tail = 267,                  /* if_tail  */
-  YYSYMBOL_opt_else = 268,                 /* opt_else  */
-  YYSYMBOL_for_var = 269,                  /* for_var  */
-  YYSYMBOL_f_marg = 270,                   /* f_marg  */
-  YYSYMBOL_f_marg_list = 271,              /* f_marg_list  */
-  YYSYMBOL_f_margs = 272,                  /* f_margs  */
-  YYSYMBOL_f_rest_marg = 273,              /* f_rest_marg  */
-  YYSYMBOL_f_any_kwrest = 274,             /* f_any_kwrest  */
-  YYSYMBOL_f_eq = 275,                     /* f_eq  */
-  YYSYMBOL_276_26 = 276,                   /* $@26  */
-  YYSYMBOL_block_args_tail = 277,          /* block_args_tail  */
-  YYSYMBOL_opt_block_args_tail = 278,      /* opt_block_args_tail  */
-  YYSYMBOL_excessed_comma = 279,           /* excessed_comma  */
-  YYSYMBOL_block_param = 280,              /* block_param  */
-  YYSYMBOL_opt_block_param = 281,          /* opt_block_param  */
-  YYSYMBOL_block_param_def = 282,          /* block_param_def  */
-  YYSYMBOL_opt_bv_decl = 283,              /* opt_bv_decl  */
-  YYSYMBOL_bv_decls = 284,                 /* bv_decls  */
-  YYSYMBOL_bvar = 285,                     /* bvar  */
-  YYSYMBOL_lambda = 286,                   /* lambda  */
-  YYSYMBOL_287_27 = 287,                   /* @27  */
-  YYSYMBOL_288_28 = 288,                   /* @28  */
-  YYSYMBOL_289_29 = 289,                   /* @29  */
-  YYSYMBOL_290_30 = 290,                   /* $@30  */
-  YYSYMBOL_f_larglist = 291,               /* f_larglist  */
-  YYSYMBOL_lambda_body = 292,              /* lambda_body  */
-  YYSYMBOL_293_31 = 293,                   /* $@31  */
-  YYSYMBOL_do_block = 294,                 /* do_block  */
-  YYSYMBOL_block_call = 295,               /* block_call  */
-  YYSYMBOL_method_call = 296,              /* method_call  */
-  YYSYMBOL_brace_block = 297,              /* brace_block  */
-  YYSYMBOL_brace_body = 298,               /* brace_body  */
-  YYSYMBOL_299_32 = 299,                   /* @32  */
-  YYSYMBOL_300_33 = 300,                   /* @33  */
-  YYSYMBOL_301_34 = 301,                   /* @34  */
-  YYSYMBOL_do_body = 302,                  /* do_body  */
-  YYSYMBOL_303_35 = 303,                   /* @35  */
-  YYSYMBOL_304_36 = 304,                   /* @36  */
-  YYSYMBOL_305_37 = 305,                   /* @37  */
-  YYSYMBOL_case_args = 306,                /* case_args  */
-  YYSYMBOL_case_body = 307,                /* case_body  */
-  YYSYMBOL_cases = 308,                    /* cases  */
-  YYSYMBOL_p_case_body = 309,              /* p_case_body  */
-  YYSYMBOL_310_38 = 310,                   /* @38  */
-  YYSYMBOL_311_39 = 311,                   /* @39  */
-  YYSYMBOL_312_40 = 312,                   /* $@40  */
-  YYSYMBOL_p_cases = 313,                  /* p_cases  */
-  YYSYMBOL_p_top_expr = 314,               /* p_top_expr  */
-  YYSYMBOL_p_top_expr_body = 315,          /* p_top_expr_body  */
-  YYSYMBOL_p_expr = 316,                   /* p_expr  */
-  YYSYMBOL_p_as = 317,                     /* p_as  */
-  YYSYMBOL_p_alt = 318,                    /* p_alt  */
-  YYSYMBOL_p_lparen = 319,                 /* p_lparen  */
-  YYSYMBOL_p_lbracket = 320,               /* p_lbracket  */
-  YYSYMBOL_p_expr_basic = 321,             /* p_expr_basic  */
-  YYSYMBOL_322_41 = 322,                   /* @41  */
-  YYSYMBOL_323_42 = 323,                   /* @42  */
-  YYSYMBOL_p_args = 324,                   /* p_args  */
-  YYSYMBOL_p_args_head = 325,              /* p_args_head  */
-  YYSYMBOL_p_args_tail = 326,              /* p_args_tail  */
-  YYSYMBOL_p_find = 327,                   /* p_find  */
-  YYSYMBOL_p_rest = 328,                   /* p_rest  */
-  YYSYMBOL_p_args_post = 329,              /* p_args_post  */
-  YYSYMBOL_p_arg = 330,                    /* p_arg  */
-  YYSYMBOL_p_kwargs = 331,                 /* p_kwargs  */
-  YYSYMBOL_p_kwarg = 332,                  /* p_kwarg  */
-  YYSYMBOL_p_kw = 333,                     /* p_kw  */
-  YYSYMBOL_p_kw_label = 334,               /* p_kw_label  */
-  YYSYMBOL_p_kwrest = 335,                 /* p_kwrest  */
-  YYSYMBOL_p_kwnorest = 336,               /* p_kwnorest  */
-  YYSYMBOL_p_any_kwrest = 337,             /* p_any_kwrest  */
-  YYSYMBOL_p_value = 338,                  /* p_value  */
-  YYSYMBOL_p_primitive = 339,              /* p_primitive  */
-  YYSYMBOL_p_variable = 340,               /* p_variable  */
-  YYSYMBOL_p_var_ref = 341,                /* p_var_ref  */
-  YYSYMBOL_p_expr_ref = 342,               /* p_expr_ref  */
-  YYSYMBOL_p_const = 343,                  /* p_const  */
-  YYSYMBOL_opt_rescue = 344,               /* opt_rescue  */
-  YYSYMBOL_exc_list = 345,                 /* exc_list  */
-  YYSYMBOL_exc_var = 346,                  /* exc_var  */
-  YYSYMBOL_opt_ensure = 347,               /* opt_ensure  */
-  YYSYMBOL_literal = 348,                  /* literal  */
-  YYSYMBOL_strings = 349,                  /* strings  */
-  YYSYMBOL_string = 350,                   /* string  */
-  YYSYMBOL_string1 = 351,                  /* string1  */
-  YYSYMBOL_xstring = 352,                  /* xstring  */
-  YYSYMBOL_regexp = 353,                   /* regexp  */
-  YYSYMBOL_words = 354,                    /* words  */
-  YYSYMBOL_word_list = 355,                /* word_list  */
-  YYSYMBOL_word = 356,                     /* word  */
-  YYSYMBOL_symbols = 357,                  /* symbols  */
-  YYSYMBOL_symbol_list = 358,              /* symbol_list  */
-  YYSYMBOL_qwords = 359,                   /* qwords  */
-  YYSYMBOL_qsymbols = 360,                 /* qsymbols  */
-  YYSYMBOL_qword_list = 361,               /* qword_list  */
-  YYSYMBOL_qsym_list = 362,                /* qsym_list  */
-  YYSYMBOL_string_contents = 363,          /* string_contents  */
-  YYSYMBOL_xstring_contents = 364,         /* xstring_contents  */
-  YYSYMBOL_regexp_contents = 365,          /* regexp_contents  */
-  YYSYMBOL_string_content = 366,           /* string_content  */
-  YYSYMBOL_367_43 = 367,                   /* @43  */
-  YYSYMBOL_368_44 = 368,                   /* $@44  */
-  YYSYMBOL_369_45 = 369,                   /* @45  */
-  YYSYMBOL_370_46 = 370,                   /* @46  */
-  YYSYMBOL_371_47 = 371,                   /* @47  */
-  YYSYMBOL_372_48 = 372,                   /* @48  */
-  YYSYMBOL_string_dvar = 373,              /* string_dvar  */
-  YYSYMBOL_symbol = 374,                   /* symbol  */
-  YYSYMBOL_ssym = 375,                     /* ssym  */
-  YYSYMBOL_sym = 376,                      /* sym  */
-  YYSYMBOL_dsym = 377,                     /* dsym  */
-  YYSYMBOL_numeric = 378,                  /* numeric  */
-  YYSYMBOL_simple_numeric = 379,           /* simple_numeric  */
-  YYSYMBOL_nonlocal_var = 380,             /* nonlocal_var  */
-  YYSYMBOL_user_variable = 381,            /* user_variable  */
-  YYSYMBOL_keyword_variable = 382,         /* keyword_variable  */
-  YYSYMBOL_var_ref = 383,                  /* var_ref  */
-  YYSYMBOL_var_lhs = 384,                  /* var_lhs  */
-  YYSYMBOL_backref = 385,                  /* backref  */
-  YYSYMBOL_superclass = 386,               /* superclass  */
-  YYSYMBOL_387_49 = 387,                   /* $@49  */
-  YYSYMBOL_f_opt_paren_args = 388,         /* f_opt_paren_args  */
-  YYSYMBOL_f_paren_args = 389,             /* f_paren_args  */
-  YYSYMBOL_f_arglist = 390,                /* f_arglist  */
-  YYSYMBOL_391_50 = 391,                   /* @50  */
-  YYSYMBOL_args_tail = 392,                /* args_tail  */
-  YYSYMBOL_opt_args_tail = 393,            /* opt_args_tail  */
-  YYSYMBOL_f_args = 394,                   /* f_args  */
-  YYSYMBOL_args_forward = 395,             /* args_forward  */
-  YYSYMBOL_f_bad_arg = 396,                /* f_bad_arg  */
-  YYSYMBOL_f_norm_arg = 397,               /* f_norm_arg  */
-  YYSYMBOL_f_arg_asgn = 398,               /* f_arg_asgn  */
-  YYSYMBOL_f_arg_item = 399,               /* f_arg_item  */
-  YYSYMBOL_f_arg = 400,                    /* f_arg  */
-  YYSYMBOL_f_label = 401,                  /* f_label  */
-  YYSYMBOL_f_kw = 402,                     /* f_kw  */
-  YYSYMBOL_f_block_kw = 403,               /* f_block_kw  */
-  YYSYMBOL_f_block_kwarg = 404,            /* f_block_kwarg  */
-  YYSYMBOL_f_kwarg = 405,                  /* f_kwarg  */
-  YYSYMBOL_kwrest_mark = 406,              /* kwrest_mark  */
-  YYSYMBOL_f_no_kwarg = 407,               /* f_no_kwarg  */
-  YYSYMBOL_f_kwrest = 408,                 /* f_kwrest  */
-  YYSYMBOL_f_opt = 409,                    /* f_opt  */
-  YYSYMBOL_f_block_opt = 410,              /* f_block_opt  */
-  YYSYMBOL_f_block_optarg = 411,           /* f_block_optarg  */
-  YYSYMBOL_f_optarg = 412,                 /* f_optarg  */
-  YYSYMBOL_restarg_mark = 413,             /* restarg_mark  */
-  YYSYMBOL_f_rest_arg = 414,               /* f_rest_arg  */
-  YYSYMBOL_blkarg_mark = 415,              /* blkarg_mark  */
-  YYSYMBOL_f_block_arg = 416,              /* f_block_arg  */
-  YYSYMBOL_opt_f_block_arg = 417,          /* opt_f_block_arg  */
-  YYSYMBOL_singleton = 418,                /* singleton  */
-  YYSYMBOL_419_51 = 419,                   /* $@51  */
-  YYSYMBOL_assoc_list = 420,               /* assoc_list  */
-  YYSYMBOL_assocs = 421,                   /* assocs  */
-  YYSYMBOL_assoc = 422,                    /* assoc  */
-  YYSYMBOL_operation = 423,                /* operation  */
-  YYSYMBOL_operation2 = 424,               /* operation2  */
-  YYSYMBOL_operation3 = 425,               /* operation3  */
-  YYSYMBOL_dot_or_colon = 426,             /* dot_or_colon  */
-  YYSYMBOL_call_op = 427,                  /* call_op  */
-  YYSYMBOL_call_op2 = 428,                 /* call_op2  */
-  YYSYMBOL_opt_terms = 429,                /* opt_terms  */
-  YYSYMBOL_opt_nl = 430,                   /* opt_nl  */
-  YYSYMBOL_rparen = 431,                   /* rparen  */
-  YYSYMBOL_rbracket = 432,                 /* rbracket  */
-  YYSYMBOL_rbrace = 433,                   /* rbrace  */
-  YYSYMBOL_trailer = 434,                  /* trailer  */
-  YYSYMBOL_term = 435,                     /* term  */
-  YYSYMBOL_terms = 436,                    /* terms  */
-  YYSYMBOL_none = 437                      /* none  */
-};
-typedef enum yysymbol_kind_t yysymbol_kind_t;
-
 
 
 
@@ -2088,18 +1644,6 @@ typedef int_least16_t yytype_int16;
 typedef short yytype_int16;
 #endif
 
-/* Work around bug in HP-UX 11.23, which defines these macros
-   incorrectly for preprocessor constants.  This workaround can likely
-   be removed in 2023, as HPE has promised support for HP-UX 11.23
-   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
-   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
-#ifdef __hpux
-# undef UINT_LEAST8_MAX
-# undef UINT_LEAST16_MAX
-# define UINT_LEAST8_MAX 255
-# define UINT_LEAST16_MAX 65535
-#endif
-
 #if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
 typedef __UINT_LEAST8_TYPE__ yytype_uint8;
 #elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
@@ -2159,7 +1703,6 @@ typedef int yytype_uint16;
 
 #define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))
 
-
 /* Stored state numbers (used for stacks). */
 typedef yytype_int16 yy_state_t;
 
@@ -2178,7 +1721,6 @@ typedef int yy_state_fast_t;
 # endif
 #endif
 
-
 #ifndef YY_ATTRIBUTE_PURE
 # if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
 #  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
@@ -2197,23 +1739,17 @@ typedef int yy_state_fast_t;
 
 /* Suppress unused-variable warnings by "using" E.  */
 #if ! defined lint || defined __GNUC__
-# define YY_USE(E) ((void) (E))
+# define YYUSE(E) ((void) (E))
 #else
-# define YY_USE(E) /* empty */
+# define YYUSE(E) /* empty */
 #endif
 
+#if defined __GNUC__ && ! defined __ICC && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
-#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
-# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
-#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
-    _Pragma ("GCC diagnostic push")                                     \
-    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
-# else
-#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
+# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                            \
     _Pragma ("GCC diagnostic push")                                     \
     _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
     _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
-# endif
 # define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
     _Pragma ("GCC diagnostic pop")
 #else
@@ -2242,7 +1778,7 @@ typedef int yy_state_fast_t;
 
 #define YY_ASSERT(E) ((void) (0 && (E)))
 
-#if 1
+#if ! defined yyoverflow || YYERROR_VERBOSE
 
 /* The parser invokes alloca or malloc; define the necessary symbols.  */
 
@@ -2307,7 +1843,8 @@ void free (void *); /* INFRINGES ON USER
 #   endif
 #  endif
 # endif
-#endif /* 1 */
+#endif /* ! defined yyoverflow || YYERROR_VERBOSE */
+
 
 #if (! defined yyoverflow \
      && (! defined __cplusplus \
@@ -2386,16 +1923,14 @@ union yyalloc
 /* YYNSTATES -- Number of states.  */
 #define YYNSTATES  1304
 
-/* YYMAXUTOK -- Last valid token kind.  */
+#define YYUNDEFTOK  2
 #define YYMAXUTOK   362
 
 
 /* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
    as returned by yylex, with out-of-bounds checking.  */
-#define YYTRANSLATE(YYX)                                \
-  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
-   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
-   : YYSYMBOL_YYUNDEF)
+#define YYTRANSLATE(YYX)                                                \
+  (0 <= (YYX) && (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
 
 /* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
    as returned by yylex.  */
@@ -2441,7 +1976,7 @@ static const yytype_uint8 yytranslate[]
 };
 
 #if YYDEBUG
-/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
+  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_int16 yyrline[] =
 {
        0,  1580,  1580,  1580,  1606,  1612,  1619,  1626,  1635,  1636,
@@ -2526,19 +2061,12 @@ static const yytype_int16 yyrline[] =
 };
 #endif
 
-/** Accessing symbol of state STATE.  */
-#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])
-
-#if 1
-/* The user-facing name of the symbol whose (internal) number is
-   YYSYMBOL.  No bounds checking.  */
-static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;
-
+#if YYDEBUG || YYERROR_VERBOSE || 1
 /* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
    First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
 static const char *const yytname[] =
 {
-  "\"end-of-input\"", "error", "\"invalid token\"", "\"`class'\"",
+  "\"end-of-input\"", "error", "$undefined", "\"`class'\"",
   "\"`module'\"", "\"`def'\"", "\"`undef'\"", "\"`begin'\"",
   "\"`rescue'\"", "\"`ensure'\"", "\"`end'\"", "\"`if'\"", "\"`unless'\"",
   "\"`then'\"", "\"`elsif'\"", "\"`else'\"", "\"`case'\"", "\"`when'\"",
@@ -2622,14 +2150,33 @@ static const char *const yytname[] =
   "call_op2", "opt_terms", "opt_nl", "rparen", "rbracket", "rbrace",
   "trailer", "term", "terms", "none", YY_NULLPTR
 };
-
-static const char *
-yysymbol_name (yysymbol_kind_t yysymbol)
-{
-  return yytname[yysymbol];
-}
 #endif
 
+# ifdef YYPRINT
+/* YYTOKNUM[NUM] -- (External) token number corresponding to the
+   (internal) symbol number NUM (which must be that of a token).  */
+static const yytype_int16 yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
+     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
+     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
+     315,   316,   317,   318,   319,   320,   321,   322,   323,    46,
+      92,   324,     9,    12,    13,    11,   132,   133,   134,   135,
+     140,   141,   142,   139,   138,   148,   149,   143,   144,   128,
+     129,   130,   131,   145,   146,   136,   137,   150,   147,   325,
+     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
+     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
+     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
+     356,   357,   358,   359,   360,    61,    63,    58,    62,    60,
+     124,    94,    38,    43,    45,    42,    47,    37,   361,    33,
+     126,   362,   123,   125,    91,    44,    96,    40,    41,    93,
+      59,    32,    10
+};
+# endif
+
 #define YYPACT_NINF (-1065)
 
 #define yypact_value_is_default(Yyn) \
@@ -2640,8 +2187,8 @@ yysymbol_name (yysymbol_kind_t yysymbol)
 #define yytable_value_is_error(Yyn) \
   ((Yyn) == YYTABLE_NINF)
 
-/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
-   STATE-NUM.  */
+  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+     STATE-NUM.  */
 static const yytype_int16 yypact[] =
 {
    -1065,   144,  4385, -1065, -1065, -1065, -1065, -1065,  9742, -1065,
@@ -2777,9 +2324,9 @@ static const yytype_int16 yypact[] =
    -1065, -1065,  1055, -1065
 };
 
-/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE does not specify something else to do.  Zero
-   means the default is an error.  */
+  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
+     Performed when YYTABLE does not specify something else to do.  Zero
+     means the default is an error.  */
 static const yytype_int16 yydefact[] =
 {
        2,     0,     0,     1,    39,   377,   378,   379,     0,   370,
@@ -2915,7 +2462,7 @@ static const yytype_int16 yydefact[] =
      429,   432,   421,   424
 };
 
-/* YYPGOTO[NTERM-NUM].  */
+  /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
    -1065, -1065, -1065,   976, -1065,   926,   763,  -522, -1065,   -28,
@@ -2948,10 +2495,10 @@ static const yytype_int16 yypgoto[] =
      228,  -188,   -58,     1,    -2
 };
 
-/* YYDEFGOTO[NTERM-NUM].  */
+  /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-       0,     1,     2,    70,    71,    72,   248,   625,  1088,   626,
+      -1,     1,     2,    70,    71,    72,   248,   625,  1088,   626,
      265,   266,   477,   267,   469,    74,   769,    75,   597,   779,
      583,   778,   419,   218,   219,   828,   382,   384,   385,   976,
       78,    79,   572,   254,    81,    82,   268,    83,    84,    85,
@@ -2981,9 +2528,9 @@ static const yytype_int16 yydefgoto[] =
     1054,   488,   629,   389,   270
 };
 
-/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
-   positive, shift that token.  If negative, reduce the rule whose
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
+     positive, shift that token.  If negative, reduce the rule whose
+     number is the opposite.  If YYTABLE_NINF, syntax error.  */
 static const yytype_int16 yytable[] =
 {
      128,   427,   297,   294,   206,   298,   220,   220,   549,   644,
@@ -6032,8 +5579,8 @@ static const yytype_int16 yycheck[] =
       -1,    -1,    -1,    -1,   156
 };
 
-/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
-   state STATE-NUM.  */
+  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+     symbol of state STATE-NUM.  */
 static const yytype_int16 yystos[] =
 {
        0,   164,   165,     0,     1,     3,     4,     5,     6,     7,
@@ -6169,7 +5716,7 @@ static const yytype_int16 yystos[] =
      278,   278,   400,   278
 };
 
-/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
+  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
 static const yytype_int16 yyr1[] =
 {
        0,   163,   165,   164,   166,   167,   167,   167,   168,   168,
@@ -6253,7 +5800,7 @@ static const yytype_int16 yyr1[] =
      436,   436,   437
 };
 
-/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
+  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
 static const yytype_int8 yyr2[] =
 {
        0,     2,     0,     2,     2,     1,     1,     3,     1,     2,
@@ -6338,15 +5885,14 @@ static const yytype_int8 yyr2[] =
 };
 
 
-enum { YYENOMEM = -2 };
-
 #define yyerrok         (yyerrstatus = 0)
 #define yyclearin       (yychar = YYEMPTY)
+#define YYEMPTY         (-2)
+#define YYEOF           0
 
 #define YYACCEPT        goto yyacceptlab
 #define YYABORT         goto yyabortlab
 #define YYERROR         goto yyerrorlab
-#define YYNOMEM         goto yyexhaustedlab
 
 
 #define YYRECOVERING()  (!!yyerrstatus)
@@ -6368,9 +5914,10 @@ enum { YYENOMEM = -2 };
       }                                                           \
   while (0)
 
-/* Backward compatibility with an undocumented macro.
-   Use YYerror or YYUNDEF. */
-#define YYERRCODE YYUNDEF
+/* Error token number */
+#define YYTERROR        1
+#define YYERRCODE       256
+
 
 /* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
    If N is 0, then set CURRENT to the empty location which ends
@@ -6414,19 +5961,12 @@ do {
 } while (0)
 
 
-/* YYLOCATION_PRINT -- Print the location on the stream.
+/* YY_LOCATION_PRINT -- Print the location on the stream.
    This macro was not mandated originally: define only if we know
    we won't break user code: when these are the locations we know.  */
 
-# ifndef YYLOCATION_PRINT
-
-#  if defined YY_LOCATION_PRINT
-
-   /* Temporary convenience wrapper in case some people defined the
-      undocumented and private YY_LOCATION_PRINT macros.  */
-#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))
-
-#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#ifndef YY_LOCATION_PRINT
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
 
 /* Print *YYLOCP on YYO.  Private, do not rely on its existence. */
 
@@ -6454,32 +5994,24 @@ yy_location_print_ (FILE *yyo, YYLTYPE c
         res += YYFPRINTF (p, "-%d", end_col);
     }
   return res;
-}
+ }
 
-#   define YYLOCATION_PRINT  yy_location_print_
+#  define YY_LOCATION_PRINT(File, Loc)          \
+  yy_location_print_ (File, &(Loc))
 
-    /* Temporary convenience wrapper in case some people defined the
-       undocumented and private YY_LOCATION_PRINT macros.  */
-#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))
-
-#  else
-
-#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
-    /* Temporary convenience wrapper in case some people defined the
-       undocumented and private YY_LOCATION_PRINT macros.  */
-#   define YY_LOCATION_PRINT  YYLOCATION_PRINT
-
-#  endif
-# endif /* !defined YYLOCATION_PRINT */
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
+#endif
 
 
-# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
 do {                                                                      \
   if (yydebug)                                                            \
     {                                                                     \
       YYFPRINTF (p, "%s ", Title);                                   \
       yy_symbol_print (stderr,                                            \
-                  Kind, Value, Location, p); \
+                  Type, Value, Location, p); \
       YYFPRINTF (p, "\n");                                           \
     }                                                                     \
 } while (0)
@@ -6490,19 +6022,22 @@ do {
 `-----------------------------------*/
 
 static void
-yy_symbol_value_print (FILE *yyo,
-                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, struct parser_params *p)
+yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, struct parser_params *p)
 {
   FILE *yyoutput = yyo;
-  YY_USE (yyoutput);
-  YY_USE (yylocationp);
-  YY_USE (p);
+  YYUSE (yyoutput);
+  YYUSE (yylocationp);
+  YYUSE (p);
   if (!yyvaluep)
     return;
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyo, yytoknum[yytype], *yyvaluep);
+# endif
   YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-  switch (yykind)
+  switch (yytype)
     {
-    case YYSYMBOL_tIDENTIFIER: /* "local variable or method"  */
+    case 52: /* "local variable or method"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6511,10 +6046,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6513 "parse.c"
+#line 6048 "parse.c"
         break;
 
-    case YYSYMBOL_tFID: /* "method"  */
+    case 53: /* "method"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6523,10 +6058,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6525 "parse.c"
+#line 6060 "parse.c"
         break;
 
-    case YYSYMBOL_tGVAR: /* "global variable"  */
+    case 54: /* "global variable"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6535,10 +6070,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6537 "parse.c"
+#line 6072 "parse.c"
         break;
 
-    case YYSYMBOL_tIVAR: /* "instance variable"  */
+    case 55: /* "instance variable"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6547,10 +6082,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6549 "parse.c"
+#line 6084 "parse.c"
         break;
 
-    case YYSYMBOL_tCONSTANT: /* "constant"  */
+    case 56: /* "constant"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6559,10 +6094,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6561 "parse.c"
+#line 6096 "parse.c"
         break;
 
-    case YYSYMBOL_tCVAR: /* "class variable"  */
+    case 57: /* "class variable"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6571,10 +6106,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6573 "parse.c"
+#line 6108 "parse.c"
         break;
 
-    case YYSYMBOL_tLABEL: /* "label"  */
+    case 58: /* "label"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6583,10 +6118,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6585 "parse.c"
+#line 6120 "parse.c"
         break;
 
-    case YYSYMBOL_tINTEGER: /* "integer literal"  */
+    case 59: /* "integer literal"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6595,10 +6130,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6597 "parse.c"
+#line 6132 "parse.c"
         break;
 
-    case YYSYMBOL_tFLOAT: /* "float literal"  */
+    case 60: /* "float literal"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6607,10 +6142,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6609 "parse.c"
+#line 6144 "parse.c"
         break;
 
-    case YYSYMBOL_tRATIONAL: /* "rational literal"  */
+    case 61: /* "rational literal"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6619,10 +6154,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6621 "parse.c"
+#line 6156 "parse.c"
         break;
 
-    case YYSYMBOL_tIMAGINARY: /* "imaginary literal"  */
+    case 62: /* "imaginary literal"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6631,10 +6166,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6633 "parse.c"
+#line 6168 "parse.c"
         break;
 
-    case YYSYMBOL_tCHAR: /* "char literal"  */
+    case 63: /* "char literal"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6643,10 +6178,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6645 "parse.c"
+#line 6180 "parse.c"
         break;
 
-    case YYSYMBOL_tNTH_REF: /* "numbered reference"  */
+    case 64: /* "numbered reference"  */
 #line 1353 "parse.y"
          {
 #ifndef RIPPER
@@ -6655,10 +6190,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, ((*yyvaluep).node));
 #endif
 }
-#line 6657 "parse.c"
+#line 6192 "parse.c"
         break;
 
-    case YYSYMBOL_tBACK_REF: /* "back reference"  */
+    case 65: /* "back reference"  */
 #line 1360 "parse.y"
          {
 #ifndef RIPPER
@@ -6667,10 +6202,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, ((*yyvaluep).node));
 #endif
 }
-#line 6669 "parse.c"
+#line 6204 "parse.c"
         break;
 
-    case YYSYMBOL_tSTRING_CONTENT: /* "literal content"  */
+    case 66: /* "literal content"  */
 #line 1346 "parse.y"
          {
 #ifndef RIPPER
@@ -6679,10 +6214,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%+"PRIsVALUE, get_value(((*yyvaluep).node)));
 #endif
 }
-#line 6681 "parse.c"
+#line 6216 "parse.c"
         break;
 
-    case YYSYMBOL_tOP_ASGN: /* "operator-assignment"  */
+    case 100: /* "operator-assignment"  */
 #line 1339 "parse.y"
          {
 #ifndef RIPPER
@@ -6691,10 +6226,10 @@ yy_symbol_value_print (FILE *yyo,
     rb_parser_printf(p, "%"PRIsVALUE, RNODE(((*yyvaluep).id))->nd_rval);
 #endif
 }
-#line 6693 "parse.c"
+#line 6228 "parse.c"
         break;
 
-    case YYSYMBOL_top_compstmt: /* top_compstmt  */
+    case 166: /* top_compstmt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6704,10 +6239,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6706 "parse.c"
+#line 6241 "parse.c"
         break;
 
-    case YYSYMBOL_top_stmts: /* top_stmts  */
+    case 167: /* top_stmts  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6717,10 +6252,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6719 "parse.c"
+#line 6254 "parse.c"
         break;
 
-    case YYSYMBOL_top_stmt: /* top_stmt  */
+    case 168: /* top_stmt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6730,10 +6265,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6732 "parse.c"
+#line 6267 "parse.c"
         break;
 
-    case YYSYMBOL_begin_block: /* begin_block  */
+    case 169: /* begin_block  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6743,10 +6278,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6745 "parse.c"
+#line 6280 "parse.c"
         break;
 
-    case YYSYMBOL_bodystmt: /* bodystmt  */
+    case 170: /* bodystmt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6756,10 +6291,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6758 "parse.c"
+#line 6293 "parse.c"
         break;
 
-    case YYSYMBOL_compstmt: /* compstmt  */
+    case 172: /* compstmt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6769,10 +6304,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6771 "parse.c"
+#line 6306 "parse.c"
         break;
 
-    case YYSYMBOL_stmts: /* stmts  */
+    case 173: /* stmts  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6782,10 +6317,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6784 "parse.c"
+#line 6319 "parse.c"
         break;
 
-    case YYSYMBOL_stmt_or_begin: /* stmt_or_begin  */
+    case 174: /* stmt_or_begin  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6795,10 +6330,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6797 "parse.c"
+#line 6332 "parse.c"
         break;
 
-    case YYSYMBOL_stmt: /* stmt  */
+    case 176: /* stmt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6808,10 +6343,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6810 "parse.c"
+#line 6345 "parse.c"
         break;
 
-    case YYSYMBOL_command_asgn: /* command_asgn  */
+    case 178: /* command_asgn  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6821,10 +6356,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6823 "parse.c"
+#line 6358 "parse.c"
         break;
 
-    case YYSYMBOL_command_rhs: /* command_rhs  */
+    case 179: /* command_rhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6834,10 +6369,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6836 "parse.c"
+#line 6371 "parse.c"
         break;
 
-    case YYSYMBOL_expr: /* expr  */
+    case 180: /* expr  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6847,10 +6382,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6849 "parse.c"
+#line 6384 "parse.c"
         break;
 
-    case YYSYMBOL_def_name: /* def_name  */
+    case 185: /* def_name  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6860,10 +6395,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6862 "parse.c"
+#line 6397 "parse.c"
         break;
 
-    case YYSYMBOL_defn_head: /* defn_head  */
+    case 186: /* defn_head  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6873,10 +6408,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6875 "parse.c"
+#line 6410 "parse.c"
         break;
 
-    case YYSYMBOL_defs_head: /* defs_head  */
+    case 187: /* defs_head  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6886,10 +6421,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6888 "parse.c"
+#line 6423 "parse.c"
         break;
 
-    case YYSYMBOL_expr_value: /* expr_value  */
+    case 189: /* expr_value  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6899,10 +6434,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6901 "parse.c"
+#line 6436 "parse.c"
         break;
 
-    case YYSYMBOL_expr_value_do: /* expr_value_do  */
+    case 190: /* expr_value_do  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6912,10 +6447,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6914 "parse.c"
+#line 6449 "parse.c"
         break;
 
-    case YYSYMBOL_command_call: /* command_call  */
+    case 193: /* command_call  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6925,10 +6460,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6927 "parse.c"
+#line 6462 "parse.c"
         break;
 
-    case YYSYMBOL_block_command: /* block_command  */
+    case 194: /* block_command  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6938,10 +6473,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6940 "parse.c"
+#line 6475 "parse.c"
         break;
 
-    case YYSYMBOL_cmd_brace_block: /* cmd_brace_block  */
+    case 195: /* cmd_brace_block  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6951,10 +6486,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6953 "parse.c"
+#line 6488 "parse.c"
         break;
 
-    case YYSYMBOL_fcall: /* fcall  */
+    case 196: /* fcall  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6964,10 +6499,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6966 "parse.c"
+#line 6501 "parse.c"
         break;
 
-    case YYSYMBOL_command: /* command  */
+    case 197: /* command  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6977,10 +6512,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6979 "parse.c"
+#line 6514 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs: /* mlhs  */
+    case 198: /* mlhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -6990,10 +6525,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 6992 "parse.c"
+#line 6527 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_inner: /* mlhs_inner  */
+    case 199: /* mlhs_inner  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7003,10 +6538,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7005 "parse.c"
+#line 6540 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_basic: /* mlhs_basic  */
+    case 200: /* mlhs_basic  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7016,10 +6551,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7018 "parse.c"
+#line 6553 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_item: /* mlhs_item  */
+    case 201: /* mlhs_item  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7029,10 +6564,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7031 "parse.c"
+#line 6566 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_head: /* mlhs_head  */
+    case 202: /* mlhs_head  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7042,10 +6577,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7044 "parse.c"
+#line 6579 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_post: /* mlhs_post  */
+    case 203: /* mlhs_post  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7055,10 +6590,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7057 "parse.c"
+#line 6592 "parse.c"
         break;
 
-    case YYSYMBOL_mlhs_node: /* mlhs_node  */
+    case 204: /* mlhs_node  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7068,10 +6603,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7070 "parse.c"
+#line 6605 "parse.c"
         break;
 
-    case YYSYMBOL_lhs: /* lhs  */
+    case 205: /* lhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7081,10 +6616,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7083 "parse.c"
+#line 6618 "parse.c"
         break;
 
-    case YYSYMBOL_cpath: /* cpath  */
+    case 207: /* cpath  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7094,10 +6629,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7096 "parse.c"
+#line 6631 "parse.c"
         break;
 
-    case YYSYMBOL_fitem: /* fitem  */
+    case 209: /* fitem  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7107,10 +6642,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7109 "parse.c"
+#line 6644 "parse.c"
         break;
 
-    case YYSYMBOL_undef_list: /* undef_list  */
+    case 210: /* undef_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7120,10 +6655,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7122 "parse.c"
+#line 6657 "parse.c"
         break;
 
-    case YYSYMBOL_arg: /* arg  */
+    case 214: /* arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7133,10 +6668,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7135 "parse.c"
+#line 6670 "parse.c"
         break;
 
-    case YYSYMBOL_rel_expr: /* rel_expr  */
+    case 217: /* rel_expr  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7146,10 +6681,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7148 "parse.c"
+#line 6683 "parse.c"
         break;
 
-    case YYSYMBOL_arg_value: /* arg_value  */
+    case 219: /* arg_value  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7159,10 +6694,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7161 "parse.c"
+#line 6696 "parse.c"
         break;
 
-    case YYSYMBOL_aref_args: /* aref_args  */
+    case 220: /* aref_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7172,10 +6707,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7174 "parse.c"
+#line 6709 "parse.c"
         break;
 
-    case YYSYMBOL_arg_rhs: /* arg_rhs  */
+    case 221: /* arg_rhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7185,10 +6720,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7187 "parse.c"
+#line 6722 "parse.c"
         break;
 
-    case YYSYMBOL_paren_args: /* paren_args  */
+    case 222: /* paren_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7198,10 +6733,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7200 "parse.c"
+#line 6735 "parse.c"
         break;
 
-    case YYSYMBOL_opt_paren_args: /* opt_paren_args  */
+    case 223: /* opt_paren_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7211,10 +6746,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7213 "parse.c"
+#line 6748 "parse.c"
         break;
 
-    case YYSYMBOL_opt_call_args: /* opt_call_args  */
+    case 224: /* opt_call_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7224,10 +6759,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7226 "parse.c"
+#line 6761 "parse.c"
         break;
 
-    case YYSYMBOL_call_args: /* call_args  */
+    case 225: /* call_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7237,10 +6772,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7239 "parse.c"
+#line 6774 "parse.c"
         break;
 
-    case YYSYMBOL_command_args: /* command_args  */
+    case 226: /* command_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7250,10 +6785,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7252 "parse.c"
+#line 6787 "parse.c"
         break;
 
-    case YYSYMBOL_block_arg: /* block_arg  */
+    case 228: /* block_arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7263,10 +6798,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7265 "parse.c"
+#line 6800 "parse.c"
         break;
 
-    case YYSYMBOL_opt_block_arg: /* opt_block_arg  */
+    case 229: /* opt_block_arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7276,10 +6811,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7278 "parse.c"
+#line 6813 "parse.c"
         break;
 
-    case YYSYMBOL_args: /* args  */
+    case 230: /* args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7289,10 +6824,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7291 "parse.c"
+#line 6826 "parse.c"
         break;
 
-    case YYSYMBOL_mrhs_arg: /* mrhs_arg  */
+    case 231: /* mrhs_arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7302,10 +6837,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7304 "parse.c"
+#line 6839 "parse.c"
         break;
 
-    case YYSYMBOL_mrhs: /* mrhs  */
+    case 232: /* mrhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7315,10 +6850,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7317 "parse.c"
+#line 6852 "parse.c"
         break;
 
-    case YYSYMBOL_primary: /* primary  */
+    case 233: /* primary  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7328,10 +6863,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7330 "parse.c"
+#line 6865 "parse.c"
         break;
 
-    case YYSYMBOL_primary_value: /* primary_value  */
+    case 245: /* primary_value  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7341,10 +6876,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7343 "parse.c"
+#line 6878 "parse.c"
         break;
 
-    case YYSYMBOL_if_tail: /* if_tail  */
+    case 267: /* if_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7354,10 +6889,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7356 "parse.c"
+#line 6891 "parse.c"
         break;
 
-    case YYSYMBOL_opt_else: /* opt_else  */
+    case 268: /* opt_else  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7367,10 +6902,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7369 "parse.c"
+#line 6904 "parse.c"
         break;
 
-    case YYSYMBOL_for_var: /* for_var  */
+    case 269: /* for_var  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7380,10 +6915,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7382 "parse.c"
+#line 6917 "parse.c"
         break;
 
-    case YYSYMBOL_f_marg: /* f_marg  */
+    case 270: /* f_marg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7393,10 +6928,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7395 "parse.c"
+#line 6930 "parse.c"
         break;
 
-    case YYSYMBOL_f_marg_list: /* f_marg_list  */
+    case 271: /* f_marg_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7406,10 +6941,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7408 "parse.c"
+#line 6943 "parse.c"
         break;
 
-    case YYSYMBOL_f_margs: /* f_margs  */
+    case 272: /* f_margs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7419,10 +6954,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7421 "parse.c"
+#line 6956 "parse.c"
         break;
 
-    case YYSYMBOL_f_rest_marg: /* f_rest_marg  */
+    case 273: /* f_rest_marg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7432,10 +6967,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7434 "parse.c"
+#line 6969 "parse.c"
         break;
 
-    case YYSYMBOL_block_args_tail: /* block_args_tail  */
+    case 277: /* block_args_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7445,10 +6980,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7447 "parse.c"
+#line 6982 "parse.c"
         break;
 
-    case YYSYMBOL_opt_block_args_tail: /* opt_block_args_tail  */
+    case 278: /* opt_block_args_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7458,10 +6993,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7460 "parse.c"
+#line 6995 "parse.c"
         break;
 
-    case YYSYMBOL_block_param: /* block_param  */
+    case 280: /* block_param  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7471,10 +7006,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7473 "parse.c"
+#line 7008 "parse.c"
         break;
 
-    case YYSYMBOL_opt_block_param: /* opt_block_param  */
+    case 281: /* opt_block_param  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7484,10 +7019,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7486 "parse.c"
+#line 7021 "parse.c"
         break;
 
-    case YYSYMBOL_block_param_def: /* block_param_def  */
+    case 282: /* block_param_def  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7497,10 +7032,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7499 "parse.c"
+#line 7034 "parse.c"
         break;
 
-    case YYSYMBOL_opt_bv_decl: /* opt_bv_decl  */
+    case 283: /* opt_bv_decl  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7510,10 +7045,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7512 "parse.c"
+#line 7047 "parse.c"
         break;
 
-    case YYSYMBOL_bv_decls: /* bv_decls  */
+    case 284: /* bv_decls  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7523,10 +7058,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7525 "parse.c"
+#line 7060 "parse.c"
         break;
 
-    case YYSYMBOL_bvar: /* bvar  */
+    case 285: /* bvar  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7536,10 +7071,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7538 "parse.c"
+#line 7073 "parse.c"
         break;
 
-    case YYSYMBOL_lambda: /* lambda  */
+    case 286: /* lambda  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7549,10 +7084,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7551 "parse.c"
+#line 7086 "parse.c"
         break;
 
-    case YYSYMBOL_f_larglist: /* f_larglist  */
+    case 291: /* f_larglist  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7562,10 +7097,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7564 "parse.c"
+#line 7099 "parse.c"
         break;
 
-    case YYSYMBOL_lambda_body: /* lambda_body  */
+    case 292: /* lambda_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7575,10 +7110,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7577 "parse.c"
+#line 7112 "parse.c"
         break;
 
-    case YYSYMBOL_do_block: /* do_block  */
+    case 294: /* do_block  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7588,10 +7123,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7590 "parse.c"
+#line 7125 "parse.c"
         break;
 
-    case YYSYMBOL_block_call: /* block_call  */
+    case 295: /* block_call  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7601,10 +7136,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7603 "parse.c"
+#line 7138 "parse.c"
         break;
 
-    case YYSYMBOL_method_call: /* method_call  */
+    case 296: /* method_call  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7614,10 +7149,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7616 "parse.c"
+#line 7151 "parse.c"
         break;
 
-    case YYSYMBOL_brace_block: /* brace_block  */
+    case 297: /* brace_block  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7627,10 +7162,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7629 "parse.c"
+#line 7164 "parse.c"
         break;
 
-    case YYSYMBOL_brace_body: /* brace_body  */
+    case 298: /* brace_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7640,10 +7175,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7642 "parse.c"
+#line 7177 "parse.c"
         break;
 
-    case YYSYMBOL_do_body: /* do_body  */
+    case 302: /* do_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7653,10 +7188,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7655 "parse.c"
+#line 7190 "parse.c"
         break;
 
-    case YYSYMBOL_case_args: /* case_args  */
+    case 306: /* case_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7666,10 +7201,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7668 "parse.c"
+#line 7203 "parse.c"
         break;
 
-    case YYSYMBOL_case_body: /* case_body  */
+    case 307: /* case_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7679,10 +7214,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7681 "parse.c"
+#line 7216 "parse.c"
         break;
 
-    case YYSYMBOL_cases: /* cases  */
+    case 308: /* cases  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7692,10 +7227,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7694 "parse.c"
+#line 7229 "parse.c"
         break;
 
-    case YYSYMBOL_p_case_body: /* p_case_body  */
+    case 309: /* p_case_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7705,10 +7240,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7707 "parse.c"
+#line 7242 "parse.c"
         break;
 
-    case YYSYMBOL_p_cases: /* p_cases  */
+    case 313: /* p_cases  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7718,10 +7253,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7720 "parse.c"
+#line 7255 "parse.c"
         break;
 
-    case YYSYMBOL_p_top_expr: /* p_top_expr  */
+    case 314: /* p_top_expr  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7731,10 +7266,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7733 "parse.c"
+#line 7268 "parse.c"
         break;
 
-    case YYSYMBOL_p_top_expr_body: /* p_top_expr_body  */
+    case 315: /* p_top_expr_body  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7744,10 +7279,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7746 "parse.c"
+#line 7281 "parse.c"
         break;
 
-    case YYSYMBOL_p_expr: /* p_expr  */
+    case 316: /* p_expr  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7757,10 +7292,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7759 "parse.c"
+#line 7294 "parse.c"
         break;
 
-    case YYSYMBOL_p_as: /* p_as  */
+    case 317: /* p_as  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7770,10 +7305,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7772 "parse.c"
+#line 7307 "parse.c"
         break;
 
-    case YYSYMBOL_p_alt: /* p_alt  */
+    case 318: /* p_alt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7783,10 +7318,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7785 "parse.c"
+#line 7320 "parse.c"
         break;
 
-    case YYSYMBOL_p_expr_basic: /* p_expr_basic  */
+    case 321: /* p_expr_basic  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7796,10 +7331,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7798 "parse.c"
+#line 7333 "parse.c"
         break;
 
-    case YYSYMBOL_p_args: /* p_args  */
+    case 324: /* p_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7809,10 +7344,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7811 "parse.c"
+#line 7346 "parse.c"
         break;
 
-    case YYSYMBOL_p_args_head: /* p_args_head  */
+    case 325: /* p_args_head  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7822,10 +7357,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7824 "parse.c"
+#line 7359 "parse.c"
         break;
 
-    case YYSYMBOL_p_args_tail: /* p_args_tail  */
+    case 326: /* p_args_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7835,10 +7370,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7837 "parse.c"
+#line 7372 "parse.c"
         break;
 
-    case YYSYMBOL_p_find: /* p_find  */
+    case 327: /* p_find  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7848,10 +7383,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7850 "parse.c"
+#line 7385 "parse.c"
         break;
 
-    case YYSYMBOL_p_args_post: /* p_args_post  */
+    case 329: /* p_args_post  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7861,10 +7396,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7863 "parse.c"
+#line 7398 "parse.c"
         break;
 
-    case YYSYMBOL_p_arg: /* p_arg  */
+    case 330: /* p_arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7874,10 +7409,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7876 "parse.c"
+#line 7411 "parse.c"
         break;
 
-    case YYSYMBOL_p_kwargs: /* p_kwargs  */
+    case 331: /* p_kwargs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7887,10 +7422,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7889 "parse.c"
+#line 7424 "parse.c"
         break;
 
-    case YYSYMBOL_p_kwarg: /* p_kwarg  */
+    case 332: /* p_kwarg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7900,10 +7435,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7902 "parse.c"
+#line 7437 "parse.c"
         break;
 
-    case YYSYMBOL_p_kw: /* p_kw  */
+    case 333: /* p_kw  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7913,10 +7448,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7915 "parse.c"
+#line 7450 "parse.c"
         break;
 
-    case YYSYMBOL_p_value: /* p_value  */
+    case 338: /* p_value  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7926,10 +7461,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7928 "parse.c"
+#line 7463 "parse.c"
         break;
 
-    case YYSYMBOL_p_primitive: /* p_primitive  */
+    case 339: /* p_primitive  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7939,10 +7474,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7941 "parse.c"
+#line 7476 "parse.c"
         break;
 
-    case YYSYMBOL_p_variable: /* p_variable  */
+    case 340: /* p_variable  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7952,10 +7487,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7954 "parse.c"
+#line 7489 "parse.c"
         break;
 
-    case YYSYMBOL_p_var_ref: /* p_var_ref  */
+    case 341: /* p_var_ref  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7965,10 +7500,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7967 "parse.c"
+#line 7502 "parse.c"
         break;
 
-    case YYSYMBOL_p_expr_ref: /* p_expr_ref  */
+    case 342: /* p_expr_ref  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7978,10 +7513,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7980 "parse.c"
+#line 7515 "parse.c"
         break;
 
-    case YYSYMBOL_p_const: /* p_const  */
+    case 343: /* p_const  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -7991,10 +7526,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 7993 "parse.c"
+#line 7528 "parse.c"
         break;
 
-    case YYSYMBOL_opt_rescue: /* opt_rescue  */
+    case 344: /* opt_rescue  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8004,10 +7539,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8006 "parse.c"
+#line 7541 "parse.c"
         break;
 
-    case YYSYMBOL_exc_list: /* exc_list  */
+    case 345: /* exc_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8017,10 +7552,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8019 "parse.c"
+#line 7554 "parse.c"
         break;
 
-    case YYSYMBOL_exc_var: /* exc_var  */
+    case 346: /* exc_var  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8030,10 +7565,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8032 "parse.c"
+#line 7567 "parse.c"
         break;
 
-    case YYSYMBOL_opt_ensure: /* opt_ensure  */
+    case 347: /* opt_ensure  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8043,10 +7578,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8045 "parse.c"
+#line 7580 "parse.c"
         break;
 
-    case YYSYMBOL_literal: /* literal  */
+    case 348: /* literal  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8056,10 +7591,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8058 "parse.c"
+#line 7593 "parse.c"
         break;
 
-    case YYSYMBOL_strings: /* strings  */
+    case 349: /* strings  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8069,10 +7604,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8071 "parse.c"
+#line 7606 "parse.c"
         break;
 
-    case YYSYMBOL_string: /* string  */
+    case 350: /* string  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8082,10 +7617,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8084 "parse.c"
+#line 7619 "parse.c"
         break;
 
-    case YYSYMBOL_string1: /* string1  */
+    case 351: /* string1  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8095,10 +7630,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8097 "parse.c"
+#line 7632 "parse.c"
         break;
 
-    case YYSYMBOL_xstring: /* xstring  */
+    case 352: /* xstring  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8108,10 +7643,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8110 "parse.c"
+#line 7645 "parse.c"
         break;
 
-    case YYSYMBOL_regexp: /* regexp  */
+    case 353: /* regexp  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8121,10 +7656,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8123 "parse.c"
+#line 7658 "parse.c"
         break;
 
-    case YYSYMBOL_words: /* words  */
+    case 354: /* words  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8134,10 +7669,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8136 "parse.c"
+#line 7671 "parse.c"
         break;
 
-    case YYSYMBOL_word_list: /* word_list  */
+    case 355: /* word_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8147,10 +7682,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8149 "parse.c"
+#line 7684 "parse.c"
         break;
 
-    case YYSYMBOL_word: /* word  */
+    case 356: /* word  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8160,10 +7695,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8162 "parse.c"
+#line 7697 "parse.c"
         break;
 
-    case YYSYMBOL_symbols: /* symbols  */
+    case 357: /* symbols  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8173,10 +7708,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8175 "parse.c"
+#line 7710 "parse.c"
         break;
 
-    case YYSYMBOL_symbol_list: /* symbol_list  */
+    case 358: /* symbol_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8186,10 +7721,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8188 "parse.c"
+#line 7723 "parse.c"
         break;
 
-    case YYSYMBOL_qwords: /* qwords  */
+    case 359: /* qwords  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8199,10 +7734,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8201 "parse.c"
+#line 7736 "parse.c"
         break;
 
-    case YYSYMBOL_qsymbols: /* qsymbols  */
+    case 360: /* qsymbols  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8212,10 +7747,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8214 "parse.c"
+#line 7749 "parse.c"
         break;
 
-    case YYSYMBOL_qword_list: /* qword_list  */
+    case 361: /* qword_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8225,10 +7760,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8227 "parse.c"
+#line 7762 "parse.c"
         break;
 
-    case YYSYMBOL_qsym_list: /* qsym_list  */
+    case 362: /* qsym_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8238,10 +7773,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8240 "parse.c"
+#line 7775 "parse.c"
         break;
 
-    case YYSYMBOL_string_contents: /* string_contents  */
+    case 363: /* string_contents  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8251,10 +7786,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8253 "parse.c"
+#line 7788 "parse.c"
         break;
 
-    case YYSYMBOL_xstring_contents: /* xstring_contents  */
+    case 364: /* xstring_contents  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8264,10 +7799,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8266 "parse.c"
+#line 7801 "parse.c"
         break;
 
-    case YYSYMBOL_regexp_contents: /* regexp_contents  */
+    case 365: /* regexp_contents  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8277,10 +7812,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8279 "parse.c"
+#line 7814 "parse.c"
         break;
 
-    case YYSYMBOL_string_content: /* string_content  */
+    case 366: /* string_content  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8290,10 +7825,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8292 "parse.c"
+#line 7827 "parse.c"
         break;
 
-    case YYSYMBOL_string_dvar: /* string_dvar  */
+    case 373: /* string_dvar  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8303,10 +7838,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8305 "parse.c"
+#line 7840 "parse.c"
         break;
 
-    case YYSYMBOL_symbol: /* symbol  */
+    case 374: /* symbol  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8316,10 +7851,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8318 "parse.c"
+#line 7853 "parse.c"
         break;
 
-    case YYSYMBOL_ssym: /* ssym  */
+    case 375: /* ssym  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8329,10 +7864,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8331 "parse.c"
+#line 7866 "parse.c"
         break;
 
-    case YYSYMBOL_dsym: /* dsym  */
+    case 377: /* dsym  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8342,10 +7877,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8344 "parse.c"
+#line 7879 "parse.c"
         break;
 
-    case YYSYMBOL_numeric: /* numeric  */
+    case 378: /* numeric  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8355,10 +7890,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8357 "parse.c"
+#line 7892 "parse.c"
         break;
 
-    case YYSYMBOL_simple_numeric: /* simple_numeric  */
+    case 379: /* simple_numeric  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8368,10 +7903,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8370 "parse.c"
+#line 7905 "parse.c"
         break;
 
-    case YYSYMBOL_var_ref: /* var_ref  */
+    case 383: /* var_ref  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8381,10 +7916,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8383 "parse.c"
+#line 7918 "parse.c"
         break;
 
-    case YYSYMBOL_var_lhs: /* var_lhs  */
+    case 384: /* var_lhs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8394,10 +7929,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8396 "parse.c"
+#line 7931 "parse.c"
         break;
 
-    case YYSYMBOL_backref: /* backref  */
+    case 385: /* backref  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8407,10 +7942,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8409 "parse.c"
+#line 7944 "parse.c"
         break;
 
-    case YYSYMBOL_superclass: /* superclass  */
+    case 386: /* superclass  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8420,10 +7955,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8422 "parse.c"
+#line 7957 "parse.c"
         break;
 
-    case YYSYMBOL_f_opt_paren_args: /* f_opt_paren_args  */
+    case 388: /* f_opt_paren_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8433,10 +7968,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8435 "parse.c"
+#line 7970 "parse.c"
         break;
 
-    case YYSYMBOL_f_paren_args: /* f_paren_args  */
+    case 389: /* f_paren_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8446,10 +7981,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8448 "parse.c"
+#line 7983 "parse.c"
         break;
 
-    case YYSYMBOL_f_arglist: /* f_arglist  */
+    case 390: /* f_arglist  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8459,10 +7994,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8461 "parse.c"
+#line 7996 "parse.c"
         break;
 
-    case YYSYMBOL_args_tail: /* args_tail  */
+    case 392: /* args_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8472,10 +8007,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8474 "parse.c"
+#line 8009 "parse.c"
         break;
 
-    case YYSYMBOL_opt_args_tail: /* opt_args_tail  */
+    case 393: /* opt_args_tail  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8485,10 +8020,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8487 "parse.c"
+#line 8022 "parse.c"
         break;
 
-    case YYSYMBOL_f_args: /* f_args  */
+    case 394: /* f_args  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8498,10 +8033,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8500 "parse.c"
+#line 8035 "parse.c"
         break;
 
-    case YYSYMBOL_f_arg_item: /* f_arg_item  */
+    case 399: /* f_arg_item  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8511,10 +8046,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8513 "parse.c"
+#line 8048 "parse.c"
         break;
 
-    case YYSYMBOL_f_arg: /* f_arg  */
+    case 400: /* f_arg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8524,10 +8059,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8526 "parse.c"
+#line 8061 "parse.c"
         break;
 
-    case YYSYMBOL_f_kw: /* f_kw  */
+    case 402: /* f_kw  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8537,10 +8072,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8539 "parse.c"
+#line 8074 "parse.c"
         break;
 
-    case YYSYMBOL_f_block_kw: /* f_block_kw  */
+    case 403: /* f_block_kw  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8550,10 +8085,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8552 "parse.c"
+#line 8087 "parse.c"
         break;
 
-    case YYSYMBOL_f_block_kwarg: /* f_block_kwarg  */
+    case 404: /* f_block_kwarg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8563,10 +8098,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8565 "parse.c"
+#line 8100 "parse.c"
         break;
 
-    case YYSYMBOL_f_kwarg: /* f_kwarg  */
+    case 405: /* f_kwarg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8576,10 +8111,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8578 "parse.c"
+#line 8113 "parse.c"
         break;
 
-    case YYSYMBOL_f_opt: /* f_opt  */
+    case 409: /* f_opt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8589,10 +8124,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8591 "parse.c"
+#line 8126 "parse.c"
         break;
 
-    case YYSYMBOL_f_block_opt: /* f_block_opt  */
+    case 410: /* f_block_opt  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8602,10 +8137,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8604 "parse.c"
+#line 8139 "parse.c"
         break;
 
-    case YYSYMBOL_f_block_optarg: /* f_block_optarg  */
+    case 411: /* f_block_optarg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8615,10 +8150,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8617 "parse.c"
+#line 8152 "parse.c"
         break;
 
-    case YYSYMBOL_f_optarg: /* f_optarg  */
+    case 412: /* f_optarg  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8628,10 +8163,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8630 "parse.c"
+#line 8165 "parse.c"
         break;
 
-    case YYSYMBOL_singleton: /* singleton  */
+    case 418: /* singleton  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8641,10 +8176,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8643 "parse.c"
+#line 8178 "parse.c"
         break;
 
-    case YYSYMBOL_assoc_list: /* assoc_list  */
+    case 420: /* assoc_list  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8654,10 +8189,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8656 "parse.c"
+#line 8191 "parse.c"
         break;
 
-    case YYSYMBOL_assocs: /* assocs  */
+    case 421: /* assocs  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8667,10 +8202,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8669 "parse.c"
+#line 8204 "parse.c"
         break;
 
-    case YYSYMBOL_assoc: /* assoc  */
+    case 422: /* assoc  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8680,10 +8215,10 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8682 "parse.c"
+#line 8217 "parse.c"
         break;
 
-    case YYSYMBOL_none: /* none  */
+    case 437: /* none  */
 #line 1331 "parse.y"
          {
 #ifndef RIPPER
@@ -8693,7 +8228,7 @@ yy_symbol_value_print (FILE *yyo,
 #else
 #endif
 }
-#line 8695 "parse.c"
+#line 8230 "parse.c"
         break;
 
       default:
@@ -8708,15 +8243,14 @@ yy_symbol_value_print (FILE *yyo,
 `---------------------------*/
 
 static void
-yy_symbol_print (FILE *yyo,
-                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, struct parser_params *p)
+yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, struct parser_params *p)
 {
   YYFPRINTF (p, "%s %s (",
-             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));
+             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);
 
-  YYLOCATION_PRINT (yyo, yylocationp);
+  YY_LOCATION_PRINT (yyo, *yylocationp);
   YYFPRINTF (p, ": ");
-  yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, p);
+  yy_symbol_value_print (yyo, yytype, yyvaluep, yylocationp, p);
   YYFPRINTF (p, ")");
 }
 
@@ -8750,8 +8284,7 @@ do {
 `------------------------------------------------*/
 
 static void
-yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,
-                 int yyrule, struct parser_params *p)
+yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, struct parser_params *p)
 {
   int yylno = yyrline[yyrule];
   int yynrhs = yyr2[yyrule];
@@ -8763,9 +8296,9 @@ yy_reduce_print (yy_state_t *yyssp, YYST
     {
       YYFPRINTF (p, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr,
-                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
-                       &yyvsp[(yyi + 1) - (yynrhs)],
-                       &(yylsp[(yyi + 1) - (yynrhs)]), p);
+                       yystos[+yyssp[yyi + 1 - yynrhs]],
+                       &yyvsp[(yyi + 1) - (yynrhs)]
+                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , p);
       YYFPRINTF (p, "\n");
     }
 }
@@ -8782,8 +8315,8 @@ do {
 int yydebug;
 #endif
 #else /* !YYDEBUG */
-# define YYDPRINTF(Args) ((void) 0)
-# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
 # define YY_STACK_PRINT(Bottom, Top)
 # define YY_REDUCE_PRINT(Rule)
 #endif /* !YYDEBUG */
@@ -8806,61 +8339,12 @@ int yydebug;
 #endif
 
 
-/* Context of a parse error.  */
-typedef struct
-{
-  yy_state_t *yyssp;
-  yysymbol_kind_t yytoken;
-  YYLTYPE *yylloc;
-} yypcontext_t;
-
-/* Put in YYARG at most YYARGN of the expected tokens given the
-   current YYCTX, and return the number of tokens stored in YYARG.  If
-   YYARG is null, return the number of expected tokens (guaranteed to
-   be less than YYNTOKENS).  Return YYENOMEM on memory exhaustion.
-   Return 0 if there are more than YYARGN expected tokens, yet fill
-   YYARG up to YYARGN. */
-static int
-yypcontext_expected_tokens (const yypcontext_t *yyctx,
-                            yysymbol_kind_t yyarg[], int yyargn)
-{
-  /* Actual size of YYARG. */
-  int yycount = 0;
-  int yyn = yypact[+*yyctx->yyssp];
-  if (!yypact_value_is_default (yyn))
-    {
-      /* Start YYX at -YYN if negative to avoid negative indexes in
-         YYCHECK.  In other words, skip the first -YYN actions for
-         this state because they are default actions.  */
-      int yyxbegin = yyn < 0 ? -yyn : 0;
-      /* Stay within bounds of both yycheck and yytname.  */
-      int yychecklim = YYLAST - yyn + 1;
-      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-      int yyx;
-      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-        if (yycheck[yyx + yyn] == yyx && yyx != YYSYMBOL_YYerror
-            && !yytable_value_is_error (yytable[yyx + yyn]))
-          {
-            if (!yyarg)
-              ++yycount;
-            else if (yycount == yyargn)
-              return 0;
-            else
-              yyarg[yycount++] = YY_CAST (yysymbol_kind_t, yyx);
-          }
-    }
-  if (yyarg && yycount == 0 && 0 < yyargn)
-    yyarg[0] = YYSYMBOL_YYEMPTY;
-  return yycount;
-}
-
-
-
+#if YYERROR_VERBOSE
 
-#ifndef yystrlen
-# if defined __GLIBC__ && defined _STRING_H
-#  define yystrlen(S) (YY_CAST (YYPTRDIFF_T, strlen (S)))
-# else
+# ifndef yystrlen
+#  if defined __GLIBC__ && defined _STRING_H
+#   define yystrlen(S) (YY_CAST (YYPTRDIFF_T, strlen (S)))
+#  else
 /* Return the length of YYSTR.  */
 static YYPTRDIFF_T
 yystrlen (const char *yystr)
@@ -8870,13 +8354,13 @@ yystrlen (const char *yystr)
     continue;
   return yylen;
 }
+#  endif
 # endif
-#endif
 
-#ifndef yystpcpy
-# if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
-#  define yystpcpy stpcpy
-# else
+# ifndef yystpcpy
+#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
+#   define yystpcpy stpcpy
+#  else
 /* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
    YYDEST.  */
 static char *
@@ -8890,10 +8374,10 @@ yystpcpy (char *yydest, const char *yysr
 
   return yyd - 1;
 }
+#  endif
 # endif
-#endif
 
-#ifndef yytnamerr
+# ifndef yytnamerr
 /* Copy to YYRES the contents of YYSTR after stripping away unnecessary
    quotes and backslashes, so that it's suitable for yyerror.  The
    heuristic is that double-quoting is unnecessary unless the string
@@ -8908,6 +8392,7 @@ yytnamerr (char *yyres, const char *yyst
     {
       YYPTRDIFF_T yyn = 0;
       char const *yyp = yystr;
+
       for (;;)
         switch (*++yyp)
           {
@@ -8941,15 +8426,31 @@ yytnamerr (char *yyres, const char *yyst
   else
     return yystrlen (yystr);
 }
-#endif
+# endif
 
+/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
+   about the unexpected token YYTOKEN for the state stack whose top is
+   YYSSP.
 
+   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
+   not large enough to hold the message.  In that case, also set
+   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
+   required number of bytes is too large to store.  */
 static int
-yy_syntax_error_arguments (const yypcontext_t *yyctx,
-                           yysymbol_kind_t yyarg[], int yyargn)
+yysyntax_error (struct parser_params *p, YYPTRDIFF_T *yymsg_alloc, char **yymsg,
+                yy_state_t *yyssp, int yytoken)
 {
+  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+  /* Internationalized format string. */
+  const char *yyformat = YY_NULLPTR;
+  /* Arguments of yyformat: reported tokens (one for the "unexpected",
+     one per "expected"). */
+  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
   /* Actual size of YYARG. */
   int yycount = 0;
+  /* Cumulated lengths of YYARG.  */
+  YYPTRDIFF_T yysize = 0;
+
   /* There are many possibilities here to consider:
      - If this state is a consistent state with a default action, then
        the only way this function was invoked is if the default action
@@ -8973,54 +8474,52 @@ yy_syntax_error_arguments (const yypcont
        one exception: it will still contain any token that will not be
        accepted due to an error action in a later state.
   */
-  if (yyctx->yytoken != YYSYMBOL_YYEMPTY)
+  if (yytoken != YYEMPTY)
     {
-      int yyn;
-      if (yyarg)
-        yyarg[yycount] = yyctx->yytoken;
-      ++yycount;
-      yyn = yypcontext_expected_tokens (yyctx,
-                                        yyarg ? yyarg + 1 : yyarg, yyargn - 1);
-      if (yyn == YYENOMEM)
-        return YYENOMEM;
-      else
-        yycount += yyn;
+      int yyn = yypact[+*yyssp];
+      YYPTRDIFF_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
+      yysize = yysize0;
+      yyarg[yycount++] = yytname[yytoken];
+      if (!yypact_value_is_default (yyn))
+        {
+          /* Start YYX at -YYN if negative to avoid negative indexes in
+             YYCHECK.  In other words, skip the first -YYN actions for
+             this state because they are default actions.  */
+          int yyxbegin = yyn < 0 ? -yyn : 0;
+          /* Stay within bounds of both yycheck and yytname.  */
+          int yychecklim = YYLAST - yyn + 1;
+          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+          int yyx;
+
+          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
+                && !yytable_value_is_error (yytable[yyx + yyn]))
+              {
+                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+                  {
+                    yycount = 1;
+                    yysize = yysize0;
+                    break;
+                  }
+                yyarg[yycount++] = yytname[yyx];
+                {
+                  YYPTRDIFF_T yysize1
+                    = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
+                  if (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM)
+                    yysize = yysize1;
+                  else
+                    return 2;
+                }
+              }
+        }
     }
-  return yycount;
-}
-
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return -1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return YYENOMEM if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (struct parser_params *p, YYPTRDIFF_T *yymsg_alloc, char **yymsg,
-                const yypcontext_t *yyctx)
-{
-  enum { YYARGS_MAX = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = YY_NULLPTR;
-  /* Arguments of yyformat: reported tokens (one for the "unexpected",
-     one per "expected"). */
-  yysymbol_kind_t yyarg[YYARGS_MAX];
-  /* Cumulated lengths of YYARG.  */
-  YYPTRDIFF_T yysize = 0;
-
-  /* Actual size of YYARG. */
-  int yycount = yy_syntax_error_arguments (yyctx, yyarg, YYARGS_MAX);
-  if (yycount == YYENOMEM)
-    return YYENOMEM;
 
   switch (yycount)
     {
-#define YYCASE_(N, S)                       \
+# define YYCASE_(N, S)                      \
       case N:                               \
         yyformat = S;                       \
-        break
+      break
     default: /* Avoid compiler warnings. */
       YYCASE_(0, YY_("syntax error"));
       YYCASE_(1, YY_("syntax error, unexpected %s"));
@@ -9028,23 +8527,17 @@ yysyntax_error (struct parser_params *p,
       YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
       YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
       YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-#undef YYCASE_
+# undef YYCASE_
     }
 
-  /* Compute error message size.  Don't count the "%s"s, but reserve
-     room for the terminator.  */
-  yysize = yystrlen (yyformat) - 2 * yycount + 1;
   {
-    int yyi;
-    for (yyi = 0; yyi < yycount; ++yyi)
-      {
-        YYPTRDIFF_T yysize1
-          = yysize + yytnamerr (YY_NULLPTR, yytname[yyarg[yyi]]);
-        if (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM)
-          yysize = yysize1;
-        else
-          return YYENOMEM;
-      }
+    /* Don't count the "%s"s in the final size, but reserve room for
+       the terminator.  */
+    YYPTRDIFF_T yysize1 = yysize + (yystrlen (yyformat) - 2 * yycount) + 1;
+    if (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM)
+      yysize = yysize1;
+    else
+      return 2;
   }
 
   if (*yymsg_alloc < yysize)
@@ -9053,7 +8546,7 @@ yysyntax_error (struct parser_params *p,
       if (! (yysize <= *yymsg_alloc
              && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
         *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return -1;
+      return 1;
     }
 
   /* Avoid sprintf, as that infringes on the user's name space.
@@ -9065,7 +8558,7 @@ yysyntax_error (struct parser_params *p,
     while ((*yyp = *yyformat) != '\0')
       if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
         {
-          yyp += yytnamerr (yyp, yytname[yyarg[yyi++]]);
+          yyp += yytnamerr (yyp, yyarg[yyi++]);
           yyformat += 2;
         }
       else
@@ -9076,33 +8569,30 @@ yysyntax_error (struct parser_params *p,
   }
   return 0;
 }
-
+#endif /* YYERROR_VERBOSE */
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
 `-----------------------------------------------*/
 
 static void
-yydestruct (const char *yymsg,
-            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, struct parser_params *p)
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, struct parser_params *p)
 {
-  YY_USE (yyvaluep);
-  YY_USE (yylocationp);
-  YY_USE (p);
+  YYUSE (yyvaluep);
+  YYUSE (yylocationp);
+  YYUSE (p);
   if (!yymsg)
     yymsg = "Deleting";
-  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
 
   YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-  YY_USE (yykind);
+  YYUSE (yytype);
   YY_IGNORE_MAYBE_UNINITIALIZED_END
 }
 
 
 
 
-
-
 /*----------.
 | yyparse.  |
 `----------*/
@@ -9110,7 +8600,7 @@ yydestruct (const char *yymsg,
 int
 yyparse (struct parser_params *p)
 {
-/* Lookahead token kind.  */
+/* The lookahead symbol.  */
 int yychar;
 
 
@@ -9129,50 +8619,55 @@ static YYLTYPE yyloc_default
 YYLTYPE yylloc = yyloc_default;
 
     /* Number of syntax errors so far.  */
-    int yynerrs = 0;
+    int yynerrs;
 
-    yy_state_fast_t yystate = 0;
+    yy_state_fast_t yystate;
     /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus = 0;
+    int yyerrstatus;
 
-    /* Refer to the stacks through separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
+    /* The stacks and their tools:
+       'yyss': related to states.
+       'yyvs': related to semantic values.
+       'yyls': related to locations.
 
-    /* Their size.  */
-    YYPTRDIFF_T yystacksize = YYINITDEPTH;
+       Refer to the stacks through separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
 
-    /* The state stack: array, bottom, top.  */
+    /* The state stack.  */
     yy_state_t yyssa[YYINITDEPTH];
-    yy_state_t *yyss = yyssa;
-    yy_state_t *yyssp = yyss;
+    yy_state_t *yyss;
+    yy_state_t *yyssp;
 
-    /* The semantic value stack: array, bottom, top.  */
+    /* The semantic value stack.  */
     YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs = yyvsa;
-    YYSTYPE *yyvsp = yyvs;
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
 
-    /* The location stack: array, bottom, top.  */
+    /* The location stack.  */
     YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls = yylsa;
-    YYLTYPE *yylsp = yyls;
+    YYLTYPE *yyls;
+    YYLTYPE *yylsp;
+
+    /* The locations where the error started and ended.  */
+    YYLTYPE yyerror_range[3];
+
+    YYPTRDIFF_T yystacksize;
 
   int yyn;
-  /* The return value of yyparse.  */
   int yyresult;
-  /* Lookahead symbol kind.  */
-  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken = 0;
   /* The variables used to return semantic value and location from the
      action routines.  */
   YYSTYPE yyval;
   YYLTYPE yyloc;
 
-  /* The locations where the error started and ended.  */
-  YYLTYPE yyerror_range[3];
-
+#if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
   char *yymsg = yymsgbuf;
   YYPTRDIFF_T yymsg_alloc = sizeof yymsgbuf;
+#endif
 
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
@@ -9180,18 +8675,25 @@ YYLTYPE yylloc = yyloc_default;
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
+  yyssp = yyss = yyssa;
+  yyvsp = yyvs = yyvsa;
+  yylsp = yyls = yylsa;
+  yystacksize = YYINITDEPTH;
+
   YYDPRINTF ((p, "Starting parse\n"));
 
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
   yychar = YYEMPTY; /* Cause a token to be read.  */
 
-
 /* User initialization code.  */
 #line 1371 "parse.y"
 {
     RUBY_SET_YYLLOC_OF_NONE(yylloc);
 }
 
-#line 9190 "parse.c"
+#line 8692 "parse.c"
 
   yylsp[0] = yylloc;
   goto yysetstate;
@@ -9215,11 +8717,10 @@ yysetstate:
   YY_IGNORE_USELESS_CAST_BEGIN
   *yyssp = YY_CAST (yy_state_t, yystate);
   YY_IGNORE_USELESS_CAST_END
-  YY_STACK_PRINT (yyss, yyssp);
 
   if (yyss + yystacksize - 1 <= yyssp)
 #if !defined yyoverflow && !defined YYSTACK_RELOCATE
-    YYNOMEM;
+    goto yyexhaustedlab;
 #else
     {
       /* Get the current used size of the three stacks, in elements.  */
@@ -9250,7 +8751,7 @@ yysetstate:
 # else /* defined YYSTACK_RELOCATE */
       /* Extend the stack our own way.  */
       if (YYMAXDEPTH <= yystacksize)
-        YYNOMEM;
+        goto yyexhaustedlab;
       yystacksize *= 2;
       if (YYMAXDEPTH < yystacksize)
         yystacksize = YYMAXDEPTH;
@@ -9261,11 +8762,11 @@ yysetstate:
           YY_CAST (union yyalloc *,
                    YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
         if (! yyptr)
-          YYNOMEM;
+          goto yyexhaustedlab;
         YYSTACK_RELOCATE (yyss_alloc, yyss);
         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
         YYSTACK_RELOCATE (yyls_alloc, yyls);
-#  undef YYSTACK_RELOCATE
+# undef YYSTACK_RELOCATE
         if (yyss1 != yyssa)
           YYSTACK_FREE (yyss1);
       }
@@ -9285,7 +8786,6 @@ yysetstate:
     }
 #endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */
 
-
   if (yystate == YYFINAL)
     YYACCEPT;
 
@@ -9306,30 +8806,18 @@ yybackup:
 
   /* Not known => get a lookahead token if don't already have one.  */
 
-  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
   if (yychar == YYEMPTY)
     {
-      YYDPRINTF ((p, "Reading a token\n"));
+      YYDPRINTF ((p, "Reading a token: "));
       yychar = yylex (&yylval, &yylloc, p);
     }
 
-  if (yychar <= END_OF_INPUT)
+  if (yychar <= YYEOF)
     {
-      yychar = END_OF_INPUT;
-      yytoken = YYSYMBOL_YYEOF;
+      yychar = yytoken = YYEOF;
       YYDPRINTF ((p, "Now at end of input.\n"));
     }
-  else if (yychar == YYerror)
-    {
-      /* The scanner already issued an error message, process directly
-         to error recovery.  But do not keep the error token as
-         lookahead, it is too special and may lead us to an endless
-         loop in error recovery. */
-      yychar = YYUNDEF;
-      yytoken = YYSYMBOL_YYerror;
-      yyerror_range[1] = yylloc;
-      goto yyerrlab1;
-    }
   else
     {
       yytoken = YYTRANSLATE (yychar);
@@ -9401,16 +8889,16 @@ yyreduce:
   YY_REDUCE_PRINT (yyn);
   switch (yyn)
     {
-  case 2: /* $@1: %empty  */
+  case 2:
 #line 1580 "parse.y"
                    {
 			SET_LEX_STATE(EXPR_BEG);
 			local_push(p, ifndef_ripper(1)+0);
 		    }
-#line 9406 "parse.c"
+#line 8894 "parse.c"
     break;
 
-  case 3: /* program: $@1 top_compstmt  */
+  case 3:
 #line 1585 "parse.y"
                     {
 		    /*%%%*/
@@ -9431,18 +8919,18 @@ yyreduce:
 		    /*% ripper[final]: program!($2) %*/
 			local_pop(p);
 		    }
-#line 9430 "parse.c"
+#line 8918 "parse.c"
     break;
 
-  case 4: /* top_compstmt: top_stmts opt_terms  */
+  case 4:
 #line 1607 "parse.y"
                     {
 			(yyval.node) = void_stmts(p, (yyvsp[-1].node));
 		    }
-#line 9438 "parse.c"
+#line 8926 "parse.c"
     break;
 
-  case 5: /* top_stmts: none  */
+  case 5:
 #line 1613 "parse.y"
                     {
 		    /*%%%*/
@@ -9450,10 +8938,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!(stmts_new!, void_stmt!) %*/
 		    }
-#line 9449 "parse.c"
+#line 8937 "parse.c"
     break;
 
-  case 6: /* top_stmts: top_stmt  */
+  case 6:
 #line 1620 "parse.y"
                     {
 		    /*%%%*/
@@ -9461,10 +8949,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!(stmts_new!, $1) %*/
 		    }
-#line 9460 "parse.c"
+#line 8948 "parse.c"
     break;
 
-  case 7: /* top_stmts: top_stmts terms top_stmt  */
+  case 7:
 #line 1627 "parse.y"
                     {
 		    /*%%%*/
@@ -9472,18 +8960,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!($1, $3) %*/
 		    }
-#line 9471 "parse.c"
+#line 8959 "parse.c"
     break;
 
-  case 9: /* top_stmt: "`BEGIN'" begin_block  */
+  case 9:
 #line 1637 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 9479 "parse.c"
+#line 8967 "parse.c"
     break;
 
-  case 10: /* begin_block: '{' top_compstmt '}'  */
+  case 10:
 #line 1643 "parse.y"
                     {
 		    /*%%%*/
@@ -9493,16 +8981,16 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: BEGIN!($2) %*/
 		    }
-#line 9492 "parse.c"
+#line 8980 "parse.c"
     break;
 
-  case 11: /* $@2: %empty  */
+  case 11:
 #line 1655 "parse.y"
                          {if (!(yyvsp[-1].node)) {yyerror1(&(yylsp[0]), "else without rescue is useless");}}
-#line 9498 "parse.c"
+#line 8986 "parse.c"
     break;
 
-  case 12: /* bodystmt: compstmt opt_rescue k_else $@2 compstmt opt_ensure  */
+  case 12:
 #line 1658 "parse.y"
                     {
 		    /*%%%*/
@@ -9510,10 +8998,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: bodystmt!(escape_Qundef($1), escape_Qundef($2), escape_Qundef($5), escape_Qundef($6)) %*/
 		    }
-#line 9509 "parse.c"
+#line 8997 "parse.c"
     break;
 
-  case 13: /* bodystmt: compstmt opt_rescue opt_ensure  */
+  case 13:
 #line 1667 "parse.y"
                     {
 		    /*%%%*/
@@ -9521,18 +9009,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: bodystmt!(escape_Qundef($1), escape_Qundef($2), Qnil, escape_Qundef($3)) %*/
 		    }
-#line 9520 "parse.c"
+#line 9008 "parse.c"
     break;
 
-  case 14: /* compstmt: stmts opt_terms  */
+  case 14:
 #line 1676 "parse.y"
                     {
 			(yyval.node) = void_stmts(p, (yyvsp[-1].node));
 		    }
-#line 9528 "parse.c"
+#line 9016 "parse.c"
     break;
 
-  case 15: /* stmts: none  */
+  case 15:
 #line 1682 "parse.y"
                     {
 		    /*%%%*/
@@ -9540,10 +9028,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!(stmts_new!, void_stmt!) %*/
 		    }
-#line 9539 "parse.c"
+#line 9027 "parse.c"
     break;
 
-  case 16: /* stmts: stmt_or_begin  */
+  case 16:
 #line 1689 "parse.y"
                     {
 		    /*%%%*/
@@ -9551,10 +9039,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!(stmts_new!, $1) %*/
 		    }
-#line 9550 "parse.c"
+#line 9038 "parse.c"
     break;
 
-  case 17: /* stmts: stmts terms stmt_or_begin  */
+  case 17:
 #line 1696 "parse.y"
                     {
 		    /*%%%*/
@@ -9562,40 +9050,40 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: stmts_add!($1, $3) %*/
 		    }
-#line 9561 "parse.c"
+#line 9049 "parse.c"
     break;
 
-  case 18: /* stmt_or_begin: stmt  */
+  case 18:
 #line 1705 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 9569 "parse.c"
+#line 9057 "parse.c"
     break;
 
-  case 19: /* $@3: %empty  */
+  case 19:
 #line 1709 "parse.y"
                     {
 			yyerror1(&(yylsp[0]), "BEGIN is permitted only at toplevel");
 		    }
-#line 9577 "parse.c"
+#line 9065 "parse.c"
     break;
 
-  case 20: /* stmt_or_begin: "`BEGIN'" $@3 begin_block  */
+  case 20:
 #line 1713 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 9585 "parse.c"
+#line 9073 "parse.c"
     break;
 
-  case 21: /* $@4: %empty  */
+  case 21:
 #line 1718 "parse.y"
                                       {SET_LEX_STATE(EXPR_FNAME|EXPR_FITEM);}
-#line 9591 "parse.c"
+#line 9079 "parse.c"
     break;
 
-  case 22: /* stmt: "`alias'" fitem $@4 fitem  */
+  case 22:
 #line 1719 "parse.y"
                     {
 		    /*%%%*/
@@ -9603,10 +9091,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: alias!($2, $4) %*/
 		    }
-#line 9602 "parse.c"
+#line 9090 "parse.c"
     break;
 
-  case 23: /* stmt: "`alias'" "global variable" "global variable"  */
+  case 23:
 #line 1726 "parse.y"
                     {
 		    /*%%%*/
@@ -9614,10 +9102,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_alias!($2, $3) %*/
 		    }
-#line 9613 "parse.c"
+#line 9101 "parse.c"
     break;
 
-  case 24: /* stmt: "`alias'" "global variable" "back reference"  */
+  case 24:
 #line 1733 "parse.y"
                     {
 		    /*%%%*/
@@ -9628,10 +9116,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_alias!($2, $3) %*/
 		    }
-#line 9627 "parse.c"
+#line 9115 "parse.c"
     break;
 
-  case 25: /* stmt: "`alias'" "global variable" "numbered reference"  */
+  case 25:
 #line 1743 "parse.y"
                     {
 			static const char mesg[] = "can't make alias for the number variables";
@@ -9641,10 +9129,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: alias_error!(ERR_MESG(), $3) %*/
 		    }
-#line 9640 "parse.c"
+#line 9128 "parse.c"
     break;
 
-  case 26: /* stmt: "`undef'" undef_list  */
+  case 26:
 #line 1752 "parse.y"
                     {
 		    /*%%%*/
@@ -9652,10 +9140,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: undef!($2) %*/
 		    }
-#line 9651 "parse.c"
+#line 9139 "parse.c"
     break;
 
-  case 27: /* stmt: stmt "`if' modifier" expr_value  */
+  case 27:
 #line 1759 "parse.y"
                     {
 		    /*%%%*/
@@ -9664,10 +9152,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: if_mod!($3, $1) %*/
 		    }
-#line 9663 "parse.c"
+#line 9151 "parse.c"
     break;
 
-  case 28: /* stmt: stmt "`unless' modifier" expr_value  */
+  case 28:
 #line 1767 "parse.y"
                     {
 		    /*%%%*/
@@ -9676,10 +9164,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: unless_mod!($3, $1) %*/
 		    }
-#line 9675 "parse.c"
+#line 9163 "parse.c"
     break;
 
-  case 29: /* stmt: stmt "`while' modifier" expr_value  */
+  case 29:
 #line 1775 "parse.y"
                     {
 		    /*%%%*/
@@ -9692,10 +9180,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: while_mod!($3, $1) %*/
 		    }
-#line 9691 "parse.c"
+#line 9179 "parse.c"
     break;
 
-  case 30: /* stmt: stmt "`until' modifier" expr_value  */
+  case 30:
 #line 1787 "parse.y"
                     {
 		    /*%%%*/
@@ -9708,10 +9196,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: until_mod!($3, $1) %*/
 		    }
-#line 9707 "parse.c"
+#line 9195 "parse.c"
     break;
 
-  case 31: /* stmt: stmt "`rescue' modifier" stmt  */
+  case 31:
 #line 1799 "parse.y"
                     {
 		    /*%%%*/
@@ -9722,10 +9210,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rescue_mod!($1, $3) %*/
 		    }
-#line 9721 "parse.c"
+#line 9209 "parse.c"
     break;
 
-  case 32: /* stmt: "`END'" '{' compstmt '}'  */
+  case 32:
 #line 1809 "parse.y"
                     {
 			if (p->ctxt.in_def) {
@@ -9740,10 +9228,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: END!($3) %*/
 		    }
-#line 9739 "parse.c"
+#line 9227 "parse.c"
     break;
 
-  case 34: /* stmt: mlhs '=' lex_ctxt command_call  */
+  case 34:
 #line 1824 "parse.y"
                     {
 		    /*%%%*/
@@ -9752,10 +9240,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: massign!($1, $4) %*/
 		    }
-#line 9751 "parse.c"
+#line 9239 "parse.c"
     break;
 
-  case 35: /* stmt: lhs '=' lex_ctxt mrhs  */
+  case 35:
 #line 1832 "parse.y"
                     {
 		    /*%%%*/
@@ -9763,10 +9251,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assign!($1, $4) %*/
 		    }
-#line 9762 "parse.c"
+#line 9250 "parse.c"
     break;
 
-  case 36: /* stmt: mlhs '=' lex_ctxt mrhs_arg "`rescue' modifier" stmt  */
+  case 36:
 #line 1839 "parse.y"
                     {
                     /*%%%*/
@@ -9775,10 +9263,10 @@ yyreduce:
                     /*% %*/
                     /*% ripper: massign!($1, rescue_mod!($4, $6)) %*/
                     }
-#line 9774 "parse.c"
+#line 9262 "parse.c"
     break;
 
-  case 37: /* stmt: mlhs '=' lex_ctxt mrhs_arg  */
+  case 37:
 #line 1847 "parse.y"
                     {
 		    /*%%%*/
@@ -9786,20 +9274,20 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: massign!($1, $4) %*/
 		    }
-#line 9785 "parse.c"
+#line 9273 "parse.c"
     break;
 
-  case 39: /* stmt: error  */
+  case 39:
 #line 1855 "parse.y"
                     {
 		    /*%%%*/
 			(yyval.node) = NEW_ERROR(&(yyloc));
 		    /*% %*/
 		    }
-#line 9795 "parse.c"
+#line 9283 "parse.c"
     break;
 
-  case 40: /* command_asgn: lhs '=' lex_ctxt command_rhs  */
+  case 40:
 #line 1863 "parse.y"
                     {
 		    /*%%%*/
@@ -9807,10 +9295,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assign!($1, $4) %*/
 		    }
-#line 9806 "parse.c"
+#line 9294 "parse.c"
     break;
 
-  case 41: /* command_asgn: var_lhs "operator-assignment" lex_ctxt command_rhs  */
+  case 41:
 #line 1870 "parse.y"
                     {
 		    /*%%%*/
@@ -9818,10 +9306,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!($1, $2, $4) %*/
 		    }
-#line 9817 "parse.c"
+#line 9305 "parse.c"
     break;
 
-  case 42: /* command_asgn: primary_value '[' opt_call_args rbracket "operator-assignment" lex_ctxt command_rhs  */
+  case 42:
 #line 1877 "parse.y"
                     {
 		    /*%%%*/
@@ -9830,10 +9318,10 @@ yyreduce:
 		    /*% ripper: opassign!(aref_field!($1, escape_Qundef($3)), $5, $7) %*/
 
 		    }
-#line 9829 "parse.c"
+#line 9317 "parse.c"
     break;
 
-  case 43: /* command_asgn: primary_value call_op "local variable or method" "operator-assignment" lex_ctxt command_rhs  */
+  case 43:
 #line 1885 "parse.y"
                     {
 		    /*%%%*/
@@ -9841,10 +9329,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, $2, $3), $4, $6) %*/
 		    }
-#line 9840 "parse.c"
+#line 9328 "parse.c"
     break;
 
-  case 44: /* command_asgn: primary_value call_op "constant" "operator-assignment" lex_ctxt command_rhs  */
+  case 44:
 #line 1892 "parse.y"
                     {
 		    /*%%%*/
@@ -9852,10 +9340,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, $2, $3), $4, $6) %*/
 		    }
-#line 9851 "parse.c"
+#line 9339 "parse.c"
     break;
 
-  case 45: /* command_asgn: primary_value "::" "constant" "operator-assignment" lex_ctxt command_rhs  */
+  case 45:
 #line 1899 "parse.y"
                     {
 		    /*%%%*/
@@ -9864,10 +9352,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(const_path_field!($1, $3), $4, $6) %*/
 		    }
-#line 9863 "parse.c"
+#line 9351 "parse.c"
     break;
 
-  case 46: /* command_asgn: primary_value "::" "local variable or method" "operator-assignment" lex_ctxt command_rhs  */
+  case 46:
 #line 1907 "parse.y"
                     {
 		    /*%%%*/
@@ -9875,10 +9363,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, ID2VAL(idCOLON2), $3), $4, $6) %*/
 		    }
-#line 9874 "parse.c"
+#line 9362 "parse.c"
     break;
 
-  case 47: /* command_asgn: defn_head f_opt_paren_args '=' command  */
+  case 47:
 #line 1914 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-3].node), &(yylsp[-3]));
@@ -9890,10 +9378,10 @@ yyreduce:
 		    /*% ripper: def!(get_value($1), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 9889 "parse.c"
+#line 9377 "parse.c"
     break;
 
-  case 48: /* command_asgn: defn_head f_opt_paren_args '=' command "`rescue' modifier" arg  */
+  case 48:
 #line 1925 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-5].node), &(yylsp[-5]));
@@ -9906,10 +9394,10 @@ yyreduce:
 		    /*% ripper: def!(get_value($1), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 9905 "parse.c"
+#line 9393 "parse.c"
     break;
 
-  case 49: /* command_asgn: defs_head f_opt_paren_args '=' command  */
+  case 49:
 #line 1937 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-3].node), &(yylsp[-3]));
@@ -9923,10 +9411,10 @@ yyreduce:
 		    /*% ripper: defs!(AREF($1, 0), AREF($1, 1), AREF($1, 2), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 9922 "parse.c"
+#line 9410 "parse.c"
     break;
 
-  case 50: /* command_asgn: defs_head f_opt_paren_args '=' command "`rescue' modifier" arg  */
+  case 50:
 #line 1950 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-5].node), &(yylsp[-5]));
@@ -9941,10 +9429,10 @@ yyreduce:
 		    /*% ripper: defs!(AREF($1, 0), AREF($1, 1), AREF($1, 2), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 9940 "parse.c"
+#line 9428 "parse.c"
     break;
 
-  case 51: /* command_asgn: backref "operator-assignment" lex_ctxt command_rhs  */
+  case 51:
 #line 1964 "parse.y"
                     {
 		    /*%%%*/
@@ -9953,19 +9441,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: backref_error(p, RNODE($1), assign!(var_field(p, $1), $4)) %*/
 		    }
-#line 9952 "parse.c"
+#line 9440 "parse.c"
     break;
 
-  case 52: /* command_rhs: command_call  */
+  case 52:
 #line 1974 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 9961 "parse.c"
+#line 9449 "parse.c"
     break;
 
-  case 53: /* command_rhs: command_call "`rescue' modifier" stmt  */
+  case 53:
 #line 1979 "parse.y"
                     {
 		    /*%%%*/
@@ -9975,42 +9463,42 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rescue_mod!($1, $3) %*/
 		    }
-#line 9974 "parse.c"
+#line 9462 "parse.c"
     break;
 
-  case 56: /* expr: expr "`and'" expr  */
+  case 56:
 #line 1992 "parse.y"
                     {
 			(yyval.node) = logop(p, idAND, (yyvsp[-2].node), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 9982 "parse.c"
+#line 9470 "parse.c"
     break;
 
-  case 57: /* expr: expr "`or'" expr  */
+  case 57:
 #line 1996 "parse.y"
                     {
 			(yyval.node) = logop(p, idOR, (yyvsp[-2].node), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 9990 "parse.c"
+#line 9478 "parse.c"
     break;
 
-  case 58: /* expr: "`not'" opt_nl expr  */
+  case 58:
 #line 2000 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, method_cond(p, (yyvsp[0].node), &(yylsp[0])), METHOD_NOT, &(yylsp[-2]), &(yyloc));
 		    }
-#line 9998 "parse.c"
+#line 9486 "parse.c"
     break;
 
-  case 59: /* expr: '!' command_call  */
+  case 59:
 #line 2004 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, method_cond(p, (yyvsp[0].node), &(yylsp[0])), '!', &(yylsp[-1]), &(yyloc));
 		    }
-#line 10006 "parse.c"
+#line 9494 "parse.c"
     break;
 
-  case 60: /* @5: %empty  */
+  case 60:
 #line 2008 "parse.y"
                     {
 			value_expr((yyvsp[-1].node));
@@ -10020,18 +9508,18 @@ yyreduce:
 			p->ctxt.in_kwarg = 1;
 			(yyval.tbl) = push_pvtbl(p);
 		    }
-#line 10019 "parse.c"
+#line 9507 "parse.c"
     break;
 
-  case 61: /* @6: %empty  */
+  case 61:
 #line 2016 "parse.y"
                     {
 			(yyval.tbl) = push_pktbl(p);
 		    }
-#line 10027 "parse.c"
+#line 9515 "parse.c"
     break;
 
-  case 62: /* expr: arg "=>" @5 @6 p_top_expr_body  */
+  case 62:
 #line 2020 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-1].tbl));
@@ -10042,10 +9530,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: case!($1, in!($5, Qnil, Qnil)) %*/
 		    }
-#line 10041 "parse.c"
+#line 9529 "parse.c"
     break;
 
-  case 63: /* @7: %empty  */
+  case 63:
 #line 2030 "parse.y"
                     {
 			value_expr((yyvsp[-1].node));
@@ -10055,18 +9543,18 @@ yyreduce:
 			p->ctxt.in_kwarg = 1;
 			(yyval.tbl) = push_pvtbl(p);
 		    }
-#line 10054 "parse.c"
+#line 9542 "parse.c"
     break;
 
-  case 64: /* @8: %empty  */
+  case 64:
 #line 2038 "parse.y"
                     {
 			(yyval.tbl) = push_pktbl(p);
 		    }
-#line 10062 "parse.c"
+#line 9550 "parse.c"
     break;
 
-  case 65: /* expr: arg "`in'" @7 @8 p_top_expr_body  */
+  case 65:
 #line 2042 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-1].tbl));
@@ -10077,10 +9565,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: case!($1, in!($5, Qnil, Qnil)) %*/
 		    }
-#line 10076 "parse.c"
+#line 9564 "parse.c"
     break;
 
-  case 67: /* def_name: fname  */
+  case 67:
 #line 2055 "parse.y"
                     {
 			ID fname = get_id((yyvsp[0].id));
@@ -10096,10 +9584,10 @@ yyreduce:
 			$$ = NEW_RIPPER(fname, get_value($1), $$, &NULL_LOC);
 		    %*/
 		    }
-#line 10095 "parse.c"
+#line 9583 "parse.c"
     break;
 
-  case 68: /* defn_head: k_def def_name  */
+  case 68:
 #line 2072 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
@@ -10107,19 +9595,19 @@ yyreduce:
 			(yyval.node) = NEW_NODE(NODE_DEFN, 0, (yyval.node)->nd_mid, (yyval.node), &(yyloc));
 		    /*% %*/
 		    }
-#line 10106 "parse.c"
+#line 9594 "parse.c"
     break;
 
-  case 69: /* $@9: %empty  */
+  case 69:
 #line 2081 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_FNAME);
 			p->ctxt.in_argdef = 1;
 		    }
-#line 10115 "parse.c"
+#line 9603 "parse.c"
     break;
 
-  case 70: /* defs_head: k_def singleton dot_or_colon $@9 def_name  */
+  case 70:
 #line 2086 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_ENDFN|EXPR_LABEL); /* force for args */
@@ -10132,49 +9620,49 @@ yyreduce:
 			$<node>$->nd_rval = ary;
 		    %*/
 		    }
-#line 10131 "parse.c"
+#line 9619 "parse.c"
     break;
 
-  case 71: /* expr_value: expr  */
+  case 71:
 #line 2100 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 10140 "parse.c"
+#line 9628 "parse.c"
     break;
 
-  case 72: /* expr_value: error  */
+  case 72:
 #line 2105 "parse.y"
                     {
 		    /*%%%*/
 			(yyval.node) = NEW_ERROR(&(yyloc));
 		    /*% %*/
 		    }
-#line 10150 "parse.c"
+#line 9638 "parse.c"
     break;
 
-  case 73: /* $@10: %empty  */
+  case 73:
 #line 2112 "parse.y"
                   {COND_PUSH(1);}
-#line 10156 "parse.c"
+#line 9644 "parse.c"
     break;
 
-  case 74: /* $@11: %empty  */
+  case 74:
 #line 2112 "parse.y"
                                                 {COND_POP();}
-#line 10162 "parse.c"
+#line 9650 "parse.c"
     break;
 
-  case 75: /* expr_value_do: $@10 expr_value do $@11  */
+  case 75:
 #line 2113 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-2].node);
 		    }
-#line 10170 "parse.c"
+#line 9658 "parse.c"
     break;
 
-  case 79: /* block_command: block_call call_op2 operation2 command_args  */
+  case 79:
 #line 2124 "parse.y"
                     {
 		    /*%%%*/
@@ -10182,10 +9670,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(call!($1, $2, $3), $4) %*/
 		    }
-#line 10181 "parse.c"
+#line 9669 "parse.c"
     break;
 
-  case 80: /* cmd_brace_block: "{ arg" brace_body '}'  */
+  case 80:
 #line 2133 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
@@ -10194,10 +9682,10 @@ yyreduce:
 			nd_set_line((yyval.node), (yylsp[-2]).end_pos.lineno);
 		    /*% %*/
 		    }
-#line 10193 "parse.c"
+#line 9681 "parse.c"
     break;
 
-  case 81: /* fcall: operation  */
+  case 81:
 #line 2143 "parse.y"
                     {
 		    /*%%%*/
@@ -10206,10 +9694,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $1 %*/
 		    }
-#line 10205 "parse.c"
+#line 9693 "parse.c"
     break;
 
-  case 82: /* command: fcall command_args  */
+  case 82:
 #line 2153 "parse.y"
                     {
 		    /*%%%*/
@@ -10219,10 +9707,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: command!($1, $2) %*/
 		    }
-#line 10218 "parse.c"
+#line 9706 "parse.c"
     break;
 
-  case 83: /* command: fcall command_args cmd_brace_block  */
+  case 83:
 #line 2162 "parse.y"
                     {
 		    /*%%%*/
@@ -10234,10 +9722,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!(command!($1, $2), $3) %*/
 		    }
-#line 10233 "parse.c"
+#line 9721 "parse.c"
     break;
 
-  case 84: /* command: primary_value call_op operation2 command_args  */
+  case 84:
 #line 2173 "parse.y"
                     {
 		    /*%%%*/
@@ -10245,10 +9733,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: command_call!($1, $2, $3, $4) %*/
 		    }
-#line 10244 "parse.c"
+#line 9732 "parse.c"
     break;
 
-  case 85: /* command: primary_value call_op operation2 command_args cmd_brace_block  */
+  case 85:
 #line 2180 "parse.y"
                     {
 		    /*%%%*/
@@ -10256,10 +9744,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!(command_call!($1, $2, $3, $4), $5) %*/
 		    }
-#line 10255 "parse.c"
+#line 9743 "parse.c"
     break;
 
-  case 86: /* command: primary_value "::" operation2 command_args  */
+  case 86:
 #line 2187 "parse.y"
                     {
 		    /*%%%*/
@@ -10267,10 +9755,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: command_call!($1, ID2VAL(idCOLON2), $3, $4) %*/
 		    }
-#line 10266 "parse.c"
+#line 9754 "parse.c"
     break;
 
-  case 87: /* command: primary_value "::" operation2 command_args cmd_brace_block  */
+  case 87:
 #line 2194 "parse.y"
                     {
 		    /*%%%*/
@@ -10278,10 +9766,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!(command_call!($1, ID2VAL(idCOLON2), $3, $4), $5) %*/
 		   }
-#line 10277 "parse.c"
+#line 9765 "parse.c"
     break;
 
-  case 88: /* command: "`super'" command_args  */
+  case 88:
 #line 2201 "parse.y"
                     {
 		    /*%%%*/
@@ -10290,10 +9778,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: super!($2) %*/
 		    }
-#line 10289 "parse.c"
+#line 9777 "parse.c"
     break;
 
-  case 89: /* command: "`yield'" command_args  */
+  case 89:
 #line 2209 "parse.y"
                     {
 		    /*%%%*/
@@ -10302,10 +9790,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: yield!($2) %*/
 		    }
-#line 10301 "parse.c"
+#line 9789 "parse.c"
     break;
 
-  case 90: /* command: k_return call_args  */
+  case 90:
 #line 2217 "parse.y"
                     {
 		    /*%%%*/
@@ -10313,10 +9801,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: return!($2) %*/
 		    }
-#line 10312 "parse.c"
+#line 9800 "parse.c"
     break;
 
-  case 91: /* command: "`break'" call_args  */
+  case 91:
 #line 2224 "parse.y"
                     {
 		    /*%%%*/
@@ -10324,10 +9812,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: break!($2) %*/
 		    }
-#line 10323 "parse.c"
+#line 9811 "parse.c"
     break;
 
-  case 92: /* command: "`next'" call_args  */
+  case 92:
 #line 2231 "parse.y"
                     {
 		    /*%%%*/
@@ -10335,10 +9823,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: next!($2) %*/
 		    }
-#line 10334 "parse.c"
+#line 9822 "parse.c"
     break;
 
-  case 94: /* mlhs: "(" mlhs_inner rparen  */
+  case 94:
 #line 2241 "parse.y"
                     {
 		    /*%%%*/
@@ -10346,10 +9834,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_paren!($2) %*/
 		    }
-#line 10345 "parse.c"
+#line 9833 "parse.c"
     break;
 
-  case 96: /* mlhs_inner: "(" mlhs_inner rparen  */
+  case 96:
 #line 2251 "parse.y"
                     {
 		    /*%%%*/
@@ -10357,10 +9845,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_paren!($2) %*/
 		    }
-#line 10356 "parse.c"
+#line 9844 "parse.c"
     break;
 
-  case 97: /* mlhs_basic: mlhs_head  */
+  case 97:
 #line 2260 "parse.y"
                     {
 		    /*%%%*/
@@ -10368,10 +9856,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $1 %*/
 		    }
-#line 10367 "parse.c"
+#line 9855 "parse.c"
     break;
 
-  case 98: /* mlhs_basic: mlhs_head mlhs_item  */
+  case 98:
 #line 2267 "parse.y"
                     {
 		    /*%%%*/
@@ -10379,10 +9867,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!($1, $2) %*/
 		    }
-#line 10378 "parse.c"
+#line 9866 "parse.c"
     break;
 
-  case 99: /* mlhs_basic: mlhs_head "*" mlhs_node  */
+  case 99:
 #line 2274 "parse.y"
                     {
 		    /*%%%*/
@@ -10390,10 +9878,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!($1, $3) %*/
 		    }
-#line 10389 "parse.c"
+#line 9877 "parse.c"
     break;
 
-  case 100: /* mlhs_basic: mlhs_head "*" mlhs_node ',' mlhs_post  */
+  case 100:
 #line 2281 "parse.y"
                     {
 		    /*%%%*/
@@ -10401,10 +9889,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!($1, $3), $5) %*/
 		    }
-#line 10400 "parse.c"
+#line 9888 "parse.c"
     break;
 
-  case 101: /* mlhs_basic: mlhs_head "*"  */
+  case 101:
 #line 2288 "parse.y"
                     {
 		    /*%%%*/
@@ -10412,10 +9900,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!($1, Qnil) %*/
 		    }
-#line 10411 "parse.c"
+#line 9899 "parse.c"
     break;
 
-  case 102: /* mlhs_basic: mlhs_head "*" ',' mlhs_post  */
+  case 102:
 #line 2295 "parse.y"
                     {
 		    /*%%%*/
@@ -10423,10 +9911,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!($1, Qnil), $4) %*/
 		    }
-#line 10422 "parse.c"
+#line 9910 "parse.c"
     break;
 
-  case 103: /* mlhs_basic: "*" mlhs_node  */
+  case 103:
 #line 2302 "parse.y"
                     {
 		    /*%%%*/
@@ -10434,10 +9922,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!(mlhs_new!, $2) %*/
 		    }
-#line 10433 "parse.c"
+#line 9921 "parse.c"
     break;
 
-  case 104: /* mlhs_basic: "*" mlhs_node ',' mlhs_post  */
+  case 104:
 #line 2309 "parse.y"
                     {
 		    /*%%%*/
@@ -10445,10 +9933,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!(mlhs_new!, $2), $4) %*/
 		    }
-#line 10444 "parse.c"
+#line 9932 "parse.c"
     break;
 
-  case 105: /* mlhs_basic: "*"  */
+  case 105:
 #line 2316 "parse.y"
                     {
 		    /*%%%*/
@@ -10456,10 +9944,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!(mlhs_new!, Qnil) %*/
 		    }
-#line 10455 "parse.c"
+#line 9943 "parse.c"
     break;
 
-  case 106: /* mlhs_basic: "*" ',' mlhs_post  */
+  case 106:
 #line 2323 "parse.y"
                     {
 		    /*%%%*/
@@ -10467,10 +9955,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!(mlhs_new!, Qnil), $3) %*/
 		    }
-#line 10466 "parse.c"
+#line 9954 "parse.c"
     break;
 
-  case 108: /* mlhs_item: "(" mlhs_inner rparen  */
+  case 108:
 #line 2333 "parse.y"
                     {
 		    /*%%%*/
@@ -10478,10 +9966,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_paren!($2) %*/
 		    }
-#line 10477 "parse.c"
+#line 9965 "parse.c"
     break;
 
-  case 109: /* mlhs_head: mlhs_item ','  */
+  case 109:
 #line 2342 "parse.y"
                     {
 		    /*%%%*/
@@ -10489,10 +9977,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!(mlhs_new!, $1) %*/
 		    }
-#line 10488 "parse.c"
+#line 9976 "parse.c"
     break;
 
-  case 110: /* mlhs_head: mlhs_head mlhs_item ','  */
+  case 110:
 #line 2349 "parse.y"
                     {
 		    /*%%%*/
@@ -10500,10 +9988,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!($1, $2) %*/
 		    }
-#line 10499 "parse.c"
+#line 9987 "parse.c"
     break;
 
-  case 111: /* mlhs_post: mlhs_item  */
+  case 111:
 #line 2358 "parse.y"
                     {
 		    /*%%%*/
@@ -10511,10 +9999,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!(mlhs_new!, $1) %*/
 		    }
-#line 10510 "parse.c"
+#line 9998 "parse.c"
     break;
 
-  case 112: /* mlhs_post: mlhs_post ',' mlhs_item  */
+  case 112:
 #line 2365 "parse.y"
                     {
 		    /*%%%*/
@@ -10522,10 +10010,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!($1, $3) %*/
 		    }
-#line 10521 "parse.c"
+#line 10009 "parse.c"
     break;
 
-  case 113: /* mlhs_node: user_variable  */
+  case 113:
 #line 2374 "parse.y"
                     {
 		    /*%%%*/
@@ -10533,10 +10021,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 10532 "parse.c"
+#line 10020 "parse.c"
     break;
 
-  case 114: /* mlhs_node: keyword_variable  */
+  case 114:
 #line 2381 "parse.y"
                     {
 		    /*%%%*/
@@ -10544,10 +10032,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 10543 "parse.c"
+#line 10031 "parse.c"
     break;
 
-  case 115: /* mlhs_node: primary_value '[' opt_call_args rbracket  */
+  case 115:
 #line 2388 "parse.y"
                     {
 		    /*%%%*/
@@ -10555,10 +10043,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: aref_field!($1, escape_Qundef($3)) %*/
 		    }
-#line 10554 "parse.c"
+#line 10042 "parse.c"
     break;
 
-  case 116: /* mlhs_node: primary_value call_op "local variable or method"  */
+  case 116:
 #line 2395 "parse.y"
                     {
 			if ((yyvsp[-1].id) == tANDDOT) {
@@ -10569,10 +10057,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: field!($1, $2, $3) %*/
 		    }
-#line 10568 "parse.c"
+#line 10056 "parse.c"
     break;
 
-  case 117: /* mlhs_node: primary_value "::" "local variable or method"  */
+  case 117:
 #line 2405 "parse.y"
                     {
 		    /*%%%*/
@@ -10580,10 +10068,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_path_field!($1, $3) %*/
 		    }
-#line 10579 "parse.c"
+#line 10067 "parse.c"
     break;
 
-  case 118: /* mlhs_node: primary_value call_op "constant"  */
+  case 118:
 #line 2412 "parse.y"
                     {
 			if ((yyvsp[-1].id) == tANDDOT) {
@@ -10594,10 +10082,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: field!($1, $2, $3) %*/
 		    }
-#line 10593 "parse.c"
+#line 10081 "parse.c"
     break;
 
-  case 119: /* mlhs_node: primary_value "::" "constant"  */
+  case 119:
 #line 2422 "parse.y"
                     {
 		    /*%%%*/
@@ -10605,10 +10093,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_decl(p, const_path_field!($1, $3)) %*/
 		    }
-#line 10604 "parse.c"
+#line 10092 "parse.c"
     break;
 
-  case 120: /* mlhs_node: ":: at EXPR_BEG" "constant"  */
+  case 120:
 #line 2429 "parse.y"
                     {
 		    /*%%%*/
@@ -10616,10 +10104,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_decl(p, top_const_field!($2)) %*/
 		    }
-#line 10615 "parse.c"
+#line 10103 "parse.c"
     break;
 
-  case 121: /* mlhs_node: backref  */
+  case 121:
 #line 2436 "parse.y"
                     {
 		    /*%%%*/
@@ -10628,10 +10116,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: backref_error(p, RNODE($1), var_field(p, $1)) %*/
 		    }
-#line 10627 "parse.c"
+#line 10115 "parse.c"
     break;
 
-  case 122: /* lhs: user_variable  */
+  case 122:
 #line 2446 "parse.y"
                     {
 		    /*%%%*/
@@ -10639,10 +10127,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 10638 "parse.c"
+#line 10126 "parse.c"
     break;
 
-  case 123: /* lhs: keyword_variable  */
+  case 123:
 #line 2453 "parse.y"
                     {
 		    /*%%%*/
@@ -10650,10 +10138,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 10649 "parse.c"
+#line 10137 "parse.c"
     break;
 
-  case 124: /* lhs: primary_value '[' opt_call_args rbracket  */
+  case 124:
 #line 2460 "parse.y"
                     {
 		    /*%%%*/
@@ -10661,10 +10149,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: aref_field!($1, escape_Qundef($3)) %*/
 		    }
-#line 10660 "parse.c"
+#line 10148 "parse.c"
     break;
 
-  case 125: /* lhs: primary_value call_op "local variable or method"  */
+  case 125:
 #line 2467 "parse.y"
                     {
 		    /*%%%*/
@@ -10672,10 +10160,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: field!($1, $2, $3) %*/
 		    }
-#line 10671 "parse.c"
+#line 10159 "parse.c"
     break;
 
-  case 126: /* lhs: primary_value "::" "local variable or method"  */
+  case 126:
 #line 2474 "parse.y"
                     {
 		    /*%%%*/
@@ -10683,10 +10171,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: field!($1, ID2VAL(idCOLON2), $3) %*/
 		    }
-#line 10682 "parse.c"
+#line 10170 "parse.c"
     break;
 
-  case 127: /* lhs: primary_value call_op "constant"  */
+  case 127:
 #line 2481 "parse.y"
                     {
 		    /*%%%*/
@@ -10694,10 +10182,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: field!($1, $2, $3) %*/
 		    }
-#line 10693 "parse.c"
+#line 10181 "parse.c"
     break;
 
-  case 128: /* lhs: primary_value "::" "constant"  */
+  case 128:
 #line 2488 "parse.y"
                     {
 		    /*%%%*/
@@ -10705,10 +10193,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_decl(p, const_path_field!($1, $3)) %*/
 		    }
-#line 10704 "parse.c"
+#line 10192 "parse.c"
     break;
 
-  case 129: /* lhs: ":: at EXPR_BEG" "constant"  */
+  case 129:
 #line 2495 "parse.y"
                     {
 		    /*%%%*/
@@ -10716,10 +10204,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_decl(p, top_const_field!($2)) %*/
 		    }
-#line 10715 "parse.c"
+#line 10203 "parse.c"
     break;
 
-  case 130: /* lhs: backref  */
+  case 130:
 #line 2502 "parse.y"
                     {
 		    /*%%%*/
@@ -10728,10 +10216,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: backref_error(p, RNODE($1), var_field(p, $1)) %*/
 		    }
-#line 10727 "parse.c"
+#line 10215 "parse.c"
     break;
 
-  case 131: /* cname: "local variable or method"  */
+  case 131:
 #line 2512 "parse.y"
                     {
 			static const char mesg[] = "class/module name must be CONSTANT";
@@ -10740,10 +10228,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: class_name_error!(ERR_MESG(), $1) %*/
 		    }
-#line 10739 "parse.c"
+#line 10227 "parse.c"
     break;
 
-  case 133: /* cpath: ":: at EXPR_BEG" cname  */
+  case 133:
 #line 2523 "parse.y"
                     {
 		    /*%%%*/
@@ -10751,10 +10239,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: top_const_ref!($2) %*/
 		    }
-#line 10750 "parse.c"
+#line 10238 "parse.c"
     break;
 
-  case 134: /* cpath: cname  */
+  case 134:
 #line 2530 "parse.y"
                     {
 		    /*%%%*/
@@ -10762,10 +10250,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_ref!($1) %*/
 		    }
-#line 10761 "parse.c"
+#line 10249 "parse.c"
     break;
 
-  case 135: /* cpath: primary_value "::" cname  */
+  case 135:
 #line 2537 "parse.y"
                     {
 		    /*%%%*/
@@ -10773,19 +10261,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_path_ref!($1, $3) %*/
 		    }
-#line 10772 "parse.c"
+#line 10260 "parse.c"
     break;
 
-  case 139: /* fname: op  */
+  case 139:
 #line 2549 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_ENDFN);
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 10781 "parse.c"
+#line 10269 "parse.c"
     break;
 
-  case 141: /* fitem: fname  */
+  case 141:
 #line 2557 "parse.y"
                     {
 		    /*%%%*/
@@ -10793,10 +10281,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: symbol_literal!($1) %*/
 		    }
-#line 10792 "parse.c"
+#line 10280 "parse.c"
     break;
 
-  case 143: /* undef_list: fitem  */
+  case 143:
 #line 2567 "parse.y"
                     {
 		    /*%%%*/
@@ -10804,16 +10292,16 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 10803 "parse.c"
+#line 10291 "parse.c"
     break;
 
-  case 144: /* $@12: %empty  */
+  case 144:
 #line 2573 "parse.y"
                                  {SET_LEX_STATE(EXPR_FNAME|EXPR_FITEM);}
-#line 10809 "parse.c"
+#line 10297 "parse.c"
     break;
 
-  case 145: /* undef_list: undef_list ',' $@12 fitem  */
+  case 145:
 #line 2574 "parse.y"
                     {
 		    /*%%%*/
@@ -10822,190 +10310,190 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($4)) %*/
 		    }
-#line 10821 "parse.c"
+#line 10309 "parse.c"
     break;
 
-  case 146: /* op: '|'  */
+  case 146:
 #line 2583 "parse.y"
                                 { ifndef_ripper((yyval.id) = '|'); }
-#line 10827 "parse.c"
+#line 10315 "parse.c"
     break;
 
-  case 147: /* op: '^'  */
+  case 147:
 #line 2584 "parse.y"
                                 { ifndef_ripper((yyval.id) = '^'); }
-#line 10833 "parse.c"
+#line 10321 "parse.c"
     break;
 
-  case 148: /* op: '&'  */
+  case 148:
 #line 2585 "parse.y"
                                 { ifndef_ripper((yyval.id) = '&'); }
-#line 10839 "parse.c"
+#line 10327 "parse.c"
     break;
 
-  case 149: /* op: "<=>"  */
+  case 149:
 #line 2586 "parse.y"
                                 { ifndef_ripper((yyval.id) = tCMP); }
-#line 10845 "parse.c"
+#line 10333 "parse.c"
     break;
 
-  case 150: /* op: "=="  */
+  case 150:
 #line 2587 "parse.y"
                                 { ifndef_ripper((yyval.id) = tEQ); }
-#line 10851 "parse.c"
+#line 10339 "parse.c"
     break;
 
-  case 151: /* op: "==="  */
+  case 151:
 #line 2588 "parse.y"
                                 { ifndef_ripper((yyval.id) = tEQQ); }
-#line 10857 "parse.c"
+#line 10345 "parse.c"
     break;
 
-  case 152: /* op: "=~"  */
+  case 152:
 #line 2589 "parse.y"
                                 { ifndef_ripper((yyval.id) = tMATCH); }
-#line 10863 "parse.c"
+#line 10351 "parse.c"
     break;
 
-  case 153: /* op: "!~"  */
+  case 153:
 #line 2590 "parse.y"
                                 { ifndef_ripper((yyval.id) = tNMATCH); }
-#line 10869 "parse.c"
+#line 10357 "parse.c"
     break;
 
-  case 154: /* op: '>'  */
+  case 154:
 #line 2591 "parse.y"
                                 { ifndef_ripper((yyval.id) = '>'); }
-#line 10875 "parse.c"
+#line 10363 "parse.c"
     break;
 
-  case 155: /* op: ">="  */
+  case 155:
 #line 2592 "parse.y"
                                 { ifndef_ripper((yyval.id) = tGEQ); }
-#line 10881 "parse.c"
+#line 10369 "parse.c"
     break;
 
-  case 156: /* op: '<'  */
+  case 156:
 #line 2593 "parse.y"
                                 { ifndef_ripper((yyval.id) = '<'); }
-#line 10887 "parse.c"
+#line 10375 "parse.c"
     break;
 
-  case 157: /* op: "<="  */
+  case 157:
 #line 2594 "parse.y"
                                 { ifndef_ripper((yyval.id) = tLEQ); }
-#line 10893 "parse.c"
+#line 10381 "parse.c"
     break;
 
-  case 158: /* op: "!="  */
+  case 158:
 #line 2595 "parse.y"
                                 { ifndef_ripper((yyval.id) = tNEQ); }
-#line 10899 "parse.c"
+#line 10387 "parse.c"
     break;
 
-  case 159: /* op: "<<"  */
+  case 159:
 #line 2596 "parse.y"
                                 { ifndef_ripper((yyval.id) = tLSHFT); }
-#line 10905 "parse.c"
+#line 10393 "parse.c"
     break;
 
-  case 160: /* op: ">>"  */
+  case 160:
 #line 2597 "parse.y"
                                 { ifndef_ripper((yyval.id) = tRSHFT); }
-#line 10911 "parse.c"
+#line 10399 "parse.c"
     break;
 
-  case 161: /* op: '+'  */
+  case 161:
 #line 2598 "parse.y"
                                 { ifndef_ripper((yyval.id) = '+'); }
-#line 10917 "parse.c"
+#line 10405 "parse.c"
     break;
 
-  case 162: /* op: '-'  */
+  case 162:
 #line 2599 "parse.y"
                                 { ifndef_ripper((yyval.id) = '-'); }
-#line 10923 "parse.c"
+#line 10411 "parse.c"
     break;
 
-  case 163: /* op: '*'  */
+  case 163:
 #line 2600 "parse.y"
                                 { ifndef_ripper((yyval.id) = '*'); }
-#line 10929 "parse.c"
+#line 10417 "parse.c"
     break;
 
-  case 164: /* op: "*"  */
+  case 164:
 #line 2601 "parse.y"
                                 { ifndef_ripper((yyval.id) = '*'); }
-#line 10935 "parse.c"
+#line 10423 "parse.c"
     break;
 
-  case 165: /* op: '/'  */
+  case 165:
 #line 2602 "parse.y"
                                 { ifndef_ripper((yyval.id) = '/'); }
-#line 10941 "parse.c"
+#line 10429 "parse.c"
     break;
 
-  case 166: /* op: '%'  */
+  case 166:
 #line 2603 "parse.y"
                                 { ifndef_ripper((yyval.id) = '%'); }
-#line 10947 "parse.c"
+#line 10435 "parse.c"
     break;
 
-  case 167: /* op: "**"  */
+  case 167:
 #line 2604 "parse.y"
                                 { ifndef_ripper((yyval.id) = tPOW); }
-#line 10953 "parse.c"
+#line 10441 "parse.c"
     break;
 
-  case 168: /* op: "**arg"  */
+  case 168:
 #line 2605 "parse.y"
                                 { ifndef_ripper((yyval.id) = tDSTAR); }
-#line 10959 "parse.c"
+#line 10447 "parse.c"
     break;
 
-  case 169: /* op: '!'  */
+  case 169:
 #line 2606 "parse.y"
                                 { ifndef_ripper((yyval.id) = '!'); }
-#line 10965 "parse.c"
+#line 10453 "parse.c"
     break;
 
-  case 170: /* op: '~'  */
+  case 170:
 #line 2607 "parse.y"
                                 { ifndef_ripper((yyval.id) = '~'); }
-#line 10971 "parse.c"
+#line 10459 "parse.c"
     break;
 
-  case 171: /* op: "unary+"  */
+  case 171:
 #line 2608 "parse.y"
                                 { ifndef_ripper((yyval.id) = tUPLUS); }
-#line 10977 "parse.c"
+#line 10465 "parse.c"
     break;
 
-  case 172: /* op: "unary-"  */
+  case 172:
 #line 2609 "parse.y"
                                 { ifndef_ripper((yyval.id) = tUMINUS); }
-#line 10983 "parse.c"
+#line 10471 "parse.c"
     break;
 
-  case 173: /* op: "[]"  */
+  case 173:
 #line 2610 "parse.y"
                                 { ifndef_ripper((yyval.id) = tAREF); }
-#line 10989 "parse.c"
+#line 10477 "parse.c"
     break;
 
-  case 174: /* op: "[]="  */
+  case 174:
 #line 2611 "parse.y"
                                 { ifndef_ripper((yyval.id) = tASET); }
-#line 10995 "parse.c"
+#line 10483 "parse.c"
     break;
 
-  case 175: /* op: '`'  */
+  case 175:
 #line 2612 "parse.y"
                                 { ifndef_ripper((yyval.id) = '`'); }
-#line 11001 "parse.c"
+#line 10489 "parse.c"
     break;
 
-  case 217: /* arg: lhs '=' lex_ctxt arg_rhs  */
+  case 217:
 #line 2630 "parse.y"
                     {
 		    /*%%%*/
@@ -11013,10 +10501,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assign!($1, $4) %*/
 		    }
-#line 11012 "parse.c"
+#line 10500 "parse.c"
     break;
 
-  case 218: /* arg: var_lhs "operator-assignment" lex_ctxt arg_rhs  */
+  case 218:
 #line 2637 "parse.y"
                     {
 		    /*%%%*/
@@ -11024,10 +10512,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!($1, $2, $4) %*/
 		    }
-#line 11023 "parse.c"
+#line 10511 "parse.c"
     break;
 
-  case 219: /* arg: primary_value '[' opt_call_args rbracket "operator-assignment" lex_ctxt arg_rhs  */
+  case 219:
 #line 2644 "parse.y"
                     {
 		    /*%%%*/
@@ -11035,10 +10523,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(aref_field!($1, escape_Qundef($3)), $5, $7) %*/
 		    }
-#line 11034 "parse.c"
+#line 10522 "parse.c"
     break;
 
-  case 220: /* arg: primary_value call_op "local variable or method" "operator-assignment" lex_ctxt arg_rhs  */
+  case 220:
 #line 2651 "parse.y"
                     {
 		    /*%%%*/
@@ -11046,10 +10534,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, $2, $3), $4, $6) %*/
 		    }
-#line 11045 "parse.c"
+#line 10533 "parse.c"
     break;
 
-  case 221: /* arg: primary_value call_op "constant" "operator-assignment" lex_ctxt arg_rhs  */
+  case 221:
 #line 2658 "parse.y"
                     {
 		    /*%%%*/
@@ -11057,10 +10545,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, $2, $3), $4, $6) %*/
 		    }
-#line 11056 "parse.c"
+#line 10544 "parse.c"
     break;
 
-  case 222: /* arg: primary_value "::" "local variable or method" "operator-assignment" lex_ctxt arg_rhs  */
+  case 222:
 #line 2665 "parse.y"
                     {
 		    /*%%%*/
@@ -11068,10 +10556,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(field!($1, ID2VAL(idCOLON2), $3), $4, $6) %*/
 		    }
-#line 11067 "parse.c"
+#line 10555 "parse.c"
     break;
 
-  case 223: /* arg: primary_value "::" "constant" "operator-assignment" lex_ctxt arg_rhs  */
+  case 223:
 #line 2672 "parse.y"
                     {
 		    /*%%%*/
@@ -11080,10 +10568,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(const_path_field!($1, $3), $4, $6) %*/
 		    }
-#line 11079 "parse.c"
+#line 10567 "parse.c"
     break;
 
-  case 224: /* arg: ":: at EXPR_BEG" "constant" "operator-assignment" lex_ctxt arg_rhs  */
+  case 224:
 #line 2680 "parse.y"
                     {
 		    /*%%%*/
@@ -11092,10 +10580,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opassign!(top_const_field!($2), $3, $5) %*/
 		    }
-#line 11091 "parse.c"
+#line 10579 "parse.c"
     break;
 
-  case 225: /* arg: backref "operator-assignment" lex_ctxt arg_rhs  */
+  case 225:
 #line 2688 "parse.y"
                     {
 		    /*%%%*/
@@ -11104,10 +10592,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: backref_error(p, RNODE($1), opassign!(var_field(p, $1), $2, $4)) %*/
 		    }
-#line 11103 "parse.c"
+#line 10591 "parse.c"
     break;
 
-  case 226: /* arg: arg ".." arg  */
+  case 226:
 #line 2696 "parse.y"
                     {
 		    /*%%%*/
@@ -11117,10 +10605,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!($1, $3) %*/
 		    }
-#line 11116 "parse.c"
+#line 10604 "parse.c"
     break;
 
-  case 227: /* arg: arg "..." arg  */
+  case 227:
 #line 2705 "parse.y"
                     {
 		    /*%%%*/
@@ -11130,10 +10618,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!($1, $3) %*/
 		    }
-#line 11129 "parse.c"
+#line 10617 "parse.c"
     break;
 
-  case 228: /* arg: arg ".."  */
+  case 228:
 #line 2714 "parse.y"
                     {
 		    /*%%%*/
@@ -11142,10 +10630,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!($1, Qnil) %*/
 		    }
-#line 11141 "parse.c"
+#line 10629 "parse.c"
     break;
 
-  case 229: /* arg: arg "..."  */
+  case 229:
 #line 2722 "parse.y"
                     {
 		    /*%%%*/
@@ -11154,10 +10642,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!($1, Qnil) %*/
 		    }
-#line 11153 "parse.c"
+#line 10641 "parse.c"
     break;
 
-  case 230: /* arg: "(.." arg  */
+  case 230:
 #line 2730 "parse.y"
                     {
 		    /*%%%*/
@@ -11166,10 +10654,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!(Qnil, $2) %*/
 		    }
-#line 11165 "parse.c"
+#line 10653 "parse.c"
     break;
 
-  case 231: /* arg: "(..." arg  */
+  case 231:
 #line 2738 "parse.y"
                     {
 		    /*%%%*/
@@ -11178,217 +10666,217 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!(Qnil, $2) %*/
 		    }
-#line 11177 "parse.c"
+#line 10665 "parse.c"
     break;
 
-  case 232: /* arg: arg '+' arg  */
+  case 232:
 #line 2746 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '+', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11185 "parse.c"
+#line 10673 "parse.c"
     break;
 
-  case 233: /* arg: arg '-' arg  */
+  case 233:
 #line 2750 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '-', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11193 "parse.c"
+#line 10681 "parse.c"
     break;
 
-  case 234: /* arg: arg '*' arg  */
+  case 234:
 #line 2754 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '*', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11201 "parse.c"
+#line 10689 "parse.c"
     break;
 
-  case 235: /* arg: arg '/' arg  */
+  case 235:
 #line 2758 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '/', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11209 "parse.c"
+#line 10697 "parse.c"
     break;
 
-  case 236: /* arg: arg '%' arg  */
+  case 236:
 #line 2762 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '%', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11217 "parse.c"
+#line 10705 "parse.c"
     break;
 
-  case 237: /* arg: arg "**" arg  */
+  case 237:
 #line 2766 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idPow, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11225 "parse.c"
+#line 10713 "parse.c"
     break;
 
-  case 238: /* arg: tUMINUS_NUM simple_numeric "**" arg  */
+  case 238:
 #line 2770 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, call_bin_op(p, (yyvsp[-2].node), idPow, (yyvsp[0].node), &(yylsp[-2]), &(yyloc)), idUMinus, &(yylsp[-3]), &(yyloc));
 		    }
-#line 11233 "parse.c"
+#line 10721 "parse.c"
     break;
 
-  case 239: /* arg: "unary+" arg  */
+  case 239:
 #line 2774 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, (yyvsp[0].node), idUPlus, &(yylsp[-1]), &(yyloc));
 		    }
-#line 11241 "parse.c"
+#line 10729 "parse.c"
     break;
 
-  case 240: /* arg: "unary-" arg  */
+  case 240:
 #line 2778 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, (yyvsp[0].node), idUMinus, &(yylsp[-1]), &(yyloc));
 		    }
-#line 11249 "parse.c"
+#line 10737 "parse.c"
     break;
 
-  case 241: /* arg: arg '|' arg  */
+  case 241:
 #line 2782 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '|', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11257 "parse.c"
+#line 10745 "parse.c"
     break;
 
-  case 242: /* arg: arg '^' arg  */
+  case 242:
 #line 2786 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '^', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11265 "parse.c"
+#line 10753 "parse.c"
     break;
 
-  case 243: /* arg: arg '&' arg  */
+  case 243:
 #line 2790 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), '&', (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11273 "parse.c"
+#line 10761 "parse.c"
     break;
 
-  case 244: /* arg: arg "<=>" arg  */
+  case 244:
 #line 2794 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idCmp, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11281 "parse.c"
+#line 10769 "parse.c"
     break;
 
-  case 246: /* arg: arg "==" arg  */
+  case 246:
 #line 2799 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idEq, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11289 "parse.c"
+#line 10777 "parse.c"
     break;
 
-  case 247: /* arg: arg "===" arg  */
+  case 247:
 #line 2803 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idEqq, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11297 "parse.c"
+#line 10785 "parse.c"
     break;
 
-  case 248: /* arg: arg "!=" arg  */
+  case 248:
 #line 2807 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idNeq, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11305 "parse.c"
+#line 10793 "parse.c"
     break;
 
-  case 249: /* arg: arg "=~" arg  */
+  case 249:
 #line 2811 "parse.y"
                     {
 			(yyval.node) = match_op(p, (yyvsp[-2].node), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11313 "parse.c"
+#line 10801 "parse.c"
     break;
 
-  case 250: /* arg: arg "!~" arg  */
+  case 250:
 #line 2815 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idNeqTilde, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11321 "parse.c"
+#line 10809 "parse.c"
     break;
 
-  case 251: /* arg: '!' arg  */
+  case 251:
 #line 2819 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, method_cond(p, (yyvsp[0].node), &(yylsp[0])), '!', &(yylsp[-1]), &(yyloc));
 		    }
-#line 11329 "parse.c"
+#line 10817 "parse.c"
     break;
 
-  case 252: /* arg: '~' arg  */
+  case 252:
 #line 2823 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, (yyvsp[0].node), '~', &(yylsp[-1]), &(yyloc));
 		    }
-#line 11337 "parse.c"
+#line 10825 "parse.c"
     break;
 
-  case 253: /* arg: arg "<<" arg  */
+  case 253:
 #line 2827 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idLTLT, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11345 "parse.c"
+#line 10833 "parse.c"
     break;
 
-  case 254: /* arg: arg ">>" arg  */
+  case 254:
 #line 2831 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), idGTGT, (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11353 "parse.c"
+#line 10841 "parse.c"
     break;
 
-  case 255: /* arg: arg "&&" arg  */
+  case 255:
 #line 2835 "parse.y"
                     {
 			(yyval.node) = logop(p, idANDOP, (yyvsp[-2].node), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11361 "parse.c"
+#line 10849 "parse.c"
     break;
 
-  case 256: /* arg: arg "||" arg  */
+  case 256:
 #line 2839 "parse.y"
                     {
 			(yyval.node) = logop(p, idOROP, (yyvsp[-2].node), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11369 "parse.c"
+#line 10857 "parse.c"
     break;
 
-  case 257: /* $@13: %empty  */
+  case 257:
 #line 2842 "parse.y"
                                          {p->ctxt.in_defined = 1;}
-#line 11375 "parse.c"
+#line 10863 "parse.c"
     break;
 
-  case 258: /* arg: "`defined?'" opt_nl $@13 arg  */
+  case 258:
 #line 2843 "parse.y"
                     {
 			p->ctxt.in_defined = 0;
 			(yyval.node) = new_defined(p, (yyvsp[0].node), &(yyloc));
 		    }
-#line 11384 "parse.c"
+#line 10872 "parse.c"
     break;
 
-  case 259: /* arg: arg '?' arg opt_nl ':' arg  */
+  case 259:
 #line 2848 "parse.y"
                     {
 		    /*%%%*/
@@ -11398,10 +10886,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: ifop!($1, $3, $6) %*/
 		    }
-#line 11397 "parse.c"
+#line 10885 "parse.c"
     break;
 
-  case 260: /* arg: defn_head f_opt_paren_args '=' arg  */
+  case 260:
 #line 2857 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-3].node), &(yylsp[-3]));
@@ -11413,10 +10901,10 @@ yyreduce:
 		    /*% ripper: def!(get_value($1), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 11412 "parse.c"
+#line 10900 "parse.c"
     break;
 
-  case 261: /* arg: defn_head f_opt_paren_args '=' arg "`rescue' modifier" arg  */
+  case 261:
 #line 2868 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-5].node), &(yylsp[-5]));
@@ -11429,10 +10917,10 @@ yyreduce:
 		    /*% ripper: def!(get_value($1), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 11428 "parse.c"
+#line 10916 "parse.c"
     break;
 
-  case 262: /* arg: defs_head f_opt_paren_args '=' arg  */
+  case 262:
 #line 2880 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-3].node), &(yylsp[-3]));
@@ -11446,10 +10934,10 @@ yyreduce:
 		    /*% ripper: defs!(AREF($1, 0), AREF($1, 1), AREF($1, 2), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 11445 "parse.c"
+#line 10933 "parse.c"
     break;
 
-  case 263: /* arg: defs_head f_opt_paren_args '=' arg "`rescue' modifier" arg  */
+  case 263:
 #line 2893 "parse.y"
                     {
 			endless_method_name(p, (yyvsp[-5].node), &(yylsp[-5]));
@@ -11464,84 +10952,84 @@ yyreduce:
 		    /*% ripper: defs!(AREF($1, 0), AREF($1, 1), AREF($1, 2), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 11463 "parse.c"
+#line 10951 "parse.c"
     break;
 
-  case 264: /* arg: primary  */
+  case 264:
 #line 2907 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 11471 "parse.c"
+#line 10959 "parse.c"
     break;
 
-  case 265: /* relop: '>'  */
+  case 265:
 #line 2912 "parse.y"
                        {(yyval.id) = '>';}
-#line 11477 "parse.c"
+#line 10965 "parse.c"
     break;
 
-  case 266: /* relop: '<'  */
+  case 266:
 #line 2913 "parse.y"
                        {(yyval.id) = '<';}
-#line 11483 "parse.c"
+#line 10971 "parse.c"
     break;
 
-  case 267: /* relop: ">="  */
+  case 267:
 #line 2914 "parse.y"
                        {(yyval.id) = idGE;}
-#line 11489 "parse.c"
+#line 10977 "parse.c"
     break;
 
-  case 268: /* relop: "<="  */
+  case 268:
 #line 2915 "parse.y"
                        {(yyval.id) = idLE;}
-#line 11495 "parse.c"
+#line 10983 "parse.c"
     break;
 
-  case 269: /* rel_expr: arg relop arg  */
+  case 269:
 #line 2919 "parse.y"
                     {
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), (yyvsp[-1].id), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11503 "parse.c"
+#line 10991 "parse.c"
     break;
 
-  case 270: /* rel_expr: rel_expr relop arg  */
+  case 270:
 #line 2923 "parse.y"
                     {
 			rb_warning1("comparison '%s' after comparison", WARN_ID((yyvsp[-1].id)));
 			(yyval.node) = call_bin_op(p, (yyvsp[-2].node), (yyvsp[-1].id), (yyvsp[0].node), &(yylsp[-1]), &(yyloc));
 		    }
-#line 11512 "parse.c"
+#line 11000 "parse.c"
     break;
 
-  case 271: /* lex_ctxt: none  */
+  case 271:
 #line 2930 "parse.y"
                     {
 			(yyval.ctxt) = p->ctxt;
 		    }
-#line 11520 "parse.c"
+#line 11008 "parse.c"
     break;
 
-  case 272: /* arg_value: arg  */
+  case 272:
 #line 2936 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 11529 "parse.c"
+#line 11017 "parse.c"
     break;
 
-  case 274: /* aref_args: args trailer  */
+  case 274:
 #line 2944 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 11537 "parse.c"
+#line 11025 "parse.c"
     break;
 
-  case 275: /* aref_args: args ',' assocs trailer  */
+  case 275:
 #line 2948 "parse.y"
                     {
 		    /*%%%*/
@@ -11549,10 +11037,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!($1, bare_assoc_hash!($3)) %*/
 		    }
-#line 11548 "parse.c"
+#line 11036 "parse.c"
     break;
 
-  case 276: /* aref_args: assocs trailer  */
+  case 276:
 #line 2955 "parse.y"
                     {
 		    /*%%%*/
@@ -11560,19 +11048,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!(args_new!, bare_assoc_hash!($1)) %*/
 		    }
-#line 11559 "parse.c"
+#line 11047 "parse.c"
     break;
 
-  case 277: /* arg_rhs: arg  */
+  case 277:
 #line 2964 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 11568 "parse.c"
+#line 11056 "parse.c"
     break;
 
-  case 278: /* arg_rhs: arg "`rescue' modifier" arg  */
+  case 278:
 #line 2969 "parse.y"
                     {
 		    /*%%%*/
@@ -11581,10 +11069,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rescue_mod!($1, $3) %*/
 		    }
-#line 11580 "parse.c"
+#line 11068 "parse.c"
     break;
 
-  case 279: /* paren_args: '(' opt_call_args rparen  */
+  case 279:
 #line 2979 "parse.y"
                     {
 		    /*%%%*/
@@ -11592,10 +11080,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: arg_paren!(escape_Qundef($2)) %*/
 		    }
-#line 11591 "parse.c"
+#line 11079 "parse.c"
     break;
 
-  case 280: /* paren_args: '(' args ',' args_forward rparen  */
+  case 280:
 #line 2986 "parse.y"
                     {
 			if (!check_forwarding_args(p)) {
@@ -11608,10 +11096,10 @@ yyreduce:
 			/*% ripper: arg_paren!(args_add!($2, $4)) %*/
 			}
 		    }
-#line 11607 "parse.c"
+#line 11095 "parse.c"
     break;
 
-  case 281: /* paren_args: '(' args_forward rparen  */
+  case 281:
 #line 2998 "parse.y"
                     {
 			if (!check_forwarding_args(p)) {
@@ -11624,18 +11112,18 @@ yyreduce:
 			/*% ripper: arg_paren!($2) %*/
 			}
 		    }
-#line 11623 "parse.c"
+#line 11111 "parse.c"
     break;
 
-  case 286: /* opt_call_args: args ','  */
+  case 286:
 #line 3018 "parse.y"
                     {
 		      (yyval.node) = (yyvsp[-1].node);
 		    }
-#line 11631 "parse.c"
+#line 11119 "parse.c"
     break;
 
-  case 287: /* opt_call_args: args ',' assocs ','  */
+  case 287:
 #line 3022 "parse.y"
                     {
 		    /*%%%*/
@@ -11643,10 +11131,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!($1, bare_assoc_hash!($3)) %*/
 		    }
-#line 11642 "parse.c"
+#line 11130 "parse.c"
     break;
 
-  case 288: /* opt_call_args: assocs ','  */
+  case 288:
 #line 3029 "parse.y"
                     {
 		    /*%%%*/
@@ -11654,10 +11142,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!(args_new!, bare_assoc_hash!($1)) %*/
 		    }
-#line 11653 "parse.c"
+#line 11141 "parse.c"
     break;
 
-  case 289: /* call_args: command  */
+  case 289:
 #line 3038 "parse.y"
                     {
 		    /*%%%*/
@@ -11666,10 +11154,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!(args_new!, $1) %*/
 		    }
-#line 11665 "parse.c"
+#line 11153 "parse.c"
     break;
 
-  case 290: /* call_args: args opt_block_arg  */
+  case 290:
 #line 3046 "parse.y"
                     {
 		    /*%%%*/
@@ -11677,10 +11165,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_block!($1, $2) %*/
 		    }
-#line 11676 "parse.c"
+#line 11164 "parse.c"
     break;
 
-  case 291: /* call_args: assocs opt_block_arg  */
+  case 291:
 #line 3053 "parse.y"
                     {
 		    /*%%%*/
@@ -11689,10 +11177,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_block!(args_add!(args_new!, bare_assoc_hash!($1)), $2) %*/
 		    }
-#line 11688 "parse.c"
+#line 11176 "parse.c"
     break;
 
-  case 292: /* call_args: args ',' assocs opt_block_arg  */
+  case 292:
 #line 3061 "parse.y"
                     {
 		    /*%%%*/
@@ -11701,10 +11189,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_block!(args_add!($1, bare_assoc_hash!($3)), $4) %*/
 		    }
-#line 11700 "parse.c"
+#line 11188 "parse.c"
     break;
 
-  case 294: /* $@14: %empty  */
+  case 294:
 #line 3072 "parse.y"
                     {
 			/* If call_args starts with a open paren '(' or '[',
@@ -11723,10 +11211,10 @@ yyreduce:
 			CMDARG_PUSH(1);
 			if (lookahead) CMDARG_PUSH(0);
 		    }
-#line 11722 "parse.c"
+#line 11210 "parse.c"
     break;
 
-  case 295: /* command_args: $@14 call_args  */
+  case 295:
 #line 3090 "parse.y"
                     {
 			/* call_args can be followed by tLBRACE_ARG (that does CMDARG_PUSH(0) in the lexer)
@@ -11745,10 +11233,10 @@ yyreduce:
 			if (lookahead) CMDARG_PUSH(0);
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 11744 "parse.c"
+#line 11232 "parse.c"
     break;
 
-  case 296: /* block_arg: "&" arg_value  */
+  case 296:
 #line 3110 "parse.y"
                     {
 		    /*%%%*/
@@ -11756,10 +11244,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $2 %*/
 		    }
-#line 11755 "parse.c"
+#line 11243 "parse.c"
     break;
 
-  case 297: /* block_arg: "&"  */
+  case 297:
 #line 3117 "parse.y"
                     {
                         if (!local_id(p, idFWD_BLOCK)) {
@@ -11770,26 +11258,26 @@ yyreduce:
                     /*% %*/
                     /*% ripper: Qnil %*/
                     }
-#line 11769 "parse.c"
+#line 11257 "parse.c"
     break;
 
-  case 298: /* opt_block_arg: ',' block_arg  */
+  case 298:
 #line 3129 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 11777 "parse.c"
+#line 11265 "parse.c"
     break;
 
-  case 299: /* opt_block_arg: none  */
+  case 299:
 #line 3133 "parse.y"
                     {
 			(yyval.node) = 0;
 		    }
-#line 11785 "parse.c"
+#line 11273 "parse.c"
     break;
 
-  case 300: /* args: arg_value  */
+  case 300:
 #line 3140 "parse.y"
                     {
 		    /*%%%*/
@@ -11797,10 +11285,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!(args_new!, $1) %*/
 		    }
-#line 11796 "parse.c"
+#line 11284 "parse.c"
     break;
 
-  case 301: /* args: "*" arg_value  */
+  case 301:
 #line 3147 "parse.y"
                     {
 		    /*%%%*/
@@ -11808,10 +11296,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!(args_new!, $2) %*/
 		    }
-#line 11807 "parse.c"
+#line 11295 "parse.c"
     break;
 
-  case 302: /* args: "*"  */
+  case 302:
 #line 3154 "parse.y"
                     {
                         if (!local_id(p, idFWD_REST) ||
@@ -11823,10 +11311,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!(args_new!, Qnil) %*/
 		    }
-#line 11822 "parse.c"
+#line 11310 "parse.c"
     break;
 
-  case 303: /* args: args ',' arg_value  */
+  case 303:
 #line 3165 "parse.y"
                     {
 		    /*%%%*/
@@ -11834,10 +11322,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!($1, $3) %*/
 		    }
-#line 11833 "parse.c"
+#line 11321 "parse.c"
     break;
 
-  case 304: /* args: args ',' "*" arg_value  */
+  case 304:
 #line 3172 "parse.y"
                     {
 		    /*%%%*/
@@ -11845,10 +11333,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!($1, $4) %*/
 		    }
-#line 11844 "parse.c"
+#line 11332 "parse.c"
     break;
 
-  case 305: /* args: args ',' "*"  */
+  case 305:
 #line 3179 "parse.y"
                     {
                         if (!local_id(p, idFWD_REST) ||
@@ -11860,10 +11348,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!($1, Qnil) %*/
 		    }
-#line 11859 "parse.c"
+#line 11347 "parse.c"
     break;
 
-  case 308: /* mrhs: args ',' arg_value  */
+  case 308:
 #line 3198 "parse.y"
                     {
 		    /*%%%*/
@@ -11871,10 +11359,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mrhs_add!(mrhs_new_from_args!($1), $3) %*/
 		    }
-#line 11870 "parse.c"
+#line 11358 "parse.c"
     break;
 
-  case 309: /* mrhs: args ',' "*" arg_value  */
+  case 309:
 #line 3205 "parse.y"
                     {
 		    /*%%%*/
@@ -11882,10 +11370,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mrhs_add_star!(mrhs_new_from_args!($1), $4) %*/
 		    }
-#line 11881 "parse.c"
+#line 11369 "parse.c"
     break;
 
-  case 310: /* mrhs: "*" arg_value  */
+  case 310:
 #line 3212 "parse.y"
                     {
 		    /*%%%*/
@@ -11893,10 +11381,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mrhs_add_star!(mrhs_new!, $2) %*/
 		    }
-#line 11892 "parse.c"
+#line 11380 "parse.c"
     break;
 
-  case 321: /* primary: "method"  */
+  case 321:
 #line 3231 "parse.y"
                     {
 		    /*%%%*/
@@ -11904,18 +11392,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(fcall!($1), args_new!) %*/
 		    }
-#line 11903 "parse.c"
+#line 11391 "parse.c"
     break;
 
-  case 322: /* $@15: %empty  */
+  case 322:
 #line 3238 "parse.y"
                     {
 			CMDARG_PUSH(0);
 		    }
-#line 11911 "parse.c"
+#line 11399 "parse.c"
     break;
 
-  case 323: /* primary: k_begin $@15 bodystmt k_end  */
+  case 323:
 #line 3243 "parse.y"
                     {
 			CMDARG_POP();
@@ -11926,16 +11414,16 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: begin!($3) %*/
 		    }
-#line 11925 "parse.c"
+#line 11413 "parse.c"
     break;
 
-  case 324: /* $@16: %empty  */
+  case 324:
 #line 3252 "parse.y"
                               {SET_LEX_STATE(EXPR_ENDARG);}
-#line 11931 "parse.c"
+#line 11419 "parse.c"
     break;
 
-  case 325: /* primary: "( arg" $@16 rparen  */
+  case 325:
 #line 3253 "parse.y"
                     {
 		    /*%%%*/
@@ -11943,16 +11431,16 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: paren!(0) %*/
 		    }
-#line 11942 "parse.c"
+#line 11430 "parse.c"
     break;
 
-  case 326: /* $@17: %empty  */
+  case 326:
 #line 3259 "parse.y"
                                    {SET_LEX_STATE(EXPR_ENDARG);}
-#line 11948 "parse.c"
+#line 11436 "parse.c"
     break;
 
-  case 327: /* primary: "( arg" stmt $@17 rparen  */
+  case 327:
 #line 3260 "parse.y"
                     {
 		    /*%%%*/
@@ -11961,10 +11449,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: paren!($2) %*/
 		    }
-#line 11960 "parse.c"
+#line 11448 "parse.c"
     break;
 
-  case 328: /* primary: "(" compstmt ')'  */
+  case 328:
 #line 3268 "parse.y"
                     {
 		    /*%%%*/
@@ -11973,10 +11461,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: paren!($2) %*/
 		    }
-#line 11972 "parse.c"
+#line 11460 "parse.c"
     break;
 
-  case 329: /* primary: primary_value "::" "constant"  */
+  case 329:
 #line 3276 "parse.y"
                     {
 		    /*%%%*/
@@ -11984,10 +11472,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_path_ref!($1, $3) %*/
 		    }
-#line 11983 "parse.c"
+#line 11471 "parse.c"
     break;
 
-  case 330: /* primary: ":: at EXPR_BEG" "constant"  */
+  case 330:
 #line 3283 "parse.y"
                     {
 		    /*%%%*/
@@ -11995,10 +11483,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: top_const_ref!($2) %*/
 		    }
-#line 11994 "parse.c"
+#line 11482 "parse.c"
     break;
 
-  case 331: /* primary: "[" aref_args ']'  */
+  case 331:
 #line 3290 "parse.y"
                     {
 		    /*%%%*/
@@ -12006,10 +11494,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: array!(escape_Qundef($2)) %*/
 		    }
-#line 12005 "parse.c"
+#line 11493 "parse.c"
     break;
 
-  case 332: /* primary: "{" assoc_list '}'  */
+  case 332:
 #line 3297 "parse.y"
                     {
 		    /*%%%*/
@@ -12018,10 +11506,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: hash!(escape_Qundef($2)) %*/
 		    }
-#line 12017 "parse.c"
+#line 11505 "parse.c"
     break;
 
-  case 333: /* primary: k_return  */
+  case 333:
 #line 3305 "parse.y"
                     {
 		    /*%%%*/
@@ -12029,10 +11517,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: return0! %*/
 		    }
-#line 12028 "parse.c"
+#line 11516 "parse.c"
     break;
 
-  case 334: /* primary: "`yield'" '(' call_args rparen  */
+  case 334:
 #line 3312 "parse.y"
                     {
 		    /*%%%*/
@@ -12040,10 +11528,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: yield!(paren!($3)) %*/
 		    }
-#line 12039 "parse.c"
+#line 11527 "parse.c"
     break;
 
-  case 335: /* primary: "`yield'" '(' rparen  */
+  case 335:
 #line 3319 "parse.y"
                     {
 		    /*%%%*/
@@ -12051,10 +11539,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: yield!(paren!(args_new!)) %*/
 		    }
-#line 12050 "parse.c"
+#line 11538 "parse.c"
     break;
 
-  case 336: /* primary: "`yield'"  */
+  case 336:
 #line 3326 "parse.y"
                     {
 		    /*%%%*/
@@ -12062,41 +11550,41 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: yield0! %*/
 		    }
-#line 12061 "parse.c"
+#line 11549 "parse.c"
     break;
 
-  case 337: /* $@18: %empty  */
+  case 337:
 #line 3332 "parse.y"
                                              {p->ctxt.in_defined = 1;}
-#line 12067 "parse.c"
+#line 11555 "parse.c"
     break;
 
-  case 338: /* primary: "`defined?'" opt_nl '(' $@18 expr rparen  */
+  case 338:
 #line 3333 "parse.y"
                     {
 			p->ctxt.in_defined = 0;
 			(yyval.node) = new_defined(p, (yyvsp[-1].node), &(yyloc));
 		    }
-#line 12076 "parse.c"
+#line 11564 "parse.c"
     break;
 
-  case 339: /* primary: "`not'" '(' expr rparen  */
+  case 339:
 #line 3338 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, method_cond(p, (yyvsp[-1].node), &(yylsp[-1])), METHOD_NOT, &(yylsp[-3]), &(yyloc));
 		    }
-#line 12084 "parse.c"
+#line 11572 "parse.c"
     break;
 
-  case 340: /* primary: "`not'" '(' rparen  */
+  case 340:
 #line 3342 "parse.y"
                     {
 			(yyval.node) = call_uni_op(p, method_cond(p, new_nil(&(yylsp[-1])), &(yylsp[-1])), METHOD_NOT, &(yylsp[-2]), &(yyloc));
 		    }
-#line 12092 "parse.c"
+#line 11580 "parse.c"
     break;
 
-  case 341: /* primary: fcall brace_block  */
+  case 341:
 #line 3346 "parse.y"
                     {
 		    /*%%%*/
@@ -12104,10 +11592,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!(method_add_arg!(fcall!($1), args_new!), $2) %*/
 		    }
-#line 12103 "parse.c"
+#line 11591 "parse.c"
     break;
 
-  case 343: /* primary: method_call brace_block  */
+  case 343:
 #line 3354 "parse.y"
                     {
 		    /*%%%*/
@@ -12116,10 +11604,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!($1, $2) %*/
 		    }
-#line 12115 "parse.c"
+#line 11603 "parse.c"
     break;
 
-  case 345: /* primary: k_if expr_value then compstmt if_tail k_end  */
+  case 345:
 #line 3366 "parse.y"
                     {
 		    /*%%%*/
@@ -12128,10 +11616,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: if!($2, $4, escape_Qundef($5)) %*/
 		    }
-#line 12127 "parse.c"
+#line 11615 "parse.c"
     break;
 
-  case 346: /* primary: k_unless expr_value then compstmt opt_else k_end  */
+  case 346:
 #line 3377 "parse.y"
                     {
 		    /*%%%*/
@@ -12140,10 +11628,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: unless!($2, $4, escape_Qundef($5)) %*/
 		    }
-#line 12139 "parse.c"
+#line 11627 "parse.c"
     break;
 
-  case 347: /* primary: k_while expr_value_do compstmt k_end  */
+  case 347:
 #line 3387 "parse.y"
                     {
 		    /*%%%*/
@@ -12152,10 +11640,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: while!($2, $3) %*/
 		    }
-#line 12151 "parse.c"
+#line 11639 "parse.c"
     break;
 
-  case 348: /* primary: k_until expr_value_do compstmt k_end  */
+  case 348:
 #line 3397 "parse.y"
                     {
 		    /*%%%*/
@@ -12164,19 +11652,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: until!($2, $3) %*/
 		    }
-#line 12163 "parse.c"
+#line 11651 "parse.c"
     break;
 
-  case 349: /* @19: %empty  */
+  case 349:
 #line 3405 "parse.y"
                     {
 			(yyval.val) = p->case_labels;
 			p->case_labels = Qnil;
 		    }
-#line 12172 "parse.c"
+#line 11660 "parse.c"
     break;
 
-  case 350: /* primary: k_case expr_value opt_terms @19 case_body k_end  */
+  case 350:
 #line 3411 "parse.y"
                     {
 			if (RTEST(p->case_labels)) rb_hash_clear(p->case_labels);
@@ -12187,19 +11675,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: case!($2, $5) %*/
 		    }
-#line 12186 "parse.c"
+#line 11674 "parse.c"
     break;
 
-  case 351: /* @20: %empty  */
+  case 351:
 #line 3421 "parse.y"
                     {
 			(yyval.val) = p->case_labels;
 			p->case_labels = 0;
 		    }
-#line 12195 "parse.c"
+#line 11683 "parse.c"
     break;
 
-  case 352: /* primary: k_case opt_terms @20 case_body k_end  */
+  case 352:
 #line 3427 "parse.y"
                     {
 			if (RTEST(p->case_labels)) rb_hash_clear(p->case_labels);
@@ -12209,10 +11697,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: case!(Qnil, $4) %*/
 		    }
-#line 12208 "parse.c"
+#line 11696 "parse.c"
     break;
 
-  case 353: /* primary: k_case expr_value opt_terms p_case_body k_end  */
+  case 353:
 #line 3438 "parse.y"
                     {
 		    /*%%%*/
@@ -12220,10 +11708,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: case!($2, $4) %*/
 		    }
-#line 12219 "parse.c"
+#line 11707 "parse.c"
     break;
 
-  case 354: /* primary: k_for for_var "`in'" expr_value_do compstmt k_end  */
+  case 354:
 #line 3447 "parse.y"
                     {
 		    /*%%%*/
@@ -12264,10 +11752,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: for!($2, $4, $5) %*/
 		    }
-#line 12263 "parse.c"
+#line 11751 "parse.c"
     break;
 
-  case 355: /* $@21: %empty  */
+  case 355:
 #line 3487 "parse.y"
                     {
 			if (p->ctxt.in_def) {
@@ -12277,10 +11765,10 @@ yyreduce:
 			p->ctxt.in_class = 1;
 			local_push(p, 0);
 		    }
-#line 12276 "parse.c"
+#line 11764 "parse.c"
     break;
 
-  case 356: /* primary: k_class cpath superclass $@21 bodystmt k_end  */
+  case 356:
 #line 3497 "parse.y"
                     {
 		    /*%%%*/
@@ -12294,20 +11782,20 @@ yyreduce:
 			p->ctxt.in_class = (yyvsp[-5].ctxt).in_class;
 			p->ctxt.shareable_constant_value = (yyvsp[-5].ctxt).shareable_constant_value;
 		    }
-#line 12293 "parse.c"
+#line 11781 "parse.c"
     break;
 
-  case 357: /* $@22: %empty  */
+  case 357:
 #line 3510 "parse.y"
                     {
 			p->ctxt.in_def = 0;
 			p->ctxt.in_class = 0;
 			local_push(p, 0);
 		    }
-#line 12303 "parse.c"
+#line 11791 "parse.c"
     break;
 
-  case 358: /* primary: k_class "<<" expr $@22 term bodystmt k_end  */
+  case 358:
 #line 3518 "parse.y"
                     {
 		    /*%%%*/
@@ -12322,10 +11810,10 @@ yyreduce:
 			p->ctxt.in_class = (yyvsp[-6].ctxt).in_class;
 			p->ctxt.shareable_constant_value = (yyvsp[-6].ctxt).shareable_constant_value;
 		    }
-#line 12321 "parse.c"
+#line 11809 "parse.c"
     break;
 
-  case 359: /* $@23: %empty  */
+  case 359:
 #line 3532 "parse.y"
                     {
 			if (p->ctxt.in_def) {
@@ -12335,10 +11823,10 @@ yyreduce:
 			p->ctxt.in_class = 1;
 			local_push(p, 0);
 		    }
-#line 12334 "parse.c"
+#line 11822 "parse.c"
     break;
 
-  case 360: /* primary: k_module cpath $@23 bodystmt k_end  */
+  case 360:
 #line 3542 "parse.y"
                     {
 		    /*%%%*/
@@ -12352,20 +11840,20 @@ yyreduce:
 			p->ctxt.in_class = (yyvsp[-4].ctxt).in_class;
 			p->ctxt.shareable_constant_value = (yyvsp[-4].ctxt).shareable_constant_value;
 		    }
-#line 12351 "parse.c"
+#line 11839 "parse.c"
     break;
 
-  case 361: /* $@24: %empty  */
+  case 361:
 #line 3556 "parse.y"
                     {
 		    /*%%%*/
 			push_end_expect_token_locations(p, &(yylsp[-1]).beg_pos);
 		    /*% %*/
 		    }
-#line 12361 "parse.c"
+#line 11849 "parse.c"
     break;
 
-  case 362: /* primary: defn_head f_arglist $@24 bodystmt k_end  */
+  case 362:
 #line 3563 "parse.y"
                     {
 			restore_defun(p, (yyvsp[-4].node)->nd_defn);
@@ -12375,20 +11863,20 @@ yyreduce:
 		    /*% ripper: def!(get_value($1), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 12374 "parse.c"
+#line 11862 "parse.c"
     break;
 
-  case 363: /* $@25: %empty  */
+  case 363:
 #line 3573 "parse.y"
                     {
 		    /*%%%*/
 			push_end_expect_token_locations(p, &(yylsp[-1]).beg_pos);
 		    /*% %*/
 		    }
-#line 12384 "parse.c"
+#line 11872 "parse.c"
     break;
 
-  case 364: /* primary: defs_head f_arglist $@25 bodystmt k_end  */
+  case 364:
 #line 3580 "parse.y"
                     {
 			restore_defun(p, (yyvsp[-4].node)->nd_defn);
@@ -12400,10 +11888,10 @@ yyreduce:
 		    /*% ripper: defs!(AREF($1, 0), AREF($1, 1), AREF($1, 2), $2, $4) %*/
 			local_pop(p);
 		    }
-#line 12399 "parse.c"
+#line 11887 "parse.c"
     break;
 
-  case 365: /* primary: "`break'"  */
+  case 365:
 #line 3591 "parse.y"
                     {
 		    /*%%%*/
@@ -12411,10 +11899,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: break!(args_new!) %*/
 		    }
-#line 12410 "parse.c"
+#line 11898 "parse.c"
     break;
 
-  case 366: /* primary: "`next'"  */
+  case 366:
 #line 3598 "parse.y"
                     {
 		    /*%%%*/
@@ -12422,10 +11910,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: next!(args_new!) %*/
 		    }
-#line 12421 "parse.c"
+#line 11909 "parse.c"
     break;
 
-  case 367: /* primary: "`redo'"  */
+  case 367:
 #line 3605 "parse.y"
                     {
 		    /*%%%*/
@@ -12433,10 +11921,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: redo! %*/
 		    }
-#line 12432 "parse.c"
+#line 11920 "parse.c"
     break;
 
-  case 368: /* primary: "`retry'"  */
+  case 368:
 #line 3612 "parse.y"
                     {
 		    /*%%%*/
@@ -12444,19 +11932,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: retry! %*/
 		    }
-#line 12443 "parse.c"
+#line 11931 "parse.c"
     break;
 
-  case 369: /* primary_value: primary  */
+  case 369:
 #line 3621 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 12452 "parse.c"
+#line 11940 "parse.c"
     break;
 
-  case 370: /* k_begin: "`begin'"  */
+  case 370:
 #line 3628 "parse.y"
                     {
 			token_info_push(p, "begin", &(yyloc));
@@ -12464,10 +11952,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12463 "parse.c"
+#line 11951 "parse.c"
     break;
 
-  case 371: /* k_if: "`if'"  */
+  case 371:
 #line 3637 "parse.y"
                     {
 			WARN_EOL("if");
@@ -12486,10 +11974,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12485 "parse.c"
+#line 11973 "parse.c"
     break;
 
-  case 372: /* k_unless: "`unless'"  */
+  case 372:
 #line 3657 "parse.y"
                     {
 			token_info_push(p, "unless", &(yyloc));
@@ -12497,10 +11985,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12496 "parse.c"
+#line 11984 "parse.c"
     break;
 
-  case 373: /* k_while: "`while'"  */
+  case 373:
 #line 3666 "parse.y"
                     {
 			token_info_push(p, "while", &(yyloc));
@@ -12508,10 +11996,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12507 "parse.c"
+#line 11995 "parse.c"
     break;
 
-  case 374: /* k_until: "`until'"  */
+  case 374:
 #line 3675 "parse.y"
                     {
 			token_info_push(p, "until", &(yyloc));
@@ -12519,10 +12007,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12518 "parse.c"
+#line 12006 "parse.c"
     break;
 
-  case 375: /* k_case: "`case'"  */
+  case 375:
 #line 3684 "parse.y"
                     {
 			token_info_push(p, "case", &(yyloc));
@@ -12530,10 +12018,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12529 "parse.c"
+#line 12017 "parse.c"
     break;
 
-  case 376: /* k_for: "`for'"  */
+  case 376:
 #line 3693 "parse.y"
                     {
 			token_info_push(p, "for", &(yyloc));
@@ -12541,10 +12029,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12540 "parse.c"
+#line 12028 "parse.c"
     break;
 
-  case 377: /* k_class: "`class'"  */
+  case 377:
 #line 3702 "parse.y"
                     {
 			token_info_push(p, "class", &(yyloc));
@@ -12553,10 +12041,10 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12552 "parse.c"
+#line 12040 "parse.c"
     break;
 
-  case 378: /* k_module: "`module'"  */
+  case 378:
 #line 3712 "parse.y"
                     {
 			token_info_push(p, "module", &(yyloc));
@@ -12565,19 +12053,19 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12564 "parse.c"
+#line 12052 "parse.c"
     break;
 
-  case 379: /* k_def: "`def'"  */
+  case 379:
 #line 3722 "parse.y"
                     {
 			token_info_push(p, "def", &(yyloc));
 			p->ctxt.in_argdef = 1;
 		    }
-#line 12573 "parse.c"
+#line 12061 "parse.c"
     break;
 
-  case 380: /* k_do: "`do'"  */
+  case 380:
 #line 3729 "parse.y"
                     {
 			token_info_push(p, "do", &(yyloc));
@@ -12586,10 +12074,10 @@ yyreduce:
 		    /*% %*/
 
 		    }
-#line 12585 "parse.c"
+#line 12073 "parse.c"
     break;
 
-  case 381: /* k_do_block: "`do' for block"  */
+  case 381:
 #line 3739 "parse.y"
                     {
 			token_info_push(p, "do", &(yyloc));
@@ -12597,34 +12085,34 @@ yyreduce:
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 12596 "parse.c"
+#line 12084 "parse.c"
     break;
 
-  case 382: /* k_rescue: "`rescue'"  */
+  case 382:
 #line 3748 "parse.y"
                     {
 			token_info_warn(p, "rescue", p->token_info, 1, &(yyloc));
 		    }
-#line 12604 "parse.c"
+#line 12092 "parse.c"
     break;
 
-  case 383: /* k_ensure: "`ensure'"  */
+  case 383:
 #line 3754 "parse.y"
                     {
 			token_info_warn(p, "ensure", p->token_info, 1, &(yyloc));
 		    }
-#line 12612 "parse.c"
+#line 12100 "parse.c"
     break;
 
-  case 384: /* k_when: "`when'"  */
+  case 384:
 #line 3760 "parse.y"
                     {
 			token_info_warn(p, "when", p->token_info, 0, &(yyloc));
 		    }
-#line 12620 "parse.c"
+#line 12108 "parse.c"
     break;
 
-  case 385: /* k_else: "`else'"  */
+  case 385:
 #line 3766 "parse.y"
                     {
 			token_info *ptinfo_beg = p->token_info;
@@ -12638,19 +12126,19 @@ yyreduce:
 			    if (!e.nonspc) *ptinfo_beg = e;
 			}
 		    }
-#line 12637 "parse.c"
+#line 12125 "parse.c"
     break;
 
-  case 386: /* k_elsif: "`elsif'"  */
+  case 386:
 #line 3781 "parse.y"
                     {
 			WARN_EOL("elsif");
 			token_info_warn(p, "elsif", p->token_info, 1, &(yyloc));
 		    }
-#line 12646 "parse.c"
+#line 12134 "parse.c"
     break;
 
-  case 387: /* k_end: "`end'"  */
+  case 387:
 #line 3788 "parse.y"
                     {
 			token_info_pop(p, "end", &(yyloc));
@@ -12658,27 +12146,27 @@ yyreduce:
 			pop_end_expect_token_locations(p);
 		    /*% %*/
 		    }
-#line 12657 "parse.c"
+#line 12145 "parse.c"
     break;
 
-  case 388: /* k_end: "dummy end"  */
+  case 388:
 #line 3795 "parse.y"
                     {
 			compile_error(p, "syntax error, unexpected end-of-input");
 		    }
-#line 12665 "parse.c"
+#line 12153 "parse.c"
     break;
 
-  case 389: /* k_return: "`return'"  */
+  case 389:
 #line 3801 "parse.y"
                     {
 			if (p->ctxt.in_class && !p->ctxt.in_def && !dyna_in_block(p))
 			    yyerror1(&(yylsp[0]), "Invalid return in class/module body");
 		    }
-#line 12674 "parse.c"
+#line 12162 "parse.c"
     break;
 
-  case 396: /* if_tail: k_elsif expr_value then compstmt if_tail  */
+  case 396:
 #line 3820 "parse.y"
                     {
 		    /*%%%*/
@@ -12687,10 +12175,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: elsif!($2, $4, escape_Qundef($5)) %*/
 		    }
-#line 12686 "parse.c"
+#line 12174 "parse.c"
     break;
 
-  case 398: /* opt_else: k_else compstmt  */
+  case 398:
 #line 3831 "parse.y"
                     {
 		    /*%%%*/
@@ -12698,10 +12186,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: else!($2) %*/
 		    }
-#line 12697 "parse.c"
+#line 12185 "parse.c"
     break;
 
-  case 401: /* f_marg: f_norm_arg  */
+  case 401:
 #line 3844 "parse.y"
                     {
 		    /*%%%*/
@@ -12710,10 +12198,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, $1) %*/
 		    }
-#line 12709 "parse.c"
+#line 12197 "parse.c"
     break;
 
-  case 402: /* f_marg: "(" f_margs rparen  */
+  case 402:
 #line 3852 "parse.y"
                     {
 		    /*%%%*/
@@ -12721,10 +12209,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_paren!($2) %*/
 		    }
-#line 12720 "parse.c"
+#line 12208 "parse.c"
     break;
 
-  case 403: /* f_marg_list: f_marg  */
+  case 403:
 #line 3861 "parse.y"
                     {
 		    /*%%%*/
@@ -12732,10 +12220,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!(mlhs_new!, $1) %*/
 		    }
-#line 12731 "parse.c"
+#line 12219 "parse.c"
     break;
 
-  case 404: /* f_marg_list: f_marg_list ',' f_marg  */
+  case 404:
 #line 3868 "parse.y"
                     {
 		    /*%%%*/
@@ -12743,10 +12231,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add!($1, $3) %*/
 		    }
-#line 12742 "parse.c"
+#line 12230 "parse.c"
     break;
 
-  case 405: /* f_margs: f_marg_list  */
+  case 405:
 #line 3877 "parse.y"
                     {
 		    /*%%%*/
@@ -12754,10 +12242,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $1 %*/
 		    }
-#line 12753 "parse.c"
+#line 12241 "parse.c"
     break;
 
-  case 406: /* f_margs: f_marg_list ',' f_rest_marg  */
+  case 406:
 #line 3884 "parse.y"
                     {
 		    /*%%%*/
@@ -12765,10 +12253,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!($1, $3) %*/
 		    }
-#line 12764 "parse.c"
+#line 12252 "parse.c"
     break;
 
-  case 407: /* f_margs: f_marg_list ',' f_rest_marg ',' f_marg_list  */
+  case 407:
 #line 3891 "parse.y"
                     {
 		    /*%%%*/
@@ -12776,10 +12264,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!($1, $3), $5) %*/
 		    }
-#line 12775 "parse.c"
+#line 12263 "parse.c"
     break;
 
-  case 408: /* f_margs: f_rest_marg  */
+  case 408:
 #line 3898 "parse.y"
                     {
 		    /*%%%*/
@@ -12787,10 +12275,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_star!(mlhs_new!, $1) %*/
 		    }
-#line 12786 "parse.c"
+#line 12274 "parse.c"
     break;
 
-  case 409: /* f_margs: f_rest_marg ',' f_marg_list  */
+  case 409:
 #line 3905 "parse.y"
                     {
 		    /*%%%*/
@@ -12798,10 +12286,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_add_post!(mlhs_add_star!(mlhs_new!, $1), $3) %*/
 		    }
-#line 12797 "parse.c"
+#line 12285 "parse.c"
     break;
 
-  case 410: /* f_rest_marg: "*" f_norm_arg  */
+  case 410:
 #line 3914 "parse.y"
                     {
 		    /*%%%*/
@@ -12810,10 +12298,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, $2) %*/
 		    }
-#line 12809 "parse.c"
+#line 12297 "parse.c"
     break;
 
-  case 411: /* f_rest_marg: "*"  */
+  case 411:
 #line 3922 "parse.y"
                     {
 		    /*%%%*/
@@ -12821,70 +12309,70 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: Qnil %*/
 		    }
-#line 12820 "parse.c"
+#line 12308 "parse.c"
     break;
 
-  case 413: /* f_any_kwrest: f_no_kwarg  */
+  case 413:
 #line 3931 "parse.y"
                              {(yyval.id) = ID2VAL(idNil);}
-#line 12826 "parse.c"
+#line 12314 "parse.c"
     break;
 
-  case 414: /* $@26: %empty  */
+  case 414:
 #line 3934 "parse.y"
                   {p->ctxt.in_argdef = 0;}
-#line 12832 "parse.c"
+#line 12320 "parse.c"
     break;
 
-  case 416: /* block_args_tail: f_block_kwarg ',' f_kwrest opt_f_block_arg  */
+  case 416:
 #line 3937 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, (yyvsp[-3].node), (yyvsp[-1].id), (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 12840 "parse.c"
+#line 12328 "parse.c"
     break;
 
-  case 417: /* block_args_tail: f_block_kwarg opt_f_block_arg  */
+  case 417:
 #line 3941 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, (yyvsp[-1].node), Qnone, (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 12848 "parse.c"
+#line 12336 "parse.c"
     break;
 
-  case 418: /* block_args_tail: f_any_kwrest opt_f_block_arg  */
+  case 418:
 #line 3945 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, (yyvsp[-1].id), (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 12856 "parse.c"
+#line 12344 "parse.c"
     break;
 
-  case 419: /* block_args_tail: f_block_arg  */
+  case 419:
 #line 3949 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, (yyvsp[0].id), &(yylsp[0]));
 		    }
-#line 12864 "parse.c"
+#line 12352 "parse.c"
     break;
 
-  case 420: /* opt_block_args_tail: ',' block_args_tail  */
+  case 420:
 #line 3955 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 12872 "parse.c"
+#line 12360 "parse.c"
     break;
 
-  case 421: /* opt_block_args_tail: %empty  */
+  case 421:
 #line 3959 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, Qnone, &(yylsp[0]));
 		    }
-#line 12880 "parse.c"
+#line 12368 "parse.c"
     break;
 
-  case 422: /* excessed_comma: ','  */
+  case 422:
 #line 3965 "parse.y"
                     {
 			/* magic number for rest_id in iseq_set_arguments() */
@@ -12893,139 +12381,139 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: excessed_comma! %*/
 		    }
-#line 12892 "parse.c"
+#line 12380 "parse.c"
     break;
 
-  case 423: /* block_param: f_arg ',' f_block_optarg ',' f_rest_arg opt_block_args_tail  */
+  case 423:
 #line 3975 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), (yyvsp[-3].node), (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12900 "parse.c"
+#line 12388 "parse.c"
     break;
 
-  case 424: /* block_param: f_arg ',' f_block_optarg ',' f_rest_arg ',' f_arg opt_block_args_tail  */
+  case 424:
 #line 3979 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-7].node), (yyvsp[-5].node), (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 12908 "parse.c"
+#line 12396 "parse.c"
     break;
 
-  case 425: /* block_param: f_arg ',' f_block_optarg opt_block_args_tail  */
+  case 425:
 #line 3983 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-3].node), (yyvsp[-1].node), Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12916 "parse.c"
+#line 12404 "parse.c"
     break;
 
-  case 426: /* block_param: f_arg ',' f_block_optarg ',' f_arg opt_block_args_tail  */
+  case 426:
 #line 3987 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), (yyvsp[-3].node), Qnone, (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 12924 "parse.c"
+#line 12412 "parse.c"
     break;
 
-  case 427: /* block_param: f_arg ',' f_rest_arg opt_block_args_tail  */
+  case 427:
 #line 3991 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-3].node), Qnone, (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12932 "parse.c"
+#line 12420 "parse.c"
     break;
 
-  case 428: /* block_param: f_arg excessed_comma  */
+  case 428:
 #line 3995 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, Qnone, &(yylsp[0]));
 			(yyval.node) = new_args(p, (yyvsp[-1].node), Qnone, (yyvsp[0].id), Qnone, (yyval.node), &(yyloc));
 		    }
-#line 12941 "parse.c"
+#line 12429 "parse.c"
     break;
 
-  case 429: /* block_param: f_arg ',' f_rest_arg ',' f_arg opt_block_args_tail  */
+  case 429:
 #line 4000 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), Qnone, (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 12949 "parse.c"
+#line 12437 "parse.c"
     break;
 
-  case 430: /* block_param: f_arg opt_block_args_tail  */
+  case 430:
 #line 4004 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-1].node), Qnone, Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12957 "parse.c"
+#line 12445 "parse.c"
     break;
 
-  case 431: /* block_param: f_block_optarg ',' f_rest_arg opt_block_args_tail  */
+  case 431:
 #line 4008 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-3].node), (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12965 "parse.c"
+#line 12453 "parse.c"
     break;
 
-  case 432: /* block_param: f_block_optarg ',' f_rest_arg ',' f_arg opt_block_args_tail  */
+  case 432:
 #line 4012 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-5].node), (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 12973 "parse.c"
+#line 12461 "parse.c"
     break;
 
-  case 433: /* block_param: f_block_optarg opt_block_args_tail  */
+  case 433:
 #line 4016 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-1].node), Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12981 "parse.c"
+#line 12469 "parse.c"
     break;
 
-  case 434: /* block_param: f_block_optarg ',' f_arg opt_block_args_tail  */
+  case 434:
 #line 4020 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-3].node), Qnone, (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 12989 "parse.c"
+#line 12477 "parse.c"
     break;
 
-  case 435: /* block_param: f_rest_arg opt_block_args_tail  */
+  case 435:
 #line 4024 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 12997 "parse.c"
+#line 12485 "parse.c"
     break;
 
-  case 436: /* block_param: f_rest_arg ',' f_arg opt_block_args_tail  */
+  case 436:
 #line 4028 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 13005 "parse.c"
+#line 12493 "parse.c"
     break;
 
-  case 437: /* block_param: block_args_tail  */
+  case 437:
 #line 4032 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 13013 "parse.c"
+#line 12501 "parse.c"
     break;
 
-  case 439: /* opt_block_param: block_param_def  */
+  case 439:
 #line 4039 "parse.y"
                     {
 			p->command_start = TRUE;
 		    }
-#line 13021 "parse.c"
+#line 12509 "parse.c"
     break;
 
-  case 440: /* block_param_def: '|' opt_bv_decl '|'  */
+  case 440:
 #line 4045 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -13036,10 +12524,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: block_var!(params!(Qnil,Qnil,Qnil,Qnil,Qnil,Qnil,Qnil), escape_Qundef($2)) %*/
 		    }
-#line 13035 "parse.c"
+#line 12523 "parse.c"
     break;
 
-  case 441: /* block_param_def: '|' block_param opt_bv_decl '|'  */
+  case 441:
 #line 4055 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -13050,18 +12538,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: block_var!(escape_Qundef($2), escape_Qundef($3)) %*/
 		    }
-#line 13049 "parse.c"
+#line 12537 "parse.c"
     break;
 
-  case 442: /* opt_bv_decl: opt_nl  */
+  case 442:
 #line 4068 "parse.y"
                     {
 			(yyval.node) = 0;
 		    }
-#line 13057 "parse.c"
+#line 12545 "parse.c"
     break;
 
-  case 443: /* opt_bv_decl: opt_nl ';' bv_decls opt_nl  */
+  case 443:
 #line 4072 "parse.y"
                     {
 		    /*%%%*/
@@ -13069,27 +12557,27 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $3 %*/
 		    }
-#line 13068 "parse.c"
+#line 12556 "parse.c"
     break;
 
-  case 446: /* bvar: "local variable or method"  */
+  case 446:
 #line 4087 "parse.y"
                     {
 			new_bv(p, get_id((yyvsp[0].id)));
 		    /*% ripper: get_value($1) %*/
 		    }
-#line 13077 "parse.c"
+#line 12565 "parse.c"
     break;
 
-  case 447: /* bvar: f_bad_arg  */
+  case 447:
 #line 4092 "parse.y"
                     {
 			(yyval.node) = 0;
 		    }
-#line 13085 "parse.c"
+#line 12573 "parse.c"
     break;
 
-  case 448: /* @27: %empty  */
+  case 448:
 #line 4098 "parse.y"
                     {
 			token_info_push(p, "->", &(yylsp[0]));
@@ -13097,35 +12585,35 @@ yyreduce:
 			(yyval.num) = p->lex.lpar_beg;
 			p->lex.lpar_beg = p->lex.paren_nest;
 		    }
-#line 13096 "parse.c"
+#line 12584 "parse.c"
     break;
 
-  case 449: /* @28: %empty  */
+  case 449:
 #line 4104 "parse.y"
                     {
 			(yyval.num) = p->max_numparam;
 			p->max_numparam = 0;
 		    }
-#line 13105 "parse.c"
+#line 12593 "parse.c"
     break;
 
-  case 450: /* @29: %empty  */
+  case 450:
 #line 4108 "parse.y"
                     {
 			(yyval.node) = numparam_push(p);
 		    }
-#line 13113 "parse.c"
+#line 12601 "parse.c"
     break;
 
-  case 451: /* $@30: %empty  */
+  case 451:
 #line 4112 "parse.y"
                     {
 			CMDARG_PUSH(0);
 		    }
-#line 13121 "parse.c"
+#line 12609 "parse.c"
     break;
 
-  case 452: /* lambda: "->" @27 @28 @29 f_larglist $@30 lambda_body  */
+  case 452:
 #line 4116 "parse.y"
                     {
 			int max_numparam = p->max_numparam;
@@ -13146,10 +12634,10 @@ yyreduce:
 			numparam_pop(p, (yyvsp[-3].node));
 			dyna_pop(p, (yyvsp[-6].vars));
 		    }
-#line 13145 "parse.c"
+#line 12633 "parse.c"
     break;
 
-  case 453: /* f_larglist: '(' f_args opt_bv_decl ')'  */
+  case 453:
 #line 4138 "parse.y"
                     {
 			p->ctxt.in_argdef = 0;
@@ -13159,10 +12647,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: paren!($2) %*/
 		    }
-#line 13158 "parse.c"
+#line 12646 "parse.c"
     break;
 
-  case 454: /* f_larglist: f_args  */
+  case 454:
 #line 4147 "parse.y"
                     {
 			p->ctxt.in_argdef = 0;
@@ -13172,37 +12660,37 @@ yyreduce:
 		    /*% %*/
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 13171 "parse.c"
+#line 12659 "parse.c"
     break;
 
-  case 455: /* lambda_body: tLAMBEG compstmt '}'  */
+  case 455:
 #line 4158 "parse.y"
                     {
 			token_info_pop(p, "}", &(yylsp[0]));
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 13180 "parse.c"
+#line 12668 "parse.c"
     break;
 
-  case 456: /* $@31: %empty  */
+  case 456:
 #line 4163 "parse.y"
                     {
 		    /*%%%*/
 			push_end_expect_token_locations(p, &(yylsp[0]).beg_pos);
 		    /*% %*/
 		    }
-#line 13190 "parse.c"
+#line 12678 "parse.c"
     break;
 
-  case 457: /* lambda_body: "`do' for lambda" $@31 bodystmt k_end  */
+  case 457:
 #line 4169 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 13198 "parse.c"
+#line 12686 "parse.c"
     break;
 
-  case 458: /* do_block: k_do_block do_body k_end  */
+  case 458:
 #line 4175 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
@@ -13211,10 +12699,10 @@ yyreduce:
 			nd_set_line((yyval.node), (yylsp[-2]).end_pos.lineno);
 		    /*% %*/
 		    }
-#line 13210 "parse.c"
+#line 12698 "parse.c"
     break;
 
-  case 459: /* block_call: command do_block  */
+  case 459:
 #line 4185 "parse.y"
                     {
 		    /*%%%*/
@@ -13229,10 +12717,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!($1, $2) %*/
 		    }
-#line 13228 "parse.c"
+#line 12716 "parse.c"
     break;
 
-  case 460: /* block_call: block_call call_op2 operation2 opt_paren_args  */
+  case 460:
 #line 4199 "parse.y"
                     {
 		    /*%%%*/
@@ -13240,10 +12728,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opt_event(:method_add_arg!, call!($1, $2, $3), $4) %*/
 		    }
-#line 13239 "parse.c"
+#line 12727 "parse.c"
     break;
 
-  case 461: /* block_call: block_call call_op2 operation2 opt_paren_args brace_block  */
+  case 461:
 #line 4206 "parse.y"
                     {
 		    /*%%%*/
@@ -13251,10 +12739,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opt_event(:method_add_block!, command_call!($1, $2, $3, $4), $5) %*/
 		    }
-#line 13250 "parse.c"
+#line 12738 "parse.c"
     break;
 
-  case 462: /* block_call: block_call call_op2 operation2 command_args do_block  */
+  case 462:
 #line 4213 "parse.y"
                     {
 		    /*%%%*/
@@ -13262,10 +12750,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_block!(command_call!($1, $2, $3, $4), $5) %*/
 		    }
-#line 13261 "parse.c"
+#line 12749 "parse.c"
     break;
 
-  case 463: /* method_call: fcall paren_args  */
+  case 463:
 #line 4222 "parse.y"
                     {
 		    /*%%%*/
@@ -13275,10 +12763,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(fcall!($1), $2) %*/
 		    }
-#line 13274 "parse.c"
+#line 12762 "parse.c"
     break;
 
-  case 464: /* method_call: primary_value call_op operation2 opt_paren_args  */
+  case 464:
 #line 4231 "parse.y"
                     {
 		    /*%%%*/
@@ -13287,10 +12775,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: opt_event(:method_add_arg!, call!($1, $2, $3), $4) %*/
 		    }
-#line 13286 "parse.c"
+#line 12774 "parse.c"
     break;
 
-  case 465: /* method_call: primary_value "::" operation2 paren_args  */
+  case 465:
 #line 4239 "parse.y"
                     {
 		    /*%%%*/
@@ -13299,10 +12787,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(call!($1, ID2VAL(idCOLON2), $3), $4) %*/
 		    }
-#line 13298 "parse.c"
+#line 12786 "parse.c"
     break;
 
-  case 466: /* method_call: primary_value "::" operation3  */
+  case 466:
 #line 4247 "parse.y"
                     {
 		    /*%%%*/
@@ -13310,10 +12798,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: call!($1, ID2VAL(idCOLON2), $3) %*/
 		    }
-#line 13309 "parse.c"
+#line 12797 "parse.c"
     break;
 
-  case 467: /* method_call: primary_value call_op paren_args  */
+  case 467:
 #line 4254 "parse.y"
                     {
 		    /*%%%*/
@@ -13322,10 +12810,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(call!($1, $2, ID2VAL(idCall)), $3) %*/
 		    }
-#line 13321 "parse.c"
+#line 12809 "parse.c"
     break;
 
-  case 468: /* method_call: primary_value "::" paren_args  */
+  case 468:
 #line 4262 "parse.y"
                     {
 		    /*%%%*/
@@ -13334,10 +12822,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: method_add_arg!(call!($1, ID2VAL(idCOLON2), ID2VAL(idCall)), $3) %*/
 		    }
-#line 13333 "parse.c"
+#line 12821 "parse.c"
     break;
 
-  case 469: /* method_call: "`super'" paren_args  */
+  case 469:
 #line 4270 "parse.y"
                     {
 		    /*%%%*/
@@ -13345,10 +12833,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: super!($2) %*/
 		    }
-#line 13344 "parse.c"
+#line 12832 "parse.c"
     break;
 
-  case 470: /* method_call: "`super'"  */
+  case 470:
 #line 4277 "parse.y"
                     {
 		    /*%%%*/
@@ -13356,10 +12844,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: zsuper! %*/
 		    }
-#line 13355 "parse.c"
+#line 12843 "parse.c"
     break;
 
-  case 471: /* method_call: primary_value '[' opt_call_args rbracket  */
+  case 471:
 #line 4284 "parse.y"
                     {
 		    /*%%%*/
@@ -13371,10 +12859,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: aref!($1, escape_Qundef($3)) %*/
 		    }
-#line 13370 "parse.c"
+#line 12858 "parse.c"
     break;
 
-  case 472: /* brace_block: '{' brace_body '}'  */
+  case 472:
 #line 4297 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
@@ -13383,10 +12871,10 @@ yyreduce:
 			nd_set_line((yyval.node), (yylsp[-2]).end_pos.lineno);
 		    /*% %*/
 		    }
-#line 13382 "parse.c"
+#line 12870 "parse.c"
     break;
 
-  case 473: /* brace_block: k_do do_body k_end  */
+  case 473:
 #line 4305 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
@@ -13395,33 +12883,33 @@ yyreduce:
 			nd_set_line((yyval.node), (yylsp[-2]).end_pos.lineno);
 		    /*% %*/
 		    }
-#line 13394 "parse.c"
+#line 12882 "parse.c"
     break;
 
-  case 474: /* @32: %empty  */
+  case 474:
 #line 4314 "parse.y"
                   {(yyval.vars) = dyna_push(p);}
-#line 13400 "parse.c"
+#line 12888 "parse.c"
     break;
 
-  case 475: /* @33: %empty  */
+  case 475:
 #line 4315 "parse.y"
                     {
 			(yyval.num) = p->max_numparam;
 			p->max_numparam = 0;
 		    }
-#line 13409 "parse.c"
+#line 12897 "parse.c"
     break;
 
-  case 476: /* @34: %empty  */
+  case 476:
 #line 4319 "parse.y"
                     {
 			(yyval.node) = numparam_push(p);
 		    }
-#line 13417 "parse.c"
+#line 12905 "parse.c"
     break;
 
-  case 477: /* brace_body: @32 @33 @34 opt_block_param compstmt  */
+  case 477:
 #line 4323 "parse.y"
                     {
 			int max_numparam = p->max_numparam;
@@ -13434,34 +12922,34 @@ yyreduce:
 			numparam_pop(p, (yyvsp[-2].node));
 			dyna_pop(p, (yyvsp[-4].vars));
 		    }
-#line 13433 "parse.c"
+#line 12921 "parse.c"
     break;
 
-  case 478: /* @35: %empty  */
+  case 478:
 #line 4336 "parse.y"
                   {(yyval.vars) = dyna_push(p);}
-#line 13439 "parse.c"
+#line 12927 "parse.c"
     break;
 
-  case 479: /* @36: %empty  */
+  case 479:
 #line 4337 "parse.y"
                     {
 			(yyval.num) = p->max_numparam;
 			p->max_numparam = 0;
 		    }
-#line 13448 "parse.c"
+#line 12936 "parse.c"
     break;
 
-  case 480: /* @37: %empty  */
+  case 480:
 #line 4341 "parse.y"
                     {
 			(yyval.node) = numparam_push(p);
 			CMDARG_PUSH(0);
 		    }
-#line 13457 "parse.c"
+#line 12945 "parse.c"
     break;
 
-  case 481: /* do_body: @35 @36 @37 opt_block_param bodystmt  */
+  case 481:
 #line 4346 "parse.y"
                     {
 			int max_numparam = p->max_numparam;
@@ -13475,10 +12963,10 @@ yyreduce:
 			numparam_pop(p, (yyvsp[-2].node));
 			dyna_pop(p, (yyvsp[-4].vars));
 		    }
-#line 13474 "parse.c"
+#line 12962 "parse.c"
     break;
 
-  case 482: /* case_args: arg_value  */
+  case 482:
 #line 4361 "parse.y"
                     {
 		    /*%%%*/
@@ -13487,10 +12975,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!(args_new!, $1) %*/
 		    }
-#line 13486 "parse.c"
+#line 12974 "parse.c"
     break;
 
-  case 483: /* case_args: "*" arg_value  */
+  case 483:
 #line 4369 "parse.y"
                     {
 		    /*%%%*/
@@ -13498,10 +12986,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!(args_new!, $2) %*/
 		    }
-#line 13497 "parse.c"
+#line 12985 "parse.c"
     break;
 
-  case 484: /* case_args: case_args ',' arg_value  */
+  case 484:
 #line 4376 "parse.y"
                     {
 		    /*%%%*/
@@ -13510,10 +12998,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add!($1, $3) %*/
 		    }
-#line 13509 "parse.c"
+#line 12997 "parse.c"
     break;
 
-  case 485: /* case_args: case_args ',' "*" arg_value  */
+  case 485:
 #line 4384 "parse.y"
                     {
 		    /*%%%*/
@@ -13521,10 +13009,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_add_star!($1, $4) %*/
 		    }
-#line 13520 "parse.c"
+#line 13008 "parse.c"
     break;
 
-  case 486: /* case_body: k_when case_args then compstmt cases  */
+  case 486:
 #line 4395 "parse.y"
                     {
 		    /*%%%*/
@@ -13533,10 +13021,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: when!($2, $4, escape_Qundef($5)) %*/
 		    }
-#line 13532 "parse.c"
+#line 13020 "parse.c"
     break;
 
-  case 489: /* @38: %empty  */
+  case 489:
 #line 4409 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_BEG|EXPR_LABEL);
@@ -13545,28 +13033,28 @@ yyreduce:
 			p->ctxt.in_kwarg = 1;
 			(yyval.tbl) = push_pvtbl(p);
 		    }
-#line 13544 "parse.c"
+#line 13032 "parse.c"
     break;
 
-  case 490: /* @39: %empty  */
+  case 490:
 #line 4416 "parse.y"
                     {
 			(yyval.tbl) = push_pktbl(p);
 		    }
-#line 13552 "parse.c"
+#line 13040 "parse.c"
     break;
 
-  case 491: /* $@40: %empty  */
+  case 491:
 #line 4420 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
 			pop_pvtbl(p, (yyvsp[-3].tbl));
 			p->ctxt.in_kwarg = (yyvsp[-4].ctxt).in_kwarg;
 		    }
-#line 13562 "parse.c"
+#line 13050 "parse.c"
     break;
 
-  case 492: /* p_case_body: "`in'" @38 @39 p_top_expr then $@40 compstmt p_cases  */
+  case 492:
 #line 4427 "parse.y"
                     {
 		    /*%%%*/
@@ -13574,10 +13062,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: in!($4, $7, escape_Qundef($8)) %*/
 		    }
-#line 13573 "parse.c"
+#line 13061 "parse.c"
     break;
 
-  case 496: /* p_top_expr: p_top_expr_body "`if' modifier" expr_value  */
+  case 496:
 #line 4441 "parse.y"
                     {
 		    /*%%%*/
@@ -13586,10 +13074,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: if_mod!($3, $1) %*/
 		    }
-#line 13585 "parse.c"
+#line 13073 "parse.c"
     break;
 
-  case 497: /* p_top_expr: p_top_expr_body "`unless' modifier" expr_value  */
+  case 497:
 #line 4449 "parse.y"
                     {
 		    /*%%%*/
@@ -13598,19 +13086,19 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: unless_mod!($3, $1) %*/
 		    }
-#line 13597 "parse.c"
+#line 13085 "parse.c"
     break;
 
-  case 499: /* p_top_expr_body: p_expr ','  */
+  case 499:
 #line 4460 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 1, 0, Qnone, &(yyloc));
 			(yyval.node) = new_array_pattern(p, Qnone, get_value((yyvsp[-1].node)), (yyval.node), &(yyloc));
 		    }
-#line 13606 "parse.c"
+#line 13094 "parse.c"
     break;
 
-  case 500: /* p_top_expr_body: p_expr ',' p_args  */
+  case 500:
 #line 4465 "parse.y"
                     {
 			(yyval.node) = new_array_pattern(p, Qnone, get_value((yyvsp[-2].node)), (yyvsp[0].node), &(yyloc));
@@ -13619,34 +13107,34 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13618 "parse.c"
+#line 13106 "parse.c"
     break;
 
-  case 501: /* p_top_expr_body: p_find  */
+  case 501:
 #line 4473 "parse.y"
                     {
 			(yyval.node) = new_find_pattern(p, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 13626 "parse.c"
+#line 13114 "parse.c"
     break;
 
-  case 502: /* p_top_expr_body: p_args_tail  */
+  case 502:
 #line 4477 "parse.y"
                     {
 			(yyval.node) = new_array_pattern(p, Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 13634 "parse.c"
+#line 13122 "parse.c"
     break;
 
-  case 503: /* p_top_expr_body: p_kwargs  */
+  case 503:
 #line 4481 "parse.y"
                     {
 			(yyval.node) = new_hash_pattern(p, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 13642 "parse.c"
+#line 13130 "parse.c"
     break;
 
-  case 505: /* p_as: p_expr "=>" p_variable  */
+  case 505:
 #line 4490 "parse.y"
                     {
 		    /*%%%*/
@@ -13656,10 +13144,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: binary!($1, STATIC_ID2SYM((id_assoc)), $3) %*/
 		    }
-#line 13655 "parse.c"
+#line 13143 "parse.c"
     break;
 
-  case 507: /* p_alt: p_alt '|' p_expr_basic  */
+  case 507:
 #line 4502 "parse.y"
                     {
 		    /*%%%*/
@@ -13667,22 +13155,22 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: binary!($1, STATIC_ID2SYM(idOr), $3) %*/
 		    }
-#line 13666 "parse.c"
+#line 13154 "parse.c"
     break;
 
-  case 509: /* p_lparen: '('  */
+  case 509:
 #line 4511 "parse.y"
                       {(yyval.tbl) = push_pktbl(p);}
-#line 13672 "parse.c"
+#line 13160 "parse.c"
     break;
 
-  case 510: /* p_lbracket: '['  */
+  case 510:
 #line 4512 "parse.y"
                       {(yyval.tbl) = push_pktbl(p);}
-#line 13678 "parse.c"
+#line 13166 "parse.c"
     break;
 
-  case 513: /* p_expr_basic: p_const p_lparen p_args rparen  */
+  case 513:
 #line 4517 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13692,10 +13180,10 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13691 "parse.c"
+#line 13179 "parse.c"
     break;
 
-  case 514: /* p_expr_basic: p_const p_lparen p_find rparen  */
+  case 514:
 #line 4526 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13705,10 +13193,10 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13704 "parse.c"
+#line 13192 "parse.c"
     break;
 
-  case 515: /* p_expr_basic: p_const p_lparen p_kwargs rparen  */
+  case 515:
 #line 4535 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13718,19 +13206,19 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13717 "parse.c"
+#line 13205 "parse.c"
     break;
 
-  case 516: /* p_expr_basic: p_const '(' rparen  */
+  case 516:
 #line 4544 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 0, 0, Qnone, &(yyloc));
 			(yyval.node) = new_array_pattern(p, (yyvsp[-2].node), Qnone, (yyval.node), &(yyloc));
 		    }
-#line 13726 "parse.c"
+#line 13214 "parse.c"
     break;
 
-  case 517: /* p_expr_basic: p_const p_lbracket p_args rbracket  */
+  case 517:
 #line 4549 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13740,10 +13228,10 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13739 "parse.c"
+#line 13227 "parse.c"
     break;
 
-  case 518: /* p_expr_basic: p_const p_lbracket p_find rbracket  */
+  case 518:
 #line 4558 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13753,10 +13241,10 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13752 "parse.c"
+#line 13240 "parse.c"
     break;
 
-  case 519: /* p_expr_basic: p_const p_lbracket p_kwargs rbracket  */
+  case 519:
 #line 4567 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
@@ -13766,88 +13254,88 @@ yyreduce:
 		    /*%
 		    %*/
 		    }
-#line 13765 "parse.c"
+#line 13253 "parse.c"
     break;
 
-  case 520: /* p_expr_basic: p_const '[' rbracket  */
+  case 520:
 #line 4576 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 0, 0, Qnone, &(yyloc));
 			(yyval.node) = new_array_pattern(p, (yyvsp[-2].node), Qnone, (yyval.node), &(yyloc));
 		    }
-#line 13774 "parse.c"
+#line 13262 "parse.c"
     break;
 
-  case 521: /* p_expr_basic: "[" p_args rbracket  */
+  case 521:
 #line 4581 "parse.y"
                     {
 			(yyval.node) = new_array_pattern(p, Qnone, Qnone, (yyvsp[-1].node), &(yyloc));
 		    }
-#line 13782 "parse.c"
+#line 13270 "parse.c"
     break;
 
-  case 522: /* p_expr_basic: "[" p_find rbracket  */
+  case 522:
 #line 4585 "parse.y"
                     {
 			(yyval.node) = new_find_pattern(p, Qnone, (yyvsp[-1].node), &(yyloc));
 		    }
-#line 13790 "parse.c"
+#line 13278 "parse.c"
     break;
 
-  case 523: /* p_expr_basic: "[" rbracket  */
+  case 523:
 #line 4589 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 0, 0, Qnone, &(yyloc));
 			(yyval.node) = new_array_pattern(p, Qnone, Qnone, (yyval.node), &(yyloc));
 		    }
-#line 13799 "parse.c"
+#line 13287 "parse.c"
     break;
 
-  case 524: /* @41: %empty  */
+  case 524:
 #line 4594 "parse.y"
                     {
 			(yyval.tbl) = push_pktbl(p);
 			(yyvsp[0].ctxt) = p->ctxt;
 			p->ctxt.in_kwarg = 0;
 		    }
-#line 13809 "parse.c"
+#line 13297 "parse.c"
     break;
 
-  case 525: /* p_expr_basic: "{" @41 p_kwargs rbrace  */
+  case 525:
 #line 4600 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
 			p->ctxt.in_kwarg = (yyvsp[-3].ctxt).in_kwarg;
 			(yyval.node) = new_hash_pattern(p, Qnone, (yyvsp[-1].node), &(yyloc));
 		    }
-#line 13819 "parse.c"
+#line 13307 "parse.c"
     break;
 
-  case 526: /* p_expr_basic: "{" rbrace  */
+  case 526:
 #line 4606 "parse.y"
                     {
 			(yyval.node) = new_hash_pattern_tail(p, Qnone, 0, &(yyloc));
 			(yyval.node) = new_hash_pattern(p, Qnone, (yyval.node), &(yyloc));
 		    }
-#line 13828 "parse.c"
+#line 13316 "parse.c"
     break;
 
-  case 527: /* @42: %empty  */
+  case 527:
 #line 4610 "parse.y"
                           {(yyval.tbl) = push_pktbl(p);}
-#line 13834 "parse.c"
+#line 13322 "parse.c"
     break;
 
-  case 528: /* p_expr_basic: "(" @42 p_expr rparen  */
+  case 528:
 #line 4611 "parse.y"
                     {
 			pop_pktbl(p, (yyvsp[-2].tbl));
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 13843 "parse.c"
+#line 13331 "parse.c"
     break;
 
-  case 529: /* p_args: p_expr  */
+  case 529:
 #line 4618 "parse.y"
                     {
 		    /*%%%*/
@@ -13857,18 +13345,18 @@ yyreduce:
 			$$ = new_array_pattern_tail(p, rb_ary_new_from_args(1, get_value($1)), 0, 0, Qnone, &@$);
 		    %*/
 		    }
-#line 13856 "parse.c"
+#line 13344 "parse.c"
     break;
 
-  case 530: /* p_args: p_args_head  */
+  case 530:
 #line 4627 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, (yyvsp[0].node), 1, 0, Qnone, &(yyloc));
 		    }
-#line 13864 "parse.c"
+#line 13352 "parse.c"
     break;
 
-  case 531: /* p_args: p_args_head p_arg  */
+  case 531:
 #line 4631 "parse.y"
                     {
 		    /*%%%*/
@@ -13878,34 +13366,34 @@ yyreduce:
 			$$ = new_array_pattern_tail(p, pre_args, 0, 0, Qnone, &@$);
 		    %*/
 		    }
-#line 13877 "parse.c"
+#line 13365 "parse.c"
     break;
 
-  case 532: /* p_args: p_args_head p_rest  */
+  case 532:
 #line 4640 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, (yyvsp[-1].node), 1, (yyvsp[0].id), Qnone, &(yyloc));
 		    }
-#line 13885 "parse.c"
+#line 13373 "parse.c"
     break;
 
-  case 533: /* p_args: p_args_head p_rest ',' p_args_post  */
+  case 533:
 #line 4644 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, (yyvsp[-3].node), 1, (yyvsp[-2].id), (yyvsp[0].node), &(yyloc));
 		    }
-#line 13893 "parse.c"
+#line 13381 "parse.c"
     break;
 
-  case 535: /* p_args_head: p_arg ','  */
+  case 535:
 #line 4651 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 13901 "parse.c"
+#line 13389 "parse.c"
     break;
 
-  case 536: /* p_args_head: p_args_head p_arg ','  */
+  case 536:
 #line 4655 "parse.y"
                     {
 		    /*%%%*/
@@ -13913,50 +13401,50 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_concat($1, get_value($2)) %*/
 		    }
-#line 13912 "parse.c"
+#line 13400 "parse.c"
     break;
 
-  case 537: /* p_args_tail: p_rest  */
+  case 537:
 #line 4664 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 1, (yyvsp[0].id), Qnone, &(yyloc));
 		    }
-#line 13920 "parse.c"
+#line 13408 "parse.c"
     break;
 
-  case 538: /* p_args_tail: p_rest ',' p_args_post  */
+  case 538:
 #line 4668 "parse.y"
                     {
 			(yyval.node) = new_array_pattern_tail(p, Qnone, 1, (yyvsp[-2].id), (yyvsp[0].node), &(yyloc));
 		    }
-#line 13928 "parse.c"
+#line 13416 "parse.c"
     break;
 
-  case 539: /* p_find: p_rest ',' p_args_post ',' p_rest  */
+  case 539:
 #line 4674 "parse.y"
                     {
 			(yyval.node) = new_find_pattern_tail(p, (yyvsp[-4].id), (yyvsp[-2].node), (yyvsp[0].id), &(yyloc));
 		    }
-#line 13936 "parse.c"
+#line 13424 "parse.c"
     break;
 
-  case 540: /* p_rest: "*" "local variable or method"  */
+  case 540:
 #line 4681 "parse.y"
                     {
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 13944 "parse.c"
+#line 13432 "parse.c"
     break;
 
-  case 541: /* p_rest: "*"  */
+  case 541:
 #line 4685 "parse.y"
                     {
 			(yyval.id) = 0;
 		    }
-#line 13952 "parse.c"
+#line 13440 "parse.c"
     break;
 
-  case 543: /* p_args_post: p_args_post ',' p_arg  */
+  case 543:
 #line 4692 "parse.y"
                     {
 		    /*%%%*/
@@ -13964,10 +13452,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_concat($1, get_value($3)) %*/
 		    }
-#line 13963 "parse.c"
+#line 13451 "parse.c"
     break;
 
-  case 544: /* p_arg: p_expr  */
+  case 544:
 #line 4701 "parse.y"
                     {
 		    /*%%%*/
@@ -13975,42 +13463,42 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new_from_args(1, get_value($1)) %*/
 		    }
-#line 13974 "parse.c"
+#line 13462 "parse.c"
     break;
 
-  case 545: /* p_kwargs: p_kwarg ',' p_any_kwrest  */
+  case 545:
 #line 4710 "parse.y"
                     {
 			(yyval.node) =  new_hash_pattern_tail(p, new_unique_key_hash(p, (yyvsp[-2].node), &(yyloc)), (yyvsp[0].id), &(yyloc));
 		    }
-#line 13982 "parse.c"
+#line 13470 "parse.c"
     break;
 
-  case 546: /* p_kwargs: p_kwarg  */
+  case 546:
 #line 4714 "parse.y"
                     {
 			(yyval.node) =  new_hash_pattern_tail(p, new_unique_key_hash(p, (yyvsp[0].node), &(yyloc)), 0, &(yyloc));
 		    }
-#line 13990 "parse.c"
+#line 13478 "parse.c"
     break;
 
-  case 547: /* p_kwargs: p_kwarg ','  */
+  case 547:
 #line 4718 "parse.y"
                     {
 			(yyval.node) =  new_hash_pattern_tail(p, new_unique_key_hash(p, (yyvsp[-1].node), &(yyloc)), 0, &(yyloc));
 		    }
-#line 13998 "parse.c"
+#line 13486 "parse.c"
     break;
 
-  case 548: /* p_kwargs: p_any_kwrest  */
+  case 548:
 #line 4722 "parse.y"
                     {
 			(yyval.node) =  new_hash_pattern_tail(p, new_hash(p, Qnone, &(yyloc)), (yyvsp[0].id), &(yyloc));
 		    }
-#line 14006 "parse.c"
+#line 13494 "parse.c"
     break;
 
-  case 550: /* p_kwarg: p_kwarg ',' p_kw  */
+  case 550:
 #line 4730 "parse.y"
                     {
 		    /*%%%*/
@@ -14018,10 +13506,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, $3) %*/
 		    }
-#line 14017 "parse.c"
+#line 13505 "parse.c"
     break;
 
-  case 551: /* p_kw: p_kw_label p_expr  */
+  case 551:
 #line 4739 "parse.y"
                     {
 			error_duplicate_pattern_key(p, get_id((yyvsp[-1].id)), &(yylsp[-1]));
@@ -14030,10 +13518,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new_from_args(2, get_value($1), get_value($2)) %*/
 		    }
-#line 14029 "parse.c"
+#line 13517 "parse.c"
     break;
 
-  case 552: /* p_kw: p_kw_label  */
+  case 552:
 #line 4747 "parse.y"
                     {
 			error_duplicate_pattern_key(p, get_id((yyvsp[0].id)), &(yylsp[0]));
@@ -14046,10 +13534,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new_from_args(2, get_value($1), Qnil) %*/
 		    }
-#line 14045 "parse.c"
+#line 13533 "parse.c"
     break;
 
-  case 554: /* p_kw_label: "string literal" string_contents tLABEL_END  */
+  case 554:
 #line 4762 "parse.y"
                     {
 			YYLTYPE loc = code_loc_gen(&(yylsp[-2]), &(yylsp[0]));
@@ -14071,40 +13559,40 @@ yyreduce:
 			    (yyval.id) = 0;
 			}
 		    }
-#line 14070 "parse.c"
+#line 13558 "parse.c"
     break;
 
-  case 555: /* p_kwrest: kwrest_mark "local variable or method"  */
+  case 555:
 #line 4785 "parse.y"
                     {
 		        (yyval.id) = (yyvsp[0].id);
 		    }
-#line 14078 "parse.c"
+#line 13566 "parse.c"
     break;
 
-  case 556: /* p_kwrest: kwrest_mark  */
+  case 556:
 #line 4789 "parse.y"
                     {
 		        (yyval.id) = 0;
 		    }
-#line 14086 "parse.c"
+#line 13574 "parse.c"
     break;
 
-  case 557: /* p_kwnorest: kwrest_mark "`nil'"  */
+  case 557:
 #line 4795 "parse.y"
                     {
 		        (yyval.id) = 0;
 		    }
-#line 14094 "parse.c"
+#line 13582 "parse.c"
     break;
 
-  case 559: /* p_any_kwrest: p_kwnorest  */
+  case 559:
 #line 4801 "parse.y"
                              {(yyval.id) = ID2VAL(idNil);}
-#line 14100 "parse.c"
+#line 13588 "parse.c"
     break;
 
-  case 561: /* p_value: p_primitive ".." p_primitive  */
+  case 561:
 #line 4806 "parse.y"
                     {
 		    /*%%%*/
@@ -14114,10 +13602,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!($1, $3) %*/
 		    }
-#line 14113 "parse.c"
+#line 13601 "parse.c"
     break;
 
-  case 562: /* p_value: p_primitive "..." p_primitive  */
+  case 562:
 #line 4815 "parse.y"
                     {
 		    /*%%%*/
@@ -14127,10 +13615,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!($1, $3) %*/
 		    }
-#line 14126 "parse.c"
+#line 13614 "parse.c"
     break;
 
-  case 563: /* p_value: p_primitive ".."  */
+  case 563:
 #line 4824 "parse.y"
                     {
 		    /*%%%*/
@@ -14139,10 +13627,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!($1, Qnil) %*/
 		    }
-#line 14138 "parse.c"
+#line 13626 "parse.c"
     break;
 
-  case 564: /* p_value: p_primitive "..."  */
+  case 564:
 #line 4832 "parse.y"
                     {
 		    /*%%%*/
@@ -14151,10 +13639,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!($1, Qnil) %*/
 		    }
-#line 14150 "parse.c"
+#line 13638 "parse.c"
     break;
 
-  case 568: /* p_value: "(.." p_primitive  */
+  case 568:
 #line 4843 "parse.y"
                     {
 		    /*%%%*/
@@ -14163,10 +13651,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot2!(Qnil, $2) %*/
 		    }
-#line 14162 "parse.c"
+#line 13650 "parse.c"
     break;
 
-  case 569: /* p_value: "(..." p_primitive  */
+  case 569:
 #line 4851 "parse.y"
                     {
 		    /*%%%*/
@@ -14175,10 +13663,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dot3!(Qnil, $2) %*/
 		    }
-#line 14174 "parse.c"
+#line 13662 "parse.c"
     break;
 
-  case 578: /* p_primitive: keyword_variable  */
+  case 578:
 #line 4869 "parse.y"
                     {
 		    /*%%%*/
@@ -14186,10 +13674,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		    }
-#line 14185 "parse.c"
+#line 13673 "parse.c"
     break;
 
-  case 580: /* p_variable: "local variable or method"  */
+  case 580:
 #line 4879 "parse.y"
                     {
 		    /*%%%*/
@@ -14198,10 +13686,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 14197 "parse.c"
+#line 13685 "parse.c"
     break;
 
-  case 581: /* p_var_ref: '^' "local variable or method"  */
+  case 581:
 #line 4889 "parse.y"
                     {
 		    /*%%%*/
@@ -14213,10 +13701,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($2) %*/
 		    }
-#line 14212 "parse.c"
+#line 13700 "parse.c"
     break;
 
-  case 582: /* p_var_ref: '^' nonlocal_var  */
+  case 582:
 #line 4900 "parse.y"
                     {
 		    /*%%%*/
@@ -14224,10 +13712,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($2) %*/
                     }
-#line 14223 "parse.c"
+#line 13711 "parse.c"
     break;
 
-  case 583: /* p_expr_ref: '^' "(" expr_value rparen  */
+  case 583:
 #line 4909 "parse.y"
                     {
 		    /*%%%*/
@@ -14235,10 +13723,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: begin!($3) %*/
 		    }
-#line 14234 "parse.c"
+#line 13722 "parse.c"
     break;
 
-  case 584: /* p_const: ":: at EXPR_BEG" cname  */
+  case 584:
 #line 4918 "parse.y"
                     {
 		    /*%%%*/
@@ -14246,10 +13734,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: top_const_ref!($2) %*/
 		    }
-#line 14245 "parse.c"
+#line 13733 "parse.c"
     break;
 
-  case 585: /* p_const: p_const "::" cname  */
+  case 585:
 #line 4925 "parse.y"
                     {
 		    /*%%%*/
@@ -14257,10 +13745,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: const_path_ref!($1, $3) %*/
 		    }
-#line 14256 "parse.c"
+#line 13744 "parse.c"
     break;
 
-  case 586: /* p_const: "constant"  */
+  case 586:
 #line 4932 "parse.y"
                    {
 		    /*%%%*/
@@ -14268,10 +13756,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		   }
-#line 14267 "parse.c"
+#line 13755 "parse.c"
     break;
 
-  case 587: /* opt_rescue: k_rescue exc_list exc_var then compstmt opt_rescue  */
+  case 587:
 #line 4943 "parse.y"
                     {
 		    /*%%%*/
@@ -14291,10 +13779,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rescue!(escape_Qundef($2), escape_Qundef($3), escape_Qundef($5), escape_Qundef($6)) %*/
 		    }
-#line 14290 "parse.c"
+#line 13778 "parse.c"
     break;
 
-  case 589: /* exc_list: arg_value  */
+  case 589:
 #line 4965 "parse.y"
                     {
 		    /*%%%*/
@@ -14302,10 +13790,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 14301 "parse.c"
+#line 13789 "parse.c"
     break;
 
-  case 590: /* exc_list: mrhs  */
+  case 590:
 #line 4972 "parse.y"
                     {
 		    /*%%%*/
@@ -14313,18 +13801,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $1 %*/
 		    }
-#line 14312 "parse.c"
+#line 13800 "parse.c"
     break;
 
-  case 592: /* exc_var: "=>" lhs  */
+  case 592:
 #line 4982 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 14320 "parse.c"
+#line 13808 "parse.c"
     break;
 
-  case 594: /* opt_ensure: k_ensure compstmt  */
+  case 594:
 #line 4989 "parse.y"
                     {
 		    /*%%%*/
@@ -14332,10 +13820,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: ensure!($2) %*/
 		    }
-#line 14331 "parse.c"
+#line 13819 "parse.c"
     break;
 
-  case 598: /* strings: string  */
+  case 598:
 #line 5003 "parse.y"
                     {
 		    /*%%%*/
@@ -14351,10 +13839,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: $1 %*/
 		    }
-#line 14350 "parse.c"
+#line 13838 "parse.c"
     break;
 
-  case 601: /* string: string string1  */
+  case 601:
 #line 5022 "parse.y"
                     {
 		    /*%%%*/
@@ -14362,10 +13850,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: string_concat!($1, $2) %*/
 		    }
-#line 14361 "parse.c"
+#line 13849 "parse.c"
     break;
 
-  case 602: /* string1: "string literal" string_contents "terminator"  */
+  case 602:
 #line 5031 "parse.y"
                     {
 		    /*%%%*/
@@ -14374,10 +13862,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: string_literal!(heredoc_dedent(p, $2)) %*/
 		    }
-#line 14373 "parse.c"
+#line 13861 "parse.c"
     break;
 
-  case 603: /* xstring: "backtick literal" xstring_contents "terminator"  */
+  case 603:
 #line 5041 "parse.y"
                     {
 		    /*%%%*/
@@ -14385,18 +13873,18 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: xstring_literal!(heredoc_dedent(p, $2)) %*/
 		    }
-#line 14384 "parse.c"
+#line 13872 "parse.c"
     break;
 
-  case 604: /* regexp: "regexp literal" regexp_contents tREGEXP_END  */
+  case 604:
 #line 5050 "parse.y"
                     {
 			(yyval.node) = new_regexp(p, (yyvsp[-1].node), (yyvsp[0].num), &(yyloc));
 		    }
-#line 14392 "parse.c"
+#line 13880 "parse.c"
     break;
 
-  case 605: /* words: "word list" ' ' word_list "terminator"  */
+  case 605:
 #line 5056 "parse.y"
                     {
 		    /*%%%*/
@@ -14404,10 +13892,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: array!($3) %*/
 		    }
-#line 14403 "parse.c"
+#line 13891 "parse.c"
     break;
 
-  case 606: /* word_list: %empty  */
+  case 606:
 #line 5065 "parse.y"
                     {
 		    /*%%%*/
@@ -14415,10 +13903,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: words_new! %*/
 		    }
-#line 14414 "parse.c"
+#line 13902 "parse.c"
     break;
 
-  case 607: /* word_list: word_list word ' '  */
+  case 607:
 #line 5072 "parse.y"
                     {
 		    /*%%%*/
@@ -14426,10 +13914,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: words_add!($1, $2) %*/
 		    }
-#line 14425 "parse.c"
+#line 13913 "parse.c"
     break;
 
-  case 609: /* word: word string_content  */
+  case 609:
 #line 5083 "parse.y"
                     {
 		    /*%%%*/
@@ -14437,10 +13925,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: word_add!($1, $2) %*/
 		    }
-#line 14436 "parse.c"
+#line 13924 "parse.c"
     break;
 
-  case 610: /* symbols: "symbol list" ' ' symbol_list "terminator"  */
+  case 610:
 #line 5092 "parse.y"
                     {
 		    /*%%%*/
@@ -14448,10 +13936,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: array!($3) %*/
 		    }
-#line 14447 "parse.c"
+#line 13935 "parse.c"
     break;
 
-  case 611: /* symbol_list: %empty  */
+  case 611:
 #line 5101 "parse.y"
                     {
 		    /*%%%*/
@@ -14459,10 +13947,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: symbols_new! %*/
 		    }
-#line 14458 "parse.c"
+#line 13946 "parse.c"
     break;
 
-  case 612: /* symbol_list: symbol_list word ' '  */
+  case 612:
 #line 5108 "parse.y"
                     {
 		    /*%%%*/
@@ -14470,10 +13958,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: symbols_add!($1, $2) %*/
 		    }
-#line 14469 "parse.c"
+#line 13957 "parse.c"
     break;
 
-  case 613: /* qwords: "verbatim word list" ' ' qword_list "terminator"  */
+  case 613:
 #line 5117 "parse.y"
                     {
 		    /*%%%*/
@@ -14481,10 +13969,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: array!($3) %*/
 		    }
-#line 14480 "parse.c"
+#line 13968 "parse.c"
     break;
 
-  case 614: /* qsymbols: "verbatim symbol list" ' ' qsym_list "terminator"  */
+  case 614:
 #line 5126 "parse.y"
                     {
 		    /*%%%*/
@@ -14492,10 +13980,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: array!($3) %*/
 		    }
-#line 14491 "parse.c"
+#line 13979 "parse.c"
     break;
 
-  case 615: /* qword_list: %empty  */
+  case 615:
 #line 5135 "parse.y"
                     {
 		    /*%%%*/
@@ -14503,10 +13991,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: qwords_new! %*/
 		    }
-#line 14502 "parse.c"
+#line 13990 "parse.c"
     break;
 
-  case 616: /* qword_list: qword_list "literal content" ' '  */
+  case 616:
 #line 5142 "parse.y"
                     {
 		    /*%%%*/
@@ -14514,10 +14002,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: qwords_add!($1, $2) %*/
 		    }
-#line 14513 "parse.c"
+#line 14001 "parse.c"
     break;
 
-  case 617: /* qsym_list: %empty  */
+  case 617:
 #line 5151 "parse.y"
                     {
 		    /*%%%*/
@@ -14525,10 +14013,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: qsymbols_new! %*/
 		    }
-#line 14524 "parse.c"
+#line 14012 "parse.c"
     break;
 
-  case 618: /* qsym_list: qsym_list "literal content" ' '  */
+  case 618:
 #line 5158 "parse.y"
                     {
 		    /*%%%*/
@@ -14536,10 +14024,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: qsymbols_add!($1, $2) %*/
 		    }
-#line 14535 "parse.c"
+#line 14023 "parse.c"
     break;
 
-  case 619: /* string_contents: %empty  */
+  case 619:
 #line 5167 "parse.y"
                     {
 		    /*%%%*/
@@ -14551,10 +14039,10 @@ yyreduce:
 			$$ = ripper_new_yylval(p, 0, $$, 0);
 		    %*/
 		    }
-#line 14550 "parse.c"
+#line 14038 "parse.c"
     break;
 
-  case 620: /* string_contents: string_contents string_content  */
+  case 620:
 #line 5178 "parse.y"
                     {
 		    /*%%%*/
@@ -14571,10 +14059,10 @@ yyreduce:
 			}
 		    %*/
 		    }
-#line 14570 "parse.c"
+#line 14058 "parse.c"
     break;
 
-  case 621: /* xstring_contents: %empty  */
+  case 621:
 #line 5196 "parse.y"
                     {
 		    /*%%%*/
@@ -14582,10 +14070,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: xstring_new! %*/
 		    }
-#line 14581 "parse.c"
+#line 14069 "parse.c"
     break;
 
-  case 622: /* xstring_contents: xstring_contents string_content  */
+  case 622:
 #line 5203 "parse.y"
                     {
 		    /*%%%*/
@@ -14593,10 +14081,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: xstring_add!($1, $2) %*/
 		    }
-#line 14592 "parse.c"
+#line 14080 "parse.c"
     break;
 
-  case 623: /* regexp_contents: %empty  */
+  case 623:
 #line 5212 "parse.y"
                     {
 		    /*%%%*/
@@ -14608,10 +14096,10 @@ yyreduce:
 			$$ = ripper_new_yylval(p, 0, $$, 0);
 		    %*/
 		    }
-#line 14607 "parse.c"
+#line 14095 "parse.c"
     break;
 
-  case 624: /* regexp_contents: regexp_contents string_content  */
+  case 624:
 #line 5223 "parse.y"
                     {
 		    /*%%%*/
@@ -14651,10 +14139,10 @@ yyreduce:
 			}
 		    %*/
 		    }
-#line 14650 "parse.c"
+#line 14138 "parse.c"
     break;
 
-  case 626: /* @43: %empty  */
+  case 626:
 #line 5266 "parse.y"
                     {
 			/* need to backup p->lex.strterm so that a string literal `%&foo,#$&,bar&` can be parsed */
@@ -14662,10 +14150,10 @@ yyreduce:
 			p->lex.strterm = 0;
 			SET_LEX_STATE(EXPR_BEG);
 		    }
-#line 14661 "parse.c"
+#line 14149 "parse.c"
     break;
 
-  case 627: /* string_content: tSTRING_DVAR @43 string_dvar  */
+  case 627:
 #line 5273 "parse.y"
                     {
 			p->lex.strterm = (yyvsp[-1].strterm);
@@ -14675,56 +14163,56 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: string_dvar!($3) %*/
 		    }
-#line 14674 "parse.c"
+#line 14162 "parse.c"
     break;
 
-  case 628: /* $@44: %empty  */
+  case 628:
 #line 5282 "parse.y"
                     {
 			CMDARG_PUSH(0);
 			COND_PUSH(0);
 		    }
-#line 14683 "parse.c"
+#line 14171 "parse.c"
     break;
 
-  case 629: /* @45: %empty  */
+  case 629:
 #line 5286 "parse.y"
                     {
 			/* need to backup p->lex.strterm so that a string literal `%!foo,#{ !0 },bar!` can be parsed */
 			(yyval.strterm) = p->lex.strterm;
 			p->lex.strterm = 0;
 		    }
-#line 14693 "parse.c"
+#line 14181 "parse.c"
     break;
 
-  case 630: /* @46: %empty  */
+  case 630:
 #line 5291 "parse.y"
                     {
 			(yyval.num) = p->lex.state;
 			SET_LEX_STATE(EXPR_BEG);
 		    }
-#line 14702 "parse.c"
+#line 14190 "parse.c"
     break;
 
-  case 631: /* @47: %empty  */
+  case 631:
 #line 5295 "parse.y"
                     {
 			(yyval.num) = p->lex.brace_nest;
 			p->lex.brace_nest = 0;
 		    }
-#line 14711 "parse.c"
+#line 14199 "parse.c"
     break;
 
-  case 632: /* @48: %empty  */
+  case 632:
 #line 5299 "parse.y"
                     {
 			(yyval.num) = p->heredoc_indent;
 			p->heredoc_indent = 0;
 		    }
-#line 14720 "parse.c"
+#line 14208 "parse.c"
     break;
 
-  case 633: /* string_content: tSTRING_DBEG $@44 @45 @46 @47 @48 compstmt "'}'"  */
+  case 633:
 #line 5304 "parse.y"
                     {
 			COND_POP();
@@ -14740,10 +14228,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: string_embexpr!($7) %*/
 		    }
-#line 14739 "parse.c"
+#line 14227 "parse.c"
     break;
 
-  case 634: /* string_dvar: "global variable"  */
+  case 634:
 #line 5321 "parse.y"
                     {
 		    /*%%%*/
@@ -14751,10 +14239,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		    }
-#line 14750 "parse.c"
+#line 14238 "parse.c"
     break;
 
-  case 635: /* string_dvar: "instance variable"  */
+  case 635:
 #line 5328 "parse.y"
                     {
 		    /*%%%*/
@@ -14762,10 +14250,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		    }
-#line 14761 "parse.c"
+#line 14249 "parse.c"
     break;
 
-  case 636: /* string_dvar: "class variable"  */
+  case 636:
 #line 5335 "parse.y"
                     {
 		    /*%%%*/
@@ -14773,10 +14261,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		    }
-#line 14772 "parse.c"
+#line 14260 "parse.c"
     break;
 
-  case 640: /* ssym: "symbol literal" sym  */
+  case 640:
 #line 5349 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_END);
@@ -14785,10 +14273,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: symbol_literal!(symbol!($2)) %*/
 		    }
-#line 14784 "parse.c"
+#line 14272 "parse.c"
     break;
 
-  case 643: /* dsym: "symbol literal" string_contents "terminator"  */
+  case 643:
 #line 5363 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_END);
@@ -14797,10 +14285,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: dyna_symbol!($2) %*/
 		    }
-#line 14796 "parse.c"
+#line 14284 "parse.c"
     break;
 
-  case 645: /* numeric: tUMINUS_NUM simple_numeric  */
+  case 645:
 #line 5374 "parse.y"
                     {
 		    /*%%%*/
@@ -14809,52 +14297,52 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: unary!(ID2VAL(idUMinus), $2) %*/
 		    }
-#line 14808 "parse.c"
+#line 14296 "parse.c"
     break;
 
-  case 656: /* keyword_variable: "`nil'"  */
+  case 656:
 #line 5399 "parse.y"
                               {(yyval.id) = KWD2EID(nil, (yyvsp[0].id));}
-#line 14814 "parse.c"
+#line 14302 "parse.c"
     break;
 
-  case 657: /* keyword_variable: "`self'"  */
+  case 657:
 #line 5400 "parse.y"
                                {(yyval.id) = KWD2EID(self, (yyvsp[0].id));}
-#line 14820 "parse.c"
+#line 14308 "parse.c"
     break;
 
-  case 658: /* keyword_variable: "`true'"  */
+  case 658:
 #line 5401 "parse.y"
                                {(yyval.id) = KWD2EID(true, (yyvsp[0].id));}
-#line 14826 "parse.c"
+#line 14314 "parse.c"
     break;
 
-  case 659: /* keyword_variable: "`false'"  */
+  case 659:
 #line 5402 "parse.y"
                                 {(yyval.id) = KWD2EID(false, (yyvsp[0].id));}
-#line 14832 "parse.c"
+#line 14320 "parse.c"
     break;
 
-  case 660: /* keyword_variable: "`__FILE__'"  */
+  case 660:
 #line 5403 "parse.y"
                                   {(yyval.id) = KWD2EID(_FILE__, (yyvsp[0].id));}
-#line 14838 "parse.c"
+#line 14326 "parse.c"
     break;
 
-  case 661: /* keyword_variable: "`__LINE__'"  */
+  case 661:
 #line 5404 "parse.y"
                                   {(yyval.id) = KWD2EID(_LINE__, (yyvsp[0].id));}
-#line 14844 "parse.c"
+#line 14332 "parse.c"
     break;
 
-  case 662: /* keyword_variable: "`__ENCODING__'"  */
+  case 662:
 #line 5405 "parse.y"
                                       {(yyval.id) = KWD2EID(_ENCODING__, (yyvsp[0].id));}
-#line 14850 "parse.c"
+#line 14338 "parse.c"
     break;
 
-  case 663: /* var_ref: user_variable  */
+  case 663:
 #line 5409 "parse.y"
                     {
 		    /*%%%*/
@@ -14868,10 +14356,10 @@ yyreduce:
 			}
 		    %*/
 		    }
-#line 14867 "parse.c"
+#line 14355 "parse.c"
     break;
 
-  case 664: /* var_ref: keyword_variable  */
+  case 664:
 #line 5422 "parse.y"
                     {
 		    /*%%%*/
@@ -14879,10 +14367,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: var_ref!($1) %*/
 		    }
-#line 14878 "parse.c"
+#line 14366 "parse.c"
     break;
 
-  case 665: /* var_lhs: user_variable  */
+  case 665:
 #line 5431 "parse.y"
                     {
 		    /*%%%*/
@@ -14890,10 +14378,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 14889 "parse.c"
+#line 14377 "parse.c"
     break;
 
-  case 666: /* var_lhs: keyword_variable  */
+  case 666:
 #line 5438 "parse.y"
                     {
 		    /*%%%*/
@@ -14901,27 +14389,27 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assignable(p, var_field(p, $1)) %*/
 		    }
-#line 14900 "parse.c"
+#line 14388 "parse.c"
     break;
 
-  case 669: /* $@49: %empty  */
+  case 669:
 #line 5451 "parse.y"
                     {
 			SET_LEX_STATE(EXPR_BEG);
 			p->command_start = TRUE;
 		    }
-#line 14909 "parse.c"
+#line 14397 "parse.c"
     break;
 
-  case 670: /* superclass: '<' $@49 expr_value term  */
+  case 670:
 #line 5456 "parse.y"
                     {
 			(yyval.node) = (yyvsp[-1].node);
 		    }
-#line 14917 "parse.c"
+#line 14405 "parse.c"
     break;
 
-  case 671: /* superclass: %empty  */
+  case 671:
 #line 5460 "parse.y"
                     {
 		    /*%%%*/
@@ -14929,20 +14417,20 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: Qnil %*/
 		    }
-#line 14928 "parse.c"
+#line 14416 "parse.c"
     break;
 
-  case 673: /* f_opt_paren_args: none  */
+  case 673:
 #line 5470 "parse.y"
                     {
 			p->ctxt.in_argdef = 0;
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, Qnone, &(yylsp[-1]));
 			(yyval.node) = new_args(p, Qnone, Qnone, Qnone, Qnone, (yyval.node), &(yylsp[-1]));
 		    }
-#line 14938 "parse.c"
+#line 14426 "parse.c"
     break;
 
-  case 674: /* f_paren_args: '(' f_args rparen  */
+  case 674:
 #line 5478 "parse.y"
                     {
 		    /*%%%*/
@@ -14953,10 +14441,10 @@ yyreduce:
 			p->command_start = TRUE;
 			p->ctxt.in_argdef = 0;
 		    }
-#line 14952 "parse.c"
+#line 14440 "parse.c"
     break;
 
-  case 676: /* @50: %empty  */
+  case 676:
 #line 5490 "parse.y"
                     {
 			(yyval.ctxt) = p->ctxt;
@@ -14964,10 +14452,10 @@ yyreduce:
 			p->ctxt.in_argdef = 1;
 			SET_LEX_STATE(p->lex.state|EXPR_LABEL); /* force for args */
 		    }
-#line 14963 "parse.c"
+#line 14451 "parse.c"
     break;
 
-  case 677: /* f_arglist: @50 f_args term  */
+  case 677:
 #line 5497 "parse.y"
                     {
 			p->ctxt.in_kwarg = (yyvsp[-2].ctxt).in_kwarg;
@@ -14976,42 +14464,42 @@ yyreduce:
 			SET_LEX_STATE(EXPR_BEG);
 			p->command_start = TRUE;
 		    }
-#line 14975 "parse.c"
+#line 14463 "parse.c"
     break;
 
-  case 678: /* args_tail: f_kwarg ',' f_kwrest opt_f_block_arg  */
+  case 678:
 #line 5507 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, (yyvsp[-3].node), (yyvsp[-1].id), (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 14983 "parse.c"
+#line 14471 "parse.c"
     break;
 
-  case 679: /* args_tail: f_kwarg opt_f_block_arg  */
+  case 679:
 #line 5511 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, (yyvsp[-1].node), Qnone, (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 14991 "parse.c"
+#line 14479 "parse.c"
     break;
 
-  case 680: /* args_tail: f_any_kwrest opt_f_block_arg  */
+  case 680:
 #line 5515 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, (yyvsp[-1].id), (yyvsp[0].id), &(yylsp[-1]));
 		    }
-#line 14999 "parse.c"
+#line 14487 "parse.c"
     break;
 
-  case 681: /* args_tail: f_block_arg  */
+  case 681:
 #line 5519 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, (yyvsp[0].id), &(yylsp[0]));
 		    }
-#line 15007 "parse.c"
+#line 14495 "parse.c"
     break;
 
-  case 682: /* args_tail: args_forward  */
+  case 682:
 #line 5523 "parse.y"
                     {
 			add_forwarding_args(p);
@@ -15020,147 +14508,147 @@ yyreduce:
 			((yyval.node)->nd_ainfo)->forwarding = 1;
 		    /*% %*/
 		    }
-#line 15019 "parse.c"
+#line 14507 "parse.c"
     break;
 
-  case 683: /* opt_args_tail: ',' args_tail  */
+  case 683:
 #line 5533 "parse.y"
                     {
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 15027 "parse.c"
+#line 14515 "parse.c"
     break;
 
-  case 684: /* opt_args_tail: %empty  */
+  case 684:
 #line 5537 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, Qnone, &(yylsp[0]));
 		    }
-#line 15035 "parse.c"
+#line 14523 "parse.c"
     break;
 
-  case 685: /* f_args: f_arg ',' f_optarg ',' f_rest_arg opt_args_tail  */
+  case 685:
 #line 5543 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), (yyvsp[-3].node), (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15043 "parse.c"
+#line 14531 "parse.c"
     break;
 
-  case 686: /* f_args: f_arg ',' f_optarg ',' f_rest_arg ',' f_arg opt_args_tail  */
+  case 686:
 #line 5547 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-7].node), (yyvsp[-5].node), (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15051 "parse.c"
+#line 14539 "parse.c"
     break;
 
-  case 687: /* f_args: f_arg ',' f_optarg opt_args_tail  */
+  case 687:
 #line 5551 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-3].node), (yyvsp[-1].node), Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15059 "parse.c"
+#line 14547 "parse.c"
     break;
 
-  case 688: /* f_args: f_arg ',' f_optarg ',' f_arg opt_args_tail  */
+  case 688:
 #line 5555 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), (yyvsp[-3].node), Qnone, (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15067 "parse.c"
+#line 14555 "parse.c"
     break;
 
-  case 689: /* f_args: f_arg ',' f_rest_arg opt_args_tail  */
+  case 689:
 #line 5559 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-3].node), Qnone, (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15075 "parse.c"
+#line 14563 "parse.c"
     break;
 
-  case 690: /* f_args: f_arg ',' f_rest_arg ',' f_arg opt_args_tail  */
+  case 690:
 #line 5563 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-5].node), Qnone, (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15083 "parse.c"
+#line 14571 "parse.c"
     break;
 
-  case 691: /* f_args: f_arg opt_args_tail  */
+  case 691:
 #line 5567 "parse.y"
                     {
 			(yyval.node) = new_args(p, (yyvsp[-1].node), Qnone, Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15091 "parse.c"
+#line 14579 "parse.c"
     break;
 
-  case 692: /* f_args: f_optarg ',' f_rest_arg opt_args_tail  */
+  case 692:
 #line 5571 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-3].node), (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15099 "parse.c"
+#line 14587 "parse.c"
     break;
 
-  case 693: /* f_args: f_optarg ',' f_rest_arg ',' f_arg opt_args_tail  */
+  case 693:
 #line 5575 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-5].node), (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15107 "parse.c"
+#line 14595 "parse.c"
     break;
 
-  case 694: /* f_args: f_optarg opt_args_tail  */
+  case 694:
 #line 5579 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-1].node), Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15115 "parse.c"
+#line 14603 "parse.c"
     break;
 
-  case 695: /* f_args: f_optarg ',' f_arg opt_args_tail  */
+  case 695:
 #line 5583 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, (yyvsp[-3].node), Qnone, (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15123 "parse.c"
+#line 14611 "parse.c"
     break;
 
-  case 696: /* f_args: f_rest_arg opt_args_tail  */
+  case 696:
 #line 5587 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, (yyvsp[-1].id), Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15131 "parse.c"
+#line 14619 "parse.c"
     break;
 
-  case 697: /* f_args: f_rest_arg ',' f_arg opt_args_tail  */
+  case 697:
 #line 5591 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, (yyvsp[-3].id), (yyvsp[-1].node), (yyvsp[0].node), &(yyloc));
 		    }
-#line 15139 "parse.c"
+#line 14627 "parse.c"
     break;
 
-  case 698: /* f_args: args_tail  */
+  case 698:
 #line 5595 "parse.y"
                     {
 			(yyval.node) = new_args(p, Qnone, Qnone, Qnone, Qnone, (yyvsp[0].node), &(yyloc));
 		    }
-#line 15147 "parse.c"
+#line 14635 "parse.c"
     break;
 
-  case 699: /* f_args: %empty  */
+  case 699:
 #line 5599 "parse.y"
                     {
 			(yyval.node) = new_args_tail(p, Qnone, Qnone, Qnone, &(yylsp[0]));
 			(yyval.node) = new_args(p, Qnone, Qnone, Qnone, Qnone, (yyval.node), &(yylsp[0]));
 		    }
-#line 15156 "parse.c"
+#line 14644 "parse.c"
     break;
 
-  case 700: /* args_forward: "(..."  */
+  case 700:
 #line 5606 "parse.y"
                     {
 		    /*%%%*/
@@ -15172,10 +14660,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: args_forward! %*/
 		    }
-#line 15171 "parse.c"
+#line 14659 "parse.c"
     break;
 
-  case 701: /* f_bad_arg: "constant"  */
+  case 701:
 #line 5619 "parse.y"
                     {
 			static const char mesg[] = "formal argument cannot be a constant";
@@ -15185,10 +14673,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: param_error!(ERR_MESG(), $1) %*/
 		    }
-#line 15184 "parse.c"
+#line 14672 "parse.c"
     break;
 
-  case 702: /* f_bad_arg: "instance variable"  */
+  case 702:
 #line 5628 "parse.y"
                     {
 			static const char mesg[] = "formal argument cannot be an instance variable";
@@ -15198,10 +14686,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: param_error!(ERR_MESG(), $1) %*/
 		    }
-#line 15197 "parse.c"
+#line 14685 "parse.c"
     break;
 
-  case 703: /* f_bad_arg: "global variable"  */
+  case 703:
 #line 5637 "parse.y"
                     {
 			static const char mesg[] = "formal argument cannot be a global variable";
@@ -15211,10 +14699,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: param_error!(ERR_MESG(), $1) %*/
 		    }
-#line 15210 "parse.c"
+#line 14698 "parse.c"
     break;
 
-  case 704: /* f_bad_arg: "class variable"  */
+  case 704:
 #line 5646 "parse.y"
                     {
 			static const char mesg[] = "formal argument cannot be a class variable";
@@ -15224,20 +14712,20 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper[error]: param_error!(ERR_MESG(), $1) %*/
 		    }
-#line 15223 "parse.c"
+#line 14711 "parse.c"
     break;
 
-  case 706: /* f_norm_arg: "local variable or method"  */
+  case 706:
 #line 5658 "parse.y"
                     {
 			formal_argument(p, (yyvsp[0].id));
 			p->max_numparam = ORDINAL_PARAM;
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 15233 "parse.c"
+#line 14721 "parse.c"
     break;
 
-  case 707: /* f_arg_asgn: f_norm_arg  */
+  case 707:
 #line 5666 "parse.y"
                     {
 			ID id = get_id((yyvsp[0].id));
@@ -15245,10 +14733,10 @@ yyreduce:
 			p->cur_arg = id;
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 15244 "parse.c"
+#line 14732 "parse.c"
     break;
 
-  case 708: /* f_arg_item: f_arg_asgn  */
+  case 708:
 #line 5675 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -15257,10 +14745,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: get_value($1) %*/
 		    }
-#line 15256 "parse.c"
+#line 14744 "parse.c"
     break;
 
-  case 709: /* f_arg_item: "(" f_margs rparen  */
+  case 709:
 #line 5683 "parse.y"
                     {
 		    /*%%%*/
@@ -15280,10 +14768,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: mlhs_paren!($2) %*/
 		    }
-#line 15279 "parse.c"
+#line 14767 "parse.c"
     break;
 
-  case 711: /* f_arg: f_arg ',' f_arg_item  */
+  case 711:
 #line 5706 "parse.y"
                     {
 		    /*%%%*/
@@ -15294,10 +14782,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15293 "parse.c"
+#line 14781 "parse.c"
     break;
 
-  case 712: /* f_label: "label"  */
+  case 712:
 #line 5719 "parse.y"
                     {
 			arg_var(p, formal_argument(p, (yyvsp[0].id)));
@@ -15306,10 +14794,10 @@ yyreduce:
 			p->ctxt.in_argdef = 0;
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 15305 "parse.c"
+#line 14793 "parse.c"
     break;
 
-  case 713: /* f_kw: f_label arg_value  */
+  case 713:
 #line 5729 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -15319,10 +14807,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), get_value($2)) %*/
 		    }
-#line 15318 "parse.c"
+#line 14806 "parse.c"
     break;
 
-  case 714: /* f_kw: f_label  */
+  case 714:
 #line 5738 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -15332,10 +14820,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), 0) %*/
 		    }
-#line 15331 "parse.c"
+#line 14819 "parse.c"
     break;
 
-  case 715: /* f_block_kw: f_label primary_value  */
+  case 715:
 #line 5749 "parse.y"
                     {
 			p->ctxt.in_argdef = 1;
@@ -15344,10 +14832,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), get_value($2)) %*/
 		    }
-#line 15343 "parse.c"
+#line 14831 "parse.c"
     break;
 
-  case 716: /* f_block_kw: f_label  */
+  case 716:
 #line 5757 "parse.y"
                     {
 			p->ctxt.in_argdef = 1;
@@ -15356,10 +14844,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), 0) %*/
 		    }
-#line 15355 "parse.c"
+#line 14843 "parse.c"
     break;
 
-  case 717: /* f_block_kwarg: f_block_kw  */
+  case 717:
 #line 5767 "parse.y"
                     {
 		    /*%%%*/
@@ -15367,10 +14855,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 15366 "parse.c"
+#line 14854 "parse.c"
     break;
 
-  case 718: /* f_block_kwarg: f_block_kwarg ',' f_block_kw  */
+  case 718:
 #line 5774 "parse.y"
                     {
 		    /*%%%*/
@@ -15378,10 +14866,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15377 "parse.c"
+#line 14865 "parse.c"
     break;
 
-  case 719: /* f_kwarg: f_kw  */
+  case 719:
 #line 5784 "parse.y"
                     {
 		    /*%%%*/
@@ -15389,10 +14877,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 15388 "parse.c"
+#line 14876 "parse.c"
     break;
 
-  case 720: /* f_kwarg: f_kwarg ',' f_kw  */
+  case 720:
 #line 5791 "parse.y"
                     {
 		    /*%%%*/
@@ -15400,20 +14888,20 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15399 "parse.c"
+#line 14887 "parse.c"
     break;
 
-  case 723: /* f_no_kwarg: p_kwnorest  */
+  case 723:
 #line 5804 "parse.y"
                     {
 		    /*%%%*/
 		    /*% %*/
 		    /*% ripper: nokw_param!(Qnil) %*/
 		    }
-#line 15409 "parse.c"
+#line 14897 "parse.c"
     break;
 
-  case 724: /* f_kwrest: kwrest_mark "local variable or method"  */
+  case 724:
 #line 5812 "parse.y"
                     {
 			arg_var(p, shadowing_lvar(p, get_id((yyvsp[0].id))));
@@ -15422,10 +14910,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: kwrest_param!($2) %*/
 		    }
-#line 15421 "parse.c"
+#line 14909 "parse.c"
     break;
 
-  case 725: /* f_kwrest: kwrest_mark  */
+  case 725:
 #line 5820 "parse.y"
                     {
 			arg_var(p, idFWD_KWREST);
@@ -15434,10 +14922,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: kwrest_param!(Qnil) %*/
 		    }
-#line 15433 "parse.c"
+#line 14921 "parse.c"
     break;
 
-  case 726: /* f_opt: f_arg_asgn f_eq arg_value  */
+  case 726:
 #line 5830 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -15447,10 +14935,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), get_value($3)) %*/
 		    }
-#line 15446 "parse.c"
+#line 14934 "parse.c"
     break;
 
-  case 727: /* f_block_opt: f_arg_asgn f_eq primary_value  */
+  case 727:
 #line 5841 "parse.y"
                     {
 			p->cur_arg = 0;
@@ -15460,10 +14948,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_assoc_new(get_value(assignable(p, $1)), get_value($3)) %*/
 		    }
-#line 15459 "parse.c"
+#line 14947 "parse.c"
     break;
 
-  case 728: /* f_block_optarg: f_block_opt  */
+  case 728:
 #line 5852 "parse.y"
                     {
 		    /*%%%*/
@@ -15471,10 +14959,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 15470 "parse.c"
+#line 14958 "parse.c"
     break;
 
-  case 729: /* f_block_optarg: f_block_optarg ',' f_block_opt  */
+  case 729:
 #line 5859 "parse.y"
                     {
 		    /*%%%*/
@@ -15482,10 +14970,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15481 "parse.c"
+#line 14969 "parse.c"
     break;
 
-  case 730: /* f_optarg: f_opt  */
+  case 730:
 #line 5868 "parse.y"
                     {
 		    /*%%%*/
@@ -15493,10 +14981,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_new3(1, get_value($1)) %*/
 		    }
-#line 15492 "parse.c"
+#line 14980 "parse.c"
     break;
 
-  case 731: /* f_optarg: f_optarg ',' f_opt  */
+  case 731:
 #line 5875 "parse.y"
                     {
 		    /*%%%*/
@@ -15504,10 +14992,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15503 "parse.c"
+#line 14991 "parse.c"
     break;
 
-  case 734: /* f_rest_arg: restarg_mark "local variable or method"  */
+  case 734:
 #line 5888 "parse.y"
                     {
 			arg_var(p, shadowing_lvar(p, get_id((yyvsp[0].id))));
@@ -15516,10 +15004,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rest_param!($2) %*/
 		    }
-#line 15515 "parse.c"
+#line 15003 "parse.c"
     break;
 
-  case 735: /* f_rest_arg: restarg_mark  */
+  case 735:
 #line 5896 "parse.y"
                     {
 			arg_var(p, idFWD_REST);
@@ -15528,10 +15016,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rest_param!(Qnil) %*/
 		    }
-#line 15527 "parse.c"
+#line 15015 "parse.c"
     break;
 
-  case 738: /* f_block_arg: blkarg_mark "local variable or method"  */
+  case 738:
 #line 5910 "parse.y"
                     {
 			arg_var(p, shadowing_lvar(p, get_id((yyvsp[0].id))));
@@ -15540,10 +15028,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: blockarg!($2) %*/
 		    }
-#line 15539 "parse.c"
+#line 15027 "parse.c"
     break;
 
-  case 739: /* f_block_arg: blkarg_mark  */
+  case 739:
 #line 5918 "parse.y"
                     {
 			arg_var(p, idFWD_BLOCK);
@@ -15552,41 +15040,41 @@ yyreduce:
                     /*% %*/
 		    /*% ripper: blockarg!(Qnil) %*/
                     }
-#line 15551 "parse.c"
+#line 15039 "parse.c"
     break;
 
-  case 740: /* opt_f_block_arg: ',' f_block_arg  */
+  case 740:
 #line 5928 "parse.y"
                     {
 			(yyval.id) = (yyvsp[0].id);
 		    }
-#line 15559 "parse.c"
+#line 15047 "parse.c"
     break;
 
-  case 741: /* opt_f_block_arg: none  */
+  case 741:
 #line 5932 "parse.y"
                     {
 			(yyval.id) = Qnull;
 		    }
-#line 15567 "parse.c"
+#line 15055 "parse.c"
     break;
 
-  case 742: /* singleton: var_ref  */
+  case 742:
 #line 5938 "parse.y"
                     {
 			value_expr((yyvsp[0].node));
 			(yyval.node) = (yyvsp[0].node);
 		    }
-#line 15576 "parse.c"
+#line 15064 "parse.c"
     break;
 
-  case 743: /* $@51: %empty  */
+  case 743:
 #line 5942 "parse.y"
                       {SET_LEX_STATE(EXPR_BEG);}
-#line 15582 "parse.c"
+#line 15070 "parse.c"
     break;
 
-  case 744: /* singleton: '(' $@51 expr rparen  */
+  case 744:
 #line 5943 "parse.y"
                     {
 		    /*%%%*/
@@ -15609,10 +15097,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: paren!($3) %*/
 		    }
-#line 15608 "parse.c"
+#line 15096 "parse.c"
     break;
 
-  case 746: /* assoc_list: assocs trailer  */
+  case 746:
 #line 5968 "parse.y"
                     {
 		    /*%%%*/
@@ -15620,10 +15108,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoclist_from_args!($1) %*/
 		    }
-#line 15619 "parse.c"
+#line 15107 "parse.c"
     break;
 
-  case 748: /* assocs: assocs ',' assoc  */
+  case 748:
 #line 5979 "parse.y"
                     {
 		    /*%%%*/
@@ -15645,10 +15133,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: rb_ary_push($1, get_value($3)) %*/
 		    }
-#line 15644 "parse.c"
+#line 15132 "parse.c"
     break;
 
-  case 749: /* assoc: arg_value "=>" arg_value  */
+  case 749:
 #line 6002 "parse.y"
                     {
 		    /*%%%*/
@@ -15660,10 +15148,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_new!($1, $3) %*/
 		    }
-#line 15659 "parse.c"
+#line 15147 "parse.c"
     break;
 
-  case 750: /* assoc: "label" arg_value  */
+  case 750:
 #line 6013 "parse.y"
                     {
 		    /*%%%*/
@@ -15671,10 +15159,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_new!($1, $2) %*/
 		    }
-#line 15670 "parse.c"
+#line 15158 "parse.c"
     break;
 
-  case 751: /* assoc: "label"  */
+  case 751:
 #line 6020 "parse.y"
                     {
 		    /*%%%*/
@@ -15684,10 +15172,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_new!($1, Qnil) %*/
 		    }
-#line 15683 "parse.c"
+#line 15171 "parse.c"
     break;
 
-  case 752: /* assoc: "string literal" string_contents tLABEL_END arg_value  */
+  case 752:
 #line 6029 "parse.y"
                     {
 		    /*%%%*/
@@ -15696,10 +15184,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_new!(dyna_symbol!($2), $4) %*/
 		    }
-#line 15695 "parse.c"
+#line 15183 "parse.c"
     break;
 
-  case 753: /* assoc: "**arg" arg_value  */
+  case 753:
 #line 6037 "parse.y"
                     {
 		    /*%%%*/
@@ -15717,10 +15205,10 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_splat!($2) %*/
 		    }
-#line 15716 "parse.c"
+#line 15204 "parse.c"
     break;
 
-  case 754: /* assoc: "**arg"  */
+  case 754:
 #line 6054 "parse.y"
                     {
                         if (!local_id(p, idFWD_KWREST) ||
@@ -15733,40 +15221,40 @@ yyreduce:
 		    /*% %*/
 		    /*% ripper: assoc_splat!(Qnil) %*/
 		    }
-#line 15732 "parse.c"
+#line 15220 "parse.c"
     break;
 
-  case 778: /* term: ';'  */
+  case 778:
 #line 6114 "parse.y"
                       {yyerrok;token_flush(p);}
-#line 15738 "parse.c"
+#line 15226 "parse.c"
     break;
 
-  case 779: /* term: '\n'  */
+  case 779:
 #line 6116 "parse.y"
                     {
 			(yyloc).end_pos = (yyloc).beg_pos;
 			token_flush(p);
 		    }
-#line 15747 "parse.c"
+#line 15235 "parse.c"
     break;
 
-  case 781: /* terms: terms ';'  */
+  case 781:
 #line 6123 "parse.y"
                             {yyerrok;}
-#line 15753 "parse.c"
+#line 15241 "parse.c"
     break;
 
-  case 782: /* none: %empty  */
+  case 782:
 #line 6127 "parse.y"
                     {
 			(yyval.node) = Qnull;
 		    }
-#line 15761 "parse.c"
+#line 15249 "parse.c"
     break;
 
 
-#line 15765 "parse.c"
+#line 15253 "parse.c"
 
       default: break;
     }
@@ -15781,10 +15269,11 @@ yyreduce:
      case of YYERROR or YYBACKUP, subsequent parser actions might lead
      to an incorrect destructor call or verbose syntax error message
      before the lookahead is translated.  */
-  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);
+  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
   yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
 
   *++yyvsp = yyval;
   *++yylsp = yyloc;
@@ -15809,54 +15298,59 @@ yyreduce:
 yyerrlab:
   /* Make sure we have latest lookahead translation.  See comments at
      user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
+  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
+
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
       ++yynerrs;
+#if ! YYERROR_VERBOSE
+      yyerror (&yylloc, p, YY_("syntax error"));
+#else
+# define YYSYNTAX_ERROR yysyntax_error (p, &yymsg_alloc, &yymsg, \
+                                        yyssp, yytoken)
       {
-        yypcontext_t yyctx
-          = {yyssp, yytoken, &yylloc};
         char const *yymsgp = YY_("syntax error");
         int yysyntax_error_status;
-        yysyntax_error_status = yysyntax_error (p, &yymsg_alloc, &yymsg, &yyctx);
+        yysyntax_error_status = YYSYNTAX_ERROR;
         if (yysyntax_error_status == 0)
           yymsgp = yymsg;
-        else if (yysyntax_error_status == -1)
+        else if (yysyntax_error_status == 1)
           {
             if (yymsg != yymsgbuf)
               YYSTACK_FREE (yymsg);
-            yymsg = YY_CAST (char *,
-                             YYSTACK_ALLOC (YY_CAST (YYSIZE_T, yymsg_alloc)));
-            if (yymsg)
+            yymsg = YY_CAST (char *, YYSTACK_ALLOC (YY_CAST (YYSIZE_T, yymsg_alloc)));
+            if (!yymsg)
               {
-                yysyntax_error_status
-                  = yysyntax_error (p, &yymsg_alloc, &yymsg, &yyctx);
-                yymsgp = yymsg;
+                yymsg = yymsgbuf;
+                yymsg_alloc = sizeof yymsgbuf;
+                yysyntax_error_status = 2;
               }
             else
               {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = YYENOMEM;
+                yysyntax_error_status = YYSYNTAX_ERROR;
+                yymsgp = yymsg;
               }
           }
         yyerror (&yylloc, p, yymsgp);
-        if (yysyntax_error_status == YYENOMEM)
-          YYNOMEM;
+        if (yysyntax_error_status == 2)
+          goto yyexhaustedlab;
       }
+# undef YYSYNTAX_ERROR
+#endif
     }
 
   yyerror_range[1] = yylloc;
+
   if (yyerrstatus == 3)
     {
       /* If just tried and failed to reuse lookahead token after an
          error, discard it.  */
 
-      if (yychar <= END_OF_INPUT)
+      if (yychar <= YYEOF)
         {
           /* Return failure if at end of input.  */
-          if (yychar == END_OF_INPUT)
+          if (yychar == YYEOF)
             YYABORT;
         }
       else
@@ -15880,7 +15374,6 @@ yyerrorlab:
      label yyerrorlab therefore never appears in user code.  */
   if (0)
     YYERROR;
-  ++yynerrs;
 
   /* Do not reclaim the symbols of the rule whose action triggered
      this YYERROR.  */
@@ -15897,14 +15390,13 @@ yyerrorlab:
 yyerrlab1:
   yyerrstatus = 3;      /* Each real token shifted decrements this.  */
 
-  /* Pop stack until we find a state that shifts the error token.  */
   for (;;)
     {
       yyn = yypact[yystate];
       if (!yypact_value_is_default (yyn))
         {
-          yyn += YYSYMBOL_YYerror;
-          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
+          yyn += YYTERROR;
+          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
             {
               yyn = yytable[yyn];
               if (0 < yyn)
@@ -15918,7 +15410,7 @@ yyerrlab1:
 
       yyerror_range[1] = *yylsp;
       yydestruct ("Error: popping",
-                  YY_ACCESSING_SYMBOL (yystate), yyvsp, yylsp, p);
+                  yystos[yystate], yyvsp, yylsp, p);
       YYPOPSTACK (1);
       yystate = *yyssp;
       YY_STACK_PRINT (yyss, yyssp);
@@ -15929,11 +15421,13 @@ yyerrlab1:
   YY_IGNORE_MAYBE_UNINITIALIZED_END
 
   yyerror_range[2] = yylloc;
-  ++yylsp;
-  YYLLOC_DEFAULT (*yylsp, yyerror_range, 2);
+  /* Using YYLLOC is tempting, but would change the location of
+     the lookahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+  *++yylsp = yyloc;
 
   /* Shift the error token.  */
-  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
 
   yystate = yyn;
   goto yynewstate;
@@ -15944,7 +15438,7 @@ yyerrlab1:
 `-------------------------------------*/
 yyacceptlab:
   yyresult = 0;
-  goto yyreturnlab;
+  goto yyreturn;
 
 
 /*-----------------------------------.
@@ -15952,22 +15446,24 @@ yyacceptlab:
 `-----------------------------------*/
 yyabortlab:
   yyresult = 1;
-  goto yyreturnlab;
+  goto yyreturn;
 
 
-/*-----------------------------------------------------------.
-| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
-`-----------------------------------------------------------*/
+#if !defined yyoverflow || YYERROR_VERBOSE
+/*-------------------------------------------------.
+| yyexhaustedlab -- memory exhaustion comes here.  |
+`-------------------------------------------------*/
 yyexhaustedlab:
   yyerror (&yylloc, p, YY_("memory exhausted"));
   yyresult = 2;
-  goto yyreturnlab;
+  /* Fall through.  */
+#endif
 
 
-/*----------------------------------------------------------.
-| yyreturnlab -- parsing is finished, clean up and return.  |
-`----------------------------------------------------------*/
-yyreturnlab:
+/*-----------------------------------------------------.
+| yyreturn -- parsing is finished, return the result.  |
+`-----------------------------------------------------*/
+yyreturn:
   if (yychar != YYEMPTY)
     {
       /* Make sure we have latest lookahead translation.  See comments at
@@ -15983,18 +15479,19 @@ yyreturnlab:
   while (yyssp != yyss)
     {
       yydestruct ("Cleanup: popping",
-                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, yylsp, p);
+                  yystos[+*yyssp], yyvsp, yylsp, p);
       YYPOPSTACK (1);
     }
 #ifndef yyoverflow
   if (yyss != yyssa)
     YYSTACK_FREE (yyss);
 #endif
+#if YYERROR_VERBOSE
   if (yymsg != yymsgbuf)
     YYSTACK_FREE (yymsg);
+#endif
   return yyresult;
 }
-
 #line 6131 "parse.y"
 
 # undef p
--- ruby3.2-3.2.0.orig/parse.h
+++ ruby3.2-3.2.0/parse.h
@@ -1,8 +1,8 @@
-/* A Bison parser, made by GNU Bison 3.8.2.  */
+/* A Bison parser, made by GNU Bison 3.5.1.  */
 
 /* Bison interface for Yacc-like parsers in C
 
-   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
+   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2020 Free Software Foundation,
    Inc.
 
    This program is free software: you can redistribute it and/or modify
@@ -16,7 +16,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -31,9 +31,8 @@
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
-   especially those whose name start with YY_ or yy_.  They are
-   private implementation details that can be changed or removed.  */
+/* Undocumented macros, especially those whose name start with YY_,
+   are private implementation details.  Do not rely on them.  */
 
 #ifndef YY_YY_Y_TAB_H_INCLUDED
 # define YY_YY_Y_TAB_H_INCLUDED
@@ -45,145 +44,141 @@
 extern int yydebug;
 #endif
 
-/* Token kinds.  */
+/* Token type.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
   enum yytokentype
   {
-    YYEMPTY = -2,
-    END_OF_INPUT = 0,              /* "end-of-input"  */
-    YYerror = 256,                 /* error  */
-    YYUNDEF = 257,                 /* "invalid token"  */
-    keyword_class = 258,           /* "`class'"  */
-    keyword_module = 259,          /* "`module'"  */
-    keyword_def = 260,             /* "`def'"  */
-    keyword_undef = 261,           /* "`undef'"  */
-    keyword_begin = 262,           /* "`begin'"  */
-    keyword_rescue = 263,          /* "`rescue'"  */
-    keyword_ensure = 264,          /* "`ensure'"  */
-    keyword_end = 265,             /* "`end'"  */
-    keyword_if = 266,              /* "`if'"  */
-    keyword_unless = 267,          /* "`unless'"  */
-    keyword_then = 268,            /* "`then'"  */
-    keyword_elsif = 269,           /* "`elsif'"  */
-    keyword_else = 270,            /* "`else'"  */
-    keyword_case = 271,            /* "`case'"  */
-    keyword_when = 272,            /* "`when'"  */
-    keyword_while = 273,           /* "`while'"  */
-    keyword_until = 274,           /* "`until'"  */
-    keyword_for = 275,             /* "`for'"  */
-    keyword_break = 276,           /* "`break'"  */
-    keyword_next = 277,            /* "`next'"  */
-    keyword_redo = 278,            /* "`redo'"  */
-    keyword_retry = 279,           /* "`retry'"  */
-    keyword_in = 280,              /* "`in'"  */
-    keyword_do = 281,              /* "`do'"  */
-    keyword_do_cond = 282,         /* "`do' for condition"  */
-    keyword_do_block = 283,        /* "`do' for block"  */
-    keyword_do_LAMBDA = 284,       /* "`do' for lambda"  */
-    keyword_return = 285,          /* "`return'"  */
-    keyword_yield = 286,           /* "`yield'"  */
-    keyword_super = 287,           /* "`super'"  */
-    keyword_self = 288,            /* "`self'"  */
-    keyword_nil = 289,             /* "`nil'"  */
-    keyword_true = 290,            /* "`true'"  */
-    keyword_false = 291,           /* "`false'"  */
-    keyword_and = 292,             /* "`and'"  */
-    keyword_or = 293,              /* "`or'"  */
-    keyword_not = 294,             /* "`not'"  */
-    modifier_if = 295,             /* "`if' modifier"  */
-    modifier_unless = 296,         /* "`unless' modifier"  */
-    modifier_while = 297,          /* "`while' modifier"  */
-    modifier_until = 298,          /* "`until' modifier"  */
-    modifier_rescue = 299,         /* "`rescue' modifier"  */
-    keyword_alias = 300,           /* "`alias'"  */
-    keyword_defined = 301,         /* "`defined?'"  */
-    keyword_BEGIN = 302,           /* "`BEGIN'"  */
-    keyword_END = 303,             /* "`END'"  */
-    keyword__LINE__ = 304,         /* "`__LINE__'"  */
-    keyword__FILE__ = 305,         /* "`__FILE__'"  */
-    keyword__ENCODING__ = 306,     /* "`__ENCODING__'"  */
-    tIDENTIFIER = 307,             /* "local variable or method"  */
-    tFID = 308,                    /* "method"  */
-    tGVAR = 309,                   /* "global variable"  */
-    tIVAR = 310,                   /* "instance variable"  */
-    tCONSTANT = 311,               /* "constant"  */
-    tCVAR = 312,                   /* "class variable"  */
-    tLABEL = 313,                  /* "label"  */
-    tINTEGER = 314,                /* "integer literal"  */
-    tFLOAT = 315,                  /* "float literal"  */
-    tRATIONAL = 316,               /* "rational literal"  */
-    tIMAGINARY = 317,              /* "imaginary literal"  */
-    tCHAR = 318,                   /* "char literal"  */
-    tNTH_REF = 319,                /* "numbered reference"  */
-    tBACK_REF = 320,               /* "back reference"  */
-    tSTRING_CONTENT = 321,         /* "literal content"  */
-    tREGEXP_END = 322,             /* tREGEXP_END  */
-    tDUMNY_END = 323,              /* "dummy end"  */
-    tSP = 324,                     /* "escaped space"  */
-    tUPLUS = 132,                  /* "unary+"  */
-    tUMINUS = 133,                 /* "unary-"  */
-    tPOW = 134,                    /* "**"  */
-    tCMP = 135,                    /* "<=>"  */
-    tEQ = 140,                     /* "=="  */
-    tEQQ = 141,                    /* "==="  */
-    tNEQ = 142,                    /* "!="  */
-    tGEQ = 139,                    /* ">="  */
-    tLEQ = 138,                    /* "<="  */
-    tANDOP = 148,                  /* "&&"  */
-    tOROP = 149,                   /* "||"  */
-    tMATCH = 143,                  /* "=~"  */
-    tNMATCH = 144,                 /* "!~"  */
-    tDOT2 = 128,                   /* ".."  */
-    tDOT3 = 129,                   /* "..."  */
-    tBDOT2 = 130,                  /* "(.."  */
-    tBDOT3 = 131,                  /* "(..."  */
-    tAREF = 145,                   /* "[]"  */
-    tASET = 146,                   /* "[]="  */
-    tLSHFT = 136,                  /* "<<"  */
-    tRSHFT = 137,                  /* ">>"  */
-    tANDDOT = 150,                 /* "&."  */
-    tCOLON2 = 147,                 /* "::"  */
-    tCOLON3 = 325,                 /* ":: at EXPR_BEG"  */
-    tOP_ASGN = 326,                /* "operator-assignment"  */
-    tASSOC = 327,                  /* "=>"  */
-    tLPAREN = 328,                 /* "("  */
-    tLPAREN_ARG = 329,             /* "( arg"  */
-    tRPAREN = 330,                 /* ")"  */
-    tLBRACK = 331,                 /* "["  */
-    tLBRACE = 332,                 /* "{"  */
-    tLBRACE_ARG = 333,             /* "{ arg"  */
-    tSTAR = 334,                   /* "*"  */
-    tDSTAR = 335,                  /* "**arg"  */
-    tAMPER = 336,                  /* "&"  */
-    tLAMBDA = 337,                 /* "->"  */
-    tSYMBEG = 338,                 /* "symbol literal"  */
-    tSTRING_BEG = 339,             /* "string literal"  */
-    tXSTRING_BEG = 340,            /* "backtick literal"  */
-    tREGEXP_BEG = 341,             /* "regexp literal"  */
-    tWORDS_BEG = 342,              /* "word list"  */
-    tQWORDS_BEG = 343,             /* "verbatim word list"  */
-    tSYMBOLS_BEG = 344,            /* "symbol list"  */
-    tQSYMBOLS_BEG = 345,           /* "verbatim symbol list"  */
-    tSTRING_END = 346,             /* "terminator"  */
-    tSTRING_DEND = 347,            /* "'}'"  */
-    tSTRING_DBEG = 348,            /* tSTRING_DBEG  */
-    tSTRING_DVAR = 349,            /* tSTRING_DVAR  */
-    tLAMBEG = 350,                 /* tLAMBEG  */
-    tLABEL_END = 351,              /* tLABEL_END  */
-    tIGNORED_NL = 352,             /* tIGNORED_NL  */
-    tCOMMENT = 353,                /* tCOMMENT  */
-    tEMBDOC_BEG = 354,             /* tEMBDOC_BEG  */
-    tEMBDOC = 355,                 /* tEMBDOC  */
-    tEMBDOC_END = 356,             /* tEMBDOC_END  */
-    tHEREDOC_BEG = 357,            /* tHEREDOC_BEG  */
-    tHEREDOC_END = 358,            /* tHEREDOC_END  */
-    k__END__ = 359,                /* k__END__  */
-    tLOWEST = 360,                 /* tLOWEST  */
-    tUMINUS_NUM = 361,             /* tUMINUS_NUM  */
-    tLAST_TOKEN = 362              /* tLAST_TOKEN  */
+    END_OF_INPUT = 0,
+    keyword_class = 258,
+    keyword_module = 259,
+    keyword_def = 260,
+    keyword_undef = 261,
+    keyword_begin = 262,
+    keyword_rescue = 263,
+    keyword_ensure = 264,
+    keyword_end = 265,
+    keyword_if = 266,
+    keyword_unless = 267,
+    keyword_then = 268,
+    keyword_elsif = 269,
+    keyword_else = 270,
+    keyword_case = 271,
+    keyword_when = 272,
+    keyword_while = 273,
+    keyword_until = 274,
+    keyword_for = 275,
+    keyword_break = 276,
+    keyword_next = 277,
+    keyword_redo = 278,
+    keyword_retry = 279,
+    keyword_in = 280,
+    keyword_do = 281,
+    keyword_do_cond = 282,
+    keyword_do_block = 283,
+    keyword_do_LAMBDA = 284,
+    keyword_return = 285,
+    keyword_yield = 286,
+    keyword_super = 287,
+    keyword_self = 288,
+    keyword_nil = 289,
+    keyword_true = 290,
+    keyword_false = 291,
+    keyword_and = 292,
+    keyword_or = 293,
+    keyword_not = 294,
+    modifier_if = 295,
+    modifier_unless = 296,
+    modifier_while = 297,
+    modifier_until = 298,
+    modifier_rescue = 299,
+    keyword_alias = 300,
+    keyword_defined = 301,
+    keyword_BEGIN = 302,
+    keyword_END = 303,
+    keyword__LINE__ = 304,
+    keyword__FILE__ = 305,
+    keyword__ENCODING__ = 306,
+    tIDENTIFIER = 307,
+    tFID = 308,
+    tGVAR = 309,
+    tIVAR = 310,
+    tCONSTANT = 311,
+    tCVAR = 312,
+    tLABEL = 313,
+    tINTEGER = 314,
+    tFLOAT = 315,
+    tRATIONAL = 316,
+    tIMAGINARY = 317,
+    tCHAR = 318,
+    tNTH_REF = 319,
+    tBACK_REF = 320,
+    tSTRING_CONTENT = 321,
+    tREGEXP_END = 322,
+    tDUMNY_END = 323,
+    tSP = 324,
+    tUPLUS = 132,
+    tUMINUS = 133,
+    tPOW = 134,
+    tCMP = 135,
+    tEQ = 140,
+    tEQQ = 141,
+    tNEQ = 142,
+    tGEQ = 139,
+    tLEQ = 138,
+    tANDOP = 148,
+    tOROP = 149,
+    tMATCH = 143,
+    tNMATCH = 144,
+    tDOT2 = 128,
+    tDOT3 = 129,
+    tBDOT2 = 130,
+    tBDOT3 = 131,
+    tAREF = 145,
+    tASET = 146,
+    tLSHFT = 136,
+    tRSHFT = 137,
+    tANDDOT = 150,
+    tCOLON2 = 147,
+    tCOLON3 = 325,
+    tOP_ASGN = 326,
+    tASSOC = 327,
+    tLPAREN = 328,
+    tLPAREN_ARG = 329,
+    tRPAREN = 330,
+    tLBRACK = 331,
+    tLBRACE = 332,
+    tLBRACE_ARG = 333,
+    tSTAR = 334,
+    tDSTAR = 335,
+    tAMPER = 336,
+    tLAMBDA = 337,
+    tSYMBEG = 338,
+    tSTRING_BEG = 339,
+    tXSTRING_BEG = 340,
+    tREGEXP_BEG = 341,
+    tWORDS_BEG = 342,
+    tQWORDS_BEG = 343,
+    tSYMBOLS_BEG = 344,
+    tQSYMBOLS_BEG = 345,
+    tSTRING_END = 346,
+    tSTRING_DEND = 347,
+    tSTRING_DBEG = 348,
+    tSTRING_DVAR = 349,
+    tLAMBEG = 350,
+    tLABEL_END = 351,
+    tIGNORED_NL = 352,
+    tCOMMENT = 353,
+    tEMBDOC_BEG = 354,
+    tEMBDOC = 355,
+    tEMBDOC_END = 356,
+    tHEREDOC_BEG = 357,
+    tHEREDOC_END = 358,
+    k__END__ = 359,
+    tLOWEST = 360,
+    tUMINUS_NUM = 361,
+    tLAST_TOKEN = 362
   };
-  typedef enum yytokentype yytoken_kind_t;
 #endif
 
 /* Value type.  */
@@ -223,8 +218,6 @@ struct YYLTYPE
 
 
 
-
 int yyparse (struct parser_params *p);
 
-
 #endif /* !YY_YY_Y_TAB_H_INCLUDED  */
--- ruby3.2-3.2.0.orig/revision.h
+++ ruby3.2-3.2.0/revision.h
@@ -1,5 +1,8 @@
-#define RUBY_REVISION "a528908271"
-#define RUBY_FULL_REVISION "a528908271c678360d2d8ca232c178e7cdd340b4"
-#define RUBY_RELEASE_YEAR 2022
-#define RUBY_RELEASE_MONTH 12
-#define RUBY_RELEASE_DAY 25
+#define RUBY_REVISION "66a239a89e"
+#define RUBY_FULL_REVISION "66a239a89e3efd39c375dd0033b1ea6d0ce2a11f"
+#define RUBY_BRANCH_NAME "master"
+#define RUBY_LAST_COMMIT_TITLE "Revert to older debian compat\n"
+#define RUBY_RELEASE_DATETIME "2023-01-12T01:33:18Z"
+#define RUBY_RELEASE_YEAR 2023
+#define RUBY_RELEASE_MONTH 1
+#define RUBY_RELEASE_DAY 12
--- /dev/null
+++ ruby3.2-3.2.0/tmp/test_rubygems_20230111-75925-9eyzhn/userhome/.local/state/gem/last_update_check
@@ -0,0 +1 @@
+1673488777
\ No newline at end of file
--- /dev/null
+++ ruby3.2-3.2.0/tmp/test_rubygems_20230111-26723-9xyv3/userhome/.local/state/gem/last_update_check
@@ -0,0 +1 @@
+1673490138
\ No newline at end of file
